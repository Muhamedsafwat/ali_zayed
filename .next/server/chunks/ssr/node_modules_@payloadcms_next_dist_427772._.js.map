{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/templates/Minimal/index.tsx"],"sourcesContent":["import React from 'react'\n\nimport './index.scss'\n\nconst baseClass = 'template-minimal'\n\nexport type MinimalTemplateProps = {\n  children?: React.ReactNode\n  className?: string\n  style?: React.CSSProperties\n  width?: 'normal' | 'wide'\n}\n\nexport const MinimalTemplate: React.FC<MinimalTemplateProps> = (props) => {\n  const { children, className, style = {}, width = 'normal' } = props\n\n  const classes = [className, baseClass, `${baseClass}--width-${width}`].filter(Boolean).join(' ')\n\n  return (\n    <section className={classes} style={style}>\n      <div className={`${baseClass}__wrap`}>{children}</div>\n    </section>\n  )\n}\n"],"names":["React","baseClass","MinimalTemplate","props","children","className","style","width","classes","filter","Boolean","join","_jsx"],"mappings":";;;;AAAA,OAAOA,KAAA,MAAW;;;AAIlB,MAAMC,SAAA,GAAY;AASX,MAAMC,eAAA,IAAmDC,KAAA;IAC9D,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,KAAA,GAAQ,CAAC,CAAC,EAAEC,KAAA,GAAQ,QAAA,EAAU,GAAGJ,KAAA;IAE9D,MAAMK,OAAA,GAAU;QAACH,SAAA;QAAWJ,SAAA;QAAW,GAAGA,SAAA,CAAA,QAAA,EAAoBM,KAAA,EAAO;KAAC,CAACE,MAAM,CAACC,OAAA,EAASC,IAAI,CAAC;IAE5F,OAAA,WAAA,GACEC,kOAAAA,AAAA,EAAC,WAAA;QAAQP,SAAA,EAAWG,OAAA;QAASF,KAAA,EAAOA,KAAA;kBAClC,WAAA,+NAAAM,MAAAA,AAAA,EAAC,OAAA;YAAIP,SAAA,EAAW,GAAGJ,SAAA,CAAA,MAAA,CAAiB;sBAAGG;;;AAG7C","ignoreList":[0]}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Account/index.client.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AccountClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccountClient() from the server but AccountClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Account/index.client.js <module evaluation>\",\n    \"AccountClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,kGACA","ignoreList":[0]}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Account/index.client.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AccountClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccountClient() from the server but AccountClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Account/index.client.js\",\n    \"AccountClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8EACA","ignoreList":[0]}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"file":"index.client.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Account/index.client.tsx"],"sourcesContent":["'use client'\nimport { type StepNavItem, useStepNav, useTranslation } from '@payloadcms/ui'\nimport React from 'react'\n\nexport const AccountClient: React.FC = () => {\n  const { setStepNav } = useStepNav()\n  const { t } = useTranslation()\n\n  React.useEffect(() => {\n    const nav: StepNavItem[] = []\n\n    nav.push({\n      label: t('authentication:account'),\n      url: '/account',\n    })\n\n    setStepNav(nav)\n  }, [setStepNav, t])\n\n  return null\n}\n"],"names":["c","_c","useStepNav","useTranslation","React","AccountClient","$","setStepNav","t","t0","t1","nav","push","label","url","useEffect"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Account/ResetPreferences/index.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ResetPreferences = registerClientReference(\n    function() { throw new Error(\"Attempted to call ResetPreferences() from the server but ResetPreferences is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Account/ResetPreferences/index.js <module evaluation>\",\n    \"ResetPreferences\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,4GACA","ignoreList":[0]}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Account/ResetPreferences/index.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ResetPreferences = registerClientReference(\n    function() { throw new Error(\"Attempted to call ResetPreferences() from the server but ResetPreferences is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Account/ResetPreferences/index.js\",\n    \"ResetPreferences\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,wFACA","ignoreList":[0]}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Account/ResetPreferences/index.tsx"],"sourcesContent":["'use client'\nimport type { User } from 'payload'\n\nimport { Button, ConfirmationModal, toast, useModal, useTranslation } from '@payloadcms/ui'\nimport * as qs from 'qs-esm'\nimport { Fragment, useCallback } from 'react'\n\nconst confirmResetModalSlug = 'confirm-reset-modal'\n\nexport const ResetPreferences: React.FC<{\n  readonly apiRoute: string\n  readonly user?: User\n}> = ({ apiRoute, user }) => {\n  const { openModal } = useModal()\n  const { t } = useTranslation()\n\n  const handleResetPreferences = useCallback(async () => {\n    if (!user) {\n      return\n    }\n\n    const stringifiedQuery = qs.stringify(\n      {\n        depth: 0,\n        where: {\n          user: {\n            id: {\n              equals: user.id,\n            },\n          },\n        },\n      },\n      { addQueryPrefix: true },\n    )\n\n    try {\n      const res = await fetch(`${apiRoute}/payload-preferences${stringifiedQuery}`, {\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        method: 'DELETE',\n      })\n\n      const json = await res.json()\n      const message = json.message\n\n      if (res.ok) {\n        toast.success(message)\n      } else {\n        toast.error(message)\n      }\n    } catch (_err) {\n      // swallow error\n    }\n  }, [apiRoute, user])\n\n  return (\n    <Fragment>\n      <div>\n        <Button buttonStyle=\"secondary\" onClick={() => openModal(confirmResetModalSlug)}>\n          {t('general:resetPreferences')}\n        </Button>\n      </div>\n      <ConfirmationModal\n        body={t('general:resetPreferencesDescription')}\n        confirmingLabel={t('general:resettingPreferences')}\n        heading={t('general:resetPreferences')}\n        modalSlug={confirmResetModalSlug}\n        onConfirm={handleResetPreferences}\n      />\n    </Fragment>\n  )\n}\n"],"names":["c","_c","Button","ConfirmationModal","toast","useModal","useTranslation","qs","Fragment","useCallback","confirmResetModalSlug","ResetPreferences","t0","$","apiRoute","user","openModal","t","t1","stringifiedQuery","stringify","depth","where","id","equals","addQueryPrefix","res","fetch","credentials","headers","method","json","message","ok","success","error","t2","_err","handleResetPreferences","t3","_jsxs","children","_jsx","buttonStyle","onClick","body","confirmingLabel","heading","modalSlug","onConfirm"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Account/ToggleTheme/index.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ToggleTheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call ToggleTheme() from the server but ToggleTheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Account/ToggleTheme/index.js <module evaluation>\",\n    \"ToggleTheme\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,uGACA","ignoreList":[0]}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Account/ToggleTheme/index.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ToggleTheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call ToggleTheme() from the server but ToggleTheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Account/ToggleTheme/index.js\",\n    \"ToggleTheme\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mFACA","ignoreList":[0]}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Account/ToggleTheme/index.tsx"],"sourcesContent":["'use client'\n\nimport { RadioGroupField, useTheme, useTranslation } from '@payloadcms/ui'\nimport React, { useCallback } from 'react'\n\nexport const ToggleTheme: React.FC = () => {\n  const { autoMode, setTheme, theme } = useTheme()\n  const { t } = useTranslation()\n\n  const onChange = useCallback(\n    (newTheme) => {\n      setTheme(newTheme)\n    },\n    [setTheme],\n  )\n\n  return (\n    <RadioGroupField\n      disableModifyingForm={true}\n      field={{\n        name: 'theme',\n        label: t('general:adminTheme'),\n        options: [\n          {\n            label: t('general:automatic'),\n            value: 'auto',\n          },\n          {\n            label: t('general:light'),\n            value: 'light',\n          },\n          {\n            label: t('general:dark'),\n            value: 'dark',\n          },\n        ],\n      }}\n      onChange={onChange}\n      path=\"theme\"\n      value={autoMode ? 'auto' : theme}\n    />\n  )\n}\n"],"names":["c","_c","RadioGroupField","useTheme","useTranslation","React","useCallback","ToggleTheme","$","autoMode","setTheme","theme","t","t0","newTheme","onChange","t1","_jsx","disableModifyingForm","field","name","label","options","value","path"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Account/Settings/LanguageSelector.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LanguageSelector = registerClientReference(\n    function() { throw new Error(\"Attempted to call LanguageSelector() from the server but LanguageSelector is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Account/Settings/LanguageSelector.js <module evaluation>\",\n    \"LanguageSelector\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,+GACA","ignoreList":[0]}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Account/Settings/LanguageSelector.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LanguageSelector = registerClientReference(\n    function() { throw new Error(\"Attempted to call LanguageSelector() from the server but LanguageSelector is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Account/Settings/LanguageSelector.js\",\n    \"LanguageSelector\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,2FACA","ignoreList":[0]}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"file":"LanguageSelector.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Account/Settings/LanguageSelector.tsx"],"sourcesContent":["'use client'\nimport type { AcceptedLanguages } from '@payloadcms/translations'\nimport type { ReactSelectOption } from '@payloadcms/ui'\nimport type { LanguageOptions } from 'payload'\n\nimport { ReactSelect, useTranslation } from '@payloadcms/ui'\nimport React from 'react'\n\nexport const LanguageSelector: React.FC<{\n  languageOptions: LanguageOptions\n}> = (props) => {\n  const { languageOptions } = props\n\n  const { i18n, switchLanguage } = useTranslation()\n\n  return (\n    <ReactSelect\n      inputId=\"language-select\"\n      isClearable={false}\n      onChange={async (option: ReactSelectOption<AcceptedLanguages>) => {\n        await switchLanguage(option.value)\n      }}\n      options={languageOptions}\n      value={languageOptions.find((language) => language.value === i18n.language)}\n    />\n  )\n}\n"],"names":["c","_c","ReactSelect","useTranslation","React","LanguageSelector","props","$","languageOptions","i18n","switchLanguage","t0","option","value","t1","language","t2","_jsx","inputId","isClearable","onChange","options","find"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Account/Settings/index.tsx"],"sourcesContent":["import type { I18n } from '@payloadcms/translations'\nimport type { BasePayload, Config, LanguageOptions, User } from 'payload'\n\nimport { FieldLabel } from '@payloadcms/ui'\nimport React from 'react'\n\nimport { ResetPreferences } from '../ResetPreferences/index.js'\nimport './index.scss'\nimport { ToggleTheme } from '../ToggleTheme/index.js'\nimport { LanguageSelector } from './LanguageSelector.js'\n\nconst baseClass = 'payload-settings'\n\nexport const Settings: React.FC<{\n  readonly className?: string\n  readonly i18n: I18n\n  readonly languageOptions: LanguageOptions\n  readonly payload: BasePayload\n  readonly theme: Config['admin']['theme']\n  readonly user?: User\n}> = (props) => {\n  const { className, i18n, languageOptions, payload, theme, user } = props\n\n  const apiRoute = payload.config.routes.api\n\n  return (\n    <div className={[baseClass, className].filter(Boolean).join(' ')}>\n      <h3>{i18n.t('general:payloadSettings')}</h3>\n      <div className={`${baseClass}__language`}>\n        <FieldLabel htmlFor=\"language-select\" label={i18n.t('general:language')} />\n        <LanguageSelector languageOptions={languageOptions} />\n      </div>\n      {theme === 'all' && <ToggleTheme />}\n      <ResetPreferences apiRoute={apiRoute} user={user} />\n    </div>\n  )\n}\n"],"names":["FieldLabel","React","ResetPreferences","ToggleTheme","LanguageSelector","baseClass","Settings","props","className","i18n","languageOptions","payload","theme","user","apiRoute","config","routes","api","_jsxs","filter","Boolean","join","_jsx","t","htmlFor","label"],"mappings":";;;;AAIA,OAAOC,KAAA,MAAW;AAElB,SAASC,gBAAgB,QAAQ;AAEjC,SAASC,WAAW,QAAQ;AAC5B,SAASC,gBAAgB,QAAQ;AANjC,SAASJ,UAAU,QAAQ;;;;;;;AAQ3B,MAAMK,SAAA,GAAY;AAEX,MAAMC,QAAA,IAOPC,KAAA;IACJ,MAAM,EAAEC,SAAS,EAAEC,IAAI,EAAEC,eAAe,EAAEC,OAAO,EAAEC,KAAK,EAAEC,IAAAA,EAAM,GAAGN,KAAA;IAEnE,MAAMO,QAAA,GAAWH,OAAA,CAAQI,MAAM,CAACC,MAAM,CAACC,GAAG;IAE1C,OAAA,WAAA,+NACEC,OAAAA,AAAA,EAAC,OAAA;QAAIV,SAAA,EAAW;YAACH,SAAA;YAAWG,SAAA;SAAU,CAACW,MAAM,CAACC,OAAA,EAASC,IAAI,CAAC;;sPAC1DC,MAAAA,AAAA,EAAC,MAAA;0BAAIb,IAAA,CAAKc,CAAC,CAAC;;sPACZL,OAAAA,AAAA,EAAC,OAAA;gBAAIV,SAAA,EAAW,GAAGH,SAAA,CAAA,UAAA,CAAqB;;8PACtCiB,MAAAA,AAAA,2KAACtB,aAAA,EAAA;wBAAWwB,OAAA,EAAQ;wBAAkBC,KAAA,EAAOhB,IAAA,CAAKc,CAAC,CAAC;;8PACpDD,MAAA,AAAAA,mMAAClB,mBAAA,EAAA;wBAAiBM,eAAA,EAAiBA;;;;YAEpCE,KAAA,KAAU,SAAA,WAAA,+NAASU,MAAAA,AAAA,2LAACnB,cAAA,EAAA,CAAA;Y,W,+NACrBmB,MAAAA,AAAA,gMAACpB,mBAAA,EAAA;gBAAiBY,QAAA,EAAUA,QAAA;gBAAUD,IAAA,EAAMA;;;;AAGlD","ignoreList":[0]}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"file":"meta.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Account/meta.ts"],"sourcesContent":["import type { GenerateViewMetadata } from '../Root/index.js'\n\nimport { meta } from '../../utilities/meta.js'\n\nexport const generateAccountMetadata: GenerateViewMetadata = async ({ config, i18n: { t } }) =>\n  meta({\n    description: `${t('authentication:accountOfCurrentUser')}`,\n    keywords: `${t('authentication:account')}`,\n    serverURL: config.serverURL,\n    title: t('authentication:account'),\n    ...(config.admin.meta || {}),\n  })\n"],"names":["meta","generateAccountMetadata","config","i18n","t","description","keywords","serverURL","title","admin"],"mappings":";;;AAEA,SAASA,IAAI,QAAQ;;AAEd,MAAMC,uBAAA,GAAgD,MAAAA,CAAO,EAAEC,MAAM,EAAEC,IAAA,EAAM,EAAEC,CAAAA,EAAC,EAAI,yKACzFJ,OAAAA,AAAA,EAAK;QACHK,WAAA,EAAa,GAAGD,CAAA,CAAE,wCAAwC;QAC1DE,QAAA,EAAU,GAAGF,CAAA,CAAE,2BAA2B;QAC1CG,SAAA,EAAWL,MAAA,CAAOK,SAAS;QAC3BC,KAAA,EAAOJ,CAAA,CAAE;QACT,GAAIF,MAAA,CAAOO,KAAK,CAACT,IAAI,IAAI,CAAC,CAAC;IAC7B","ignoreList":[0]}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Account/index.tsx"],"sourcesContent":["import type { AdminViewServerProps, DocumentViewServerPropsOnly } from 'payload'\n\nimport { DocumentInfoProvider, EditDepthProvider, HydrateAuthProvider } from '@payloadcms/ui'\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport { buildFormState } from '@payloadcms/ui/utilities/buildFormState'\nimport { notFound } from 'next/navigation.js'\nimport React from 'react'\n\nimport { DocumentHeader } from '../../elements/DocumentHeader/index.js'\nimport { getDocPreferences } from '../Document/getDocPreferences.js'\nimport { getDocumentData } from '../Document/getDocumentData.js'\nimport { getDocumentPermissions } from '../Document/getDocumentPermissions.js'\nimport { getIsLocked } from '../Document/getIsLocked.js'\nimport { getVersions } from '../Document/getVersions.js'\nimport { EditView } from '../Edit/index.js'\nimport { AccountClient } from './index.client.js'\nimport { Settings } from './Settings/index.js'\n\nexport { generateAccountMetadata } from './meta.js'\n\nexport async function Account({ initPageResult, params, searchParams }: AdminViewServerProps) {\n  const {\n    languageOptions,\n    locale,\n    permissions,\n    req,\n    req: {\n      i18n,\n      payload,\n      payload: { config },\n      user,\n    },\n  } = initPageResult\n\n  const {\n    admin: { theme, user: userSlug },\n    routes: { api },\n    serverURL,\n  } = config\n\n  const collectionConfig = payload?.collections?.[userSlug]?.config\n\n  if (collectionConfig && user?.id) {\n    // Fetch the data required for the view\n    const data = await getDocumentData({\n      id: user.id,\n      collectionSlug: collectionConfig.slug,\n      locale,\n      payload,\n      req,\n      user,\n    })\n\n    if (!data) {\n      throw new Error('not-found')\n    }\n\n    // Get document preferences\n    const docPreferences = await getDocPreferences({\n      id: user.id,\n      collectionSlug: collectionConfig.slug,\n      payload,\n      user,\n    })\n\n    // Get permissions\n    const { docPermissions, hasPublishPermission, hasSavePermission } =\n      await getDocumentPermissions({\n        id: user.id,\n        collectionConfig,\n        data,\n        req,\n      })\n\n    // Build initial form state from data\n    const { state: formState } = await buildFormState({\n      id: user.id,\n      collectionSlug: collectionConfig.slug,\n      data,\n      docPermissions,\n      docPreferences,\n      locale: locale?.code,\n      operation: 'update',\n      renderAllFields: true,\n      req,\n      schemaPath: collectionConfig.slug,\n      skipValidation: true,\n    })\n\n    // Fetch document lock state\n    const { currentEditor, isLocked, lastUpdateTime } = await getIsLocked({\n      id: user.id,\n      collectionConfig,\n      isEditing: true,\n      req,\n    })\n\n    // Get all versions required for UI\n    const { hasPublishedDoc, mostRecentVersionIsAutosaved, unpublishedVersionCount, versionCount } =\n      await getVersions({\n        id: user.id,\n        collectionConfig,\n        doc: data,\n        docPermissions,\n        locale: locale?.code,\n        payload,\n        user,\n      })\n\n    return (\n      <DocumentInfoProvider\n        AfterFields={\n          <Settings\n            i18n={i18n}\n            languageOptions={languageOptions}\n            payload={payload}\n            theme={theme}\n            user={user}\n          />\n        }\n        apiURL={`${serverURL}${api}/${userSlug}${user?.id ? `/${user.id}` : ''}`}\n        collectionSlug={userSlug}\n        currentEditor={currentEditor}\n        docPermissions={docPermissions}\n        hasPublishedDoc={hasPublishedDoc}\n        hasPublishPermission={hasPublishPermission}\n        hasSavePermission={hasSavePermission}\n        id={user?.id}\n        initialData={data}\n        initialState={formState}\n        isEditing\n        isLocked={isLocked}\n        lastUpdateTime={lastUpdateTime}\n        mostRecentVersionIsAutosaved={mostRecentVersionIsAutosaved}\n        unpublishedVersionCount={unpublishedVersionCount}\n        versionCount={versionCount}\n      >\n        <EditDepthProvider>\n          <DocumentHeader\n            collectionConfig={collectionConfig}\n            hideTabs\n            i18n={i18n}\n            payload={payload}\n            permissions={permissions}\n          />\n          <HydrateAuthProvider permissions={permissions} />\n          {RenderServerComponent({\n            Component: config.admin?.components?.views?.account?.Component,\n            Fallback: EditView,\n            importMap: payload.importMap,\n            serverProps: {\n              doc: data,\n              i18n,\n              initPageResult,\n              locale,\n              params,\n              payload,\n              permissions,\n              routeSegments: [],\n              searchParams,\n              user,\n            } satisfies DocumentViewServerPropsOnly,\n          })}\n          <AccountClient />\n        </EditDepthProvider>\n      </DocumentInfoProvider>\n    )\n  }\n\n  return notFound()\n}\n"],"names":["DocumentInfoProvider","EditDepthProvider","HydrateAuthProvider","RenderServerComponent","buildFormState","notFound","React","DocumentHeader","getDocPreferences","getDocumentData","getDocumentPermissions","getIsLocked","getVersions","EditView","AccountClient","Settings","generateAccountMetadata","Account","initPageResult","params","searchParams","languageOptions","locale","permissions","req","i18n","payload","config","user","admin","theme","userSlug","routes","api","serverURL","collectionConfig","collections","id","data","collectionSlug","slug","Error","docPreferences","docPermissions","hasPublishPermission","hasSavePermission","state","formState","code","operation","renderAllFields","schemaPath","skipValidation","currentEditor","isLocked","lastUpdateTime","isEditing","hasPublishedDoc","mostRecentVersionIsAutosaved","unpublishedVersionCount","versionCount","doc","_jsx","AfterFields","apiURL","initialData","initialState","_jsxs","hideTabs","Component","components","views","account","Fallback","importMap","serverProps","routeSegments"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/CreateFirstUser/index.client.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CreateFirstUserClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call CreateFirstUserClient() from the server but CreateFirstUserClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/CreateFirstUser/index.client.js <module evaluation>\",\n    \"CreateFirstUserClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,0GACA","ignoreList":[0]}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/CreateFirstUser/index.client.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CreateFirstUserClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call CreateFirstUserClient() from the server but CreateFirstUserClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/CreateFirstUser/index.client.js\",\n    \"CreateFirstUserClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,sFACA","ignoreList":[0]}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"file":"index.client.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/CreateFirstUser/index.client.tsx"],"sourcesContent":["'use client'\nimport type { FormProps, UserWithToken } from '@payloadcms/ui'\nimport type {\n  DocumentPreferences,\n  FormState,\n  LoginWithUsernameOptions,\n  SanitizedDocumentPermissions,\n} from 'payload'\n\nimport {\n  ConfirmPasswordField,\n  EmailAndUsernameFields,\n  Form,\n  FormSubmit,\n  PasswordField,\n  RenderFields,\n  useAuth,\n  useConfig,\n  useServerFunctions,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { abortAndIgnore, handleAbortRef } from '@payloadcms/ui/shared'\nimport React, { useEffect } from 'react'\n\nexport const CreateFirstUserClient: React.FC<{\n  docPermissions: SanitizedDocumentPermissions\n  docPreferences: DocumentPreferences\n  initialState: FormState\n  loginWithUsername?: false | LoginWithUsernameOptions\n  userSlug: string\n}> = ({ docPermissions, docPreferences, initialState, loginWithUsername, userSlug }) => {\n  const {\n    config: {\n      routes: { admin, api: apiRoute },\n      serverURL,\n    },\n    getEntityConfig,\n  } = useConfig()\n\n  const { getFormState } = useServerFunctions()\n\n  const { t } = useTranslation()\n  const { setUser } = useAuth()\n\n  const abortOnChangeRef = React.useRef<AbortController>(null)\n\n  const collectionConfig = getEntityConfig({ collectionSlug: userSlug })\n\n  const onChange: FormProps['onChange'][0] = React.useCallback(\n    async ({ formState: prevFormState, submitted }) => {\n      const controller = handleAbortRef(abortOnChangeRef)\n\n      const response = await getFormState({\n        collectionSlug: userSlug,\n        docPermissions,\n        docPreferences,\n        formState: prevFormState,\n        operation: 'create',\n        schemaPath: userSlug,\n        signal: controller.signal,\n        skipValidation: !submitted,\n      })\n\n      abortOnChangeRef.current = null\n\n      if (response && response.state) {\n        return response.state\n      }\n    },\n    [userSlug, getFormState, docPermissions, docPreferences],\n  )\n\n  const handleFirstRegister = (data: UserWithToken) => {\n    setUser(data)\n  }\n\n  useEffect(() => {\n    const abortOnChange = abortOnChangeRef.current\n\n    return () => {\n      abortAndIgnore(abortOnChange)\n    }\n  }, [])\n\n  return (\n    <Form\n      action={`${serverURL}${apiRoute}/${userSlug}/first-register`}\n      initialState={initialState}\n      method=\"POST\"\n      onChange={[onChange]}\n      onSuccess={handleFirstRegister}\n      redirect={admin}\n      validationOperation=\"create\"\n    >\n      <EmailAndUsernameFields\n        className=\"emailAndUsername\"\n        loginWithUsername={loginWithUsername}\n        operation=\"create\"\n        readOnly={false}\n        t={t}\n      />\n      <PasswordField\n        autoComplete=\"off\"\n        field={{\n          name: 'password',\n          label: t('authentication:newPassword'),\n          required: true,\n        }}\n        path=\"password\"\n      />\n      <ConfirmPasswordField />\n      <RenderFields\n        fields={collectionConfig.fields}\n        forceRender\n        parentIndexPath=\"\"\n        parentPath=\"\"\n        parentSchemaPath={userSlug}\n        permissions={true}\n        readOnly={false}\n      />\n      <FormSubmit size=\"large\">{t('general:create')}</FormSubmit>\n    </Form>\n  )\n}\n"],"names":["ConfirmPasswordField","EmailAndUsernameFields","Form","FormSubmit","PasswordField","RenderFields","useAuth","useConfig","useServerFunctions","useTranslation","abortAndIgnore","handleAbortRef","React","useEffect","CreateFirstUserClient","docPermissions","docPreferences","initialState","loginWithUsername","userSlug","config","routes","admin","api","apiRoute","serverURL","getEntityConfig","getFormState","t","setUser","abortOnChangeRef","useRef","collectionConfig","collectionSlug","onChange","useCallback","formState","prevFormState","submitted","controller","response","operation","schemaPath","signal","skipValidation","current","state","handleFirstRegister","data","abortOnChange","_jsxs","action","method","onSuccess","redirect","validationOperation","_jsx","className","readOnly","autoComplete","field","name","label","required","path","fields","forceRender","parentIndexPath","parentPath","parentSchemaPath","permissions","size"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"file":"meta.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/CreateFirstUser/meta.ts"],"sourcesContent":["import type { GenerateViewMetadata } from '../Root/index.js'\n\nimport { meta } from '../../utilities/meta.js'\n\nexport const generateCreateFirstUserMetadata: GenerateViewMetadata = async ({\n  config,\n  i18n: { t },\n}) =>\n  meta({\n    description: t('authentication:createFirstUser'),\n    keywords: t('general:create'),\n    serverURL: config.serverURL,\n    title: t('authentication:createFirstUser'),\n    ...(config.admin.meta || {}),\n  })\n"],"names":["meta","generateCreateFirstUserMetadata","config","i18n","t","description","keywords","serverURL","title","admin"],"mappings":";;;AAEA,SAASA,IAAI,QAAQ;;AAEd,MAAMC,+BAAA,GAAwD,MAAAA,CAAO,EAC1EC,MAAM,EACNC,IAAA,EAAM,EAAEC,CAAAA,EAAC,EACV,yKACCJ,OAAAA,AAAA,EAAK;QACHK,WAAA,EAAaD,CAAA,CAAE;QACfE,QAAA,EAAUF,CAAA,CAAE;QACZG,SAAA,EAAWL,MAAA,CAAOK,SAAS;QAC3BC,KAAA,EAAOJ,CAAA,CAAE;QACT,GAAIF,MAAA,CAAOO,KAAK,CAACT,IAAI,IAAI,CAAC,CAAC;IAC7B","ignoreList":[0]}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/CreateFirstUser/index.tsx"],"sourcesContent":["import type { AdminViewServerProps } from 'payload'\n\nimport { buildFormState } from '@payloadcms/ui/utilities/buildFormState'\nimport React from 'react'\n\nimport { getDocPreferences } from '../Document/getDocPreferences.js'\nimport { getDocumentData } from '../Document/getDocumentData.js'\nimport { getDocumentPermissions } from '../Document/getDocumentPermissions.js'\nimport { CreateFirstUserClient } from './index.client.js'\nimport './index.scss'\n\nexport { generateCreateFirstUserMetadata } from './meta.js'\n\nexport async function CreateFirstUserView({ initPageResult }: AdminViewServerProps) {\n  const {\n    locale,\n    req,\n    req: {\n      payload: {\n        collections,\n        config: {\n          admin: { user: userSlug },\n        },\n      },\n    },\n  } = initPageResult\n\n  const collectionConfig = collections?.[userSlug]?.config\n  const { auth: authOptions } = collectionConfig\n  const loginWithUsername = authOptions.loginWithUsername\n\n  // Fetch the data required for the view\n  const data = await getDocumentData({\n    collectionSlug: collectionConfig.slug,\n    locale,\n    payload: req.payload,\n    req,\n    user: req.user,\n  })\n\n  // Get document preferences\n  const docPreferences = await getDocPreferences({\n    collectionSlug: collectionConfig.slug,\n    payload: req.payload,\n    user: req.user,\n  })\n\n  // Get permissions\n  const { docPermissions } = await getDocumentPermissions({\n    collectionConfig,\n    data,\n    req,\n  })\n\n  // Build initial form state from data\n  const { state: formState } = await buildFormState({\n    collectionSlug: collectionConfig.slug,\n    data,\n    docPermissions,\n    docPreferences,\n    locale: locale?.code,\n    operation: 'create',\n    renderAllFields: true,\n    req,\n    schemaPath: collectionConfig.slug,\n    skipValidation: true,\n  })\n\n  return (\n    <div className=\"create-first-user\">\n      <h1>{req.t('general:welcome')}</h1>\n      <p>{req.t('authentication:beginCreateFirstUser')}</p>\n      <CreateFirstUserClient\n        docPermissions={docPermissions}\n        docPreferences={docPreferences}\n        initialState={formState}\n        loginWithUsername={loginWithUsername}\n        userSlug={userSlug}\n      />\n    </div>\n  )\n}\n"],"names":["buildFormState","React","getDocPreferences","getDocumentData","getDocumentPermissions","CreateFirstUserClient","generateCreateFirstUserMetadata","CreateFirstUserView","initPageResult","locale","req","payload","collections","config","admin","user","userSlug","collectionConfig","auth","authOptions","loginWithUsername","data","collectionSlug","slug","docPreferences","docPermissions","state","formState","code","operation","renderAllFields","schemaPath","skipValidation","_jsxs","className","_jsx","t","initialState"],"mappings":";;;AAMA,SAASG,eAAe,QAAQ;AADhC,SAASD,iBAAiB,QAAQ;AAElC,SAASE,sBAAsB,QAAQ;AALvC,SAASJ,cAAc,QAAQ;;AAM/B,SAASK,qBAAqB,QAAQ;;;;;;;;;AAK/B,eAAeE,oBAAoB,EAAEC,cAAAA,EAAsC;IAChF,MAAM,EACJC,MAAM,EACNC,GAAG,EACHA,GAAA,EAAK,EACHC,OAAA,EAAS,EACPC,WAAW,EACXC,MAAA,EAAQ,EACNC,KAAA,EAAO,EAAEC,IAAA,EAAMC,QAAAA,EAAQ,EAAE,EAC1B,EACF,EAEJ,GAAGR,cAAA;IAEJ,MAAMS,gBAAA,GAAmBL,WAAA,EAAA,CAAcI,QAAA,CAAS,EAAEH,MAAA;IAClD,MAAM,EAAEK,IAAA,EAAMC,WAAAA,EAAa,GAAGF,gBAAA;IAC9B,MAAMG,iBAAA,GAAoBD,WAAA,CAAYC,iBAAiB;IAEvD,uCAAA;IACA,MAAMC,IAAA,GAAO,UAAMlB,uMAAAA,AAAA,EAAgB;QACjCmB,cAAA,EAAgBL,gBAAA,CAAiBM,IAAI;QACrCd,MAAA;QACAE,OAAA,EAASD,GAAA,CAAIC,OAAO;QACpBD,GAAA;QACAK,IAAA,EAAML,GAAA,CAAIK,IAAAA;IACZ;IAEA,2BAAA;IACA,MAAMS,cAAA,GAAiB,iMAAMtB,oBAAAA,AAAA,EAAkB;QAC7CoB,cAAA,EAAgBL,gBAAA,CAAiBM,IAAI;QACrCZ,OAAA,EAASD,GAAA,CAAIC,OAAO;QACpBI,IAAA,EAAML,GAAA,CAAIK,IAAAA;IACZ;IAEA,kBAAA;IACA,MAAM,EAAEU,cAAAA,EAAgB,GAAG,sMAAMrB,yBAAAA,AAAA,EAAuB;QACtDa,gBAAA;QACAI,IAAA;QACAX;IACF;IAEA,qCAAA;IACA,MAAM,EAAEgB,KAAA,EAAOC,SAAAA,EAAW,GAAG,oLAAM3B,iBAAAA,AAAA,EAAe;QAChDsB,cAAA,EAAgBL,gBAAA,CAAiBM,IAAI;QACrCF,IAAA;QACAI,cAAA;QACAD,cAAA;QACAf,MAAA,EAAQA,MAAA,EAAQmB,IAAA;QAChBC,SAAA,EAAW;QACXC,eAAA,EAAiB;QACjBpB,GAAA;QACAqB,UAAA,EAAYd,gBAAA,CAAiBM,IAAI;QACjCS,cAAA,EAAgB;IAClB;IAEA,OAAA,WAAA,+NACEC,OAAAA,AAAA,EAAC,OAAA;QAAIC,SAAA,EAAU;;sPACbC,MAAAA,AAAA,EAAC,MAAA;0BAAIzB,GAAA,CAAI0B,CAAC,CAAC;;sPACXD,MAAAA,AAAA,EAAC,KAAA;0BAAGzB,GAAA,CAAI0B,CAAC,CAAC;;sPACVD,MAAAA,AAAA,8LAAC9B,wBAAA,EAAA;gBACCoB,cAAA,EAAgBA,cAAA;gBAChBD,cAAA,EAAgBA,cAAA;gBAChBa,YAAA,EAAcV,SAAA;gBACdP,iBAAA,EAAmBA,iBAAA;gBACnBJ,QAAA,EAAUA;;;;AAIlB","ignoreList":[0]}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 594, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Dashboard/Default/index.tsx"],"sourcesContent":["import type { groupNavItems } from '@payloadcms/ui/shared'\nimport type { ClientUser, Locale, ServerProps } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { Button, Card, Gutter, Locked } from '@payloadcms/ui'\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport { EntityType, formatAdminURL } from '@payloadcms/ui/shared'\nimport React, { Fragment } from 'react'\n\nimport './index.scss'\n\nconst baseClass = 'dashboard'\n\nexport type DashboardViewClientProps = {\n  locale: Locale\n}\n\nexport type DashboardViewServerPropsOnly = {\n  globalData: Array<{\n    data: { _isLocked: boolean; _lastEditedAt: string; _userEditing: ClientUser | number | string }\n    lockDuration?: number\n    slug: string\n  }>\n  /**\n   * @deprecated\n   * This prop is deprecated and will be removed in the next major version.\n   * Components now import their own `Link` directly from `next/link`.\n   */\n  Link?: React.ComponentType\n  navGroups?: ReturnType<typeof groupNavItems>\n} & ServerProps\n\nexport type DashboardViewServerProps = DashboardViewClientProps & DashboardViewServerPropsOnly\n\nexport function DefaultDashboard(props: DashboardViewServerProps) {\n  const {\n    globalData,\n    i18n,\n    i18n: { t },\n    locale,\n    navGroups,\n    params,\n    payload: {\n      config: {\n        admin: {\n          components: { afterDashboard, beforeDashboard },\n        },\n        routes: { admin: adminRoute },\n      },\n    },\n    payload,\n    permissions,\n    searchParams,\n    user,\n  } = props\n\n  return (\n    <div className={baseClass}>\n      <Gutter className={`${baseClass}__wrap`}>\n        {beforeDashboard &&\n          RenderServerComponent({\n            Component: beforeDashboard,\n            importMap: payload.importMap,\n            serverProps: {\n              i18n,\n              locale,\n              params,\n              payload,\n              permissions,\n              searchParams,\n              user,\n            } satisfies ServerProps,\n          })}\n\n        <Fragment>\n          {!navGroups || navGroups?.length === 0 ? (\n            <p>no nav groups....</p>\n          ) : (\n            navGroups.map(({ entities, label }, groupIndex) => {\n              return (\n                <div className={`${baseClass}__group`} key={groupIndex}>\n                  <h2 className={`${baseClass}__label`}>{label}</h2>\n                  <ul className={`${baseClass}__card-list`}>\n                    {entities.map(({ slug, type, label }, entityIndex) => {\n                      let title: string\n                      let buttonAriaLabel: string\n                      let createHREF: string\n                      let href: string\n                      let hasCreatePermission: boolean\n                      let isLocked = null\n                      let userEditing = null\n\n                      if (type === EntityType.collection) {\n                        title = getTranslation(label, i18n)\n\n                        buttonAriaLabel = t('general:showAllLabel', { label: title })\n\n                        href = formatAdminURL({ adminRoute, path: `/collections/${slug}` })\n\n                        createHREF = formatAdminURL({\n                          adminRoute,\n                          path: `/collections/${slug}/create`,\n                        })\n\n                        hasCreatePermission = permissions?.collections?.[slug]?.create\n                      }\n\n                      if (type === EntityType.global) {\n                        title = getTranslation(label, i18n)\n\n                        buttonAriaLabel = t('general:editLabel', {\n                          label: getTranslation(label, i18n),\n                        })\n\n                        href = formatAdminURL({\n                          adminRoute,\n                          path: `/globals/${slug}`,\n                        })\n\n                        // Find the lock status for the global\n                        const globalLockData = globalData.find((global) => global.slug === slug)\n                        if (globalLockData) {\n                          isLocked = globalLockData.data._isLocked\n                          userEditing = globalLockData.data._userEditing\n\n                          // Check if the lock is expired\n                          const lockDuration = globalLockData?.lockDuration\n                          const lastEditedAt = new Date(\n                            globalLockData.data?._lastEditedAt,\n                          ).getTime()\n\n                          const lockDurationInMilliseconds = lockDuration * 1000\n                          const lockExpirationTime = lastEditedAt + lockDurationInMilliseconds\n\n                          if (new Date().getTime() > lockExpirationTime) {\n                            isLocked = false\n                            userEditing = null\n                          }\n                        }\n                      }\n\n                      return (\n                        <li key={entityIndex}>\n                          <Card\n                            actions={\n                              isLocked && user?.id !== userEditing?.id ? (\n                                <Locked className={`${baseClass}__locked`} user={userEditing} />\n                              ) : hasCreatePermission && type === EntityType.collection ? (\n                                <Button\n                                  aria-label={t('general:createNewLabel', {\n                                    label,\n                                  })}\n                                  buttonStyle=\"icon-label\"\n                                  el=\"link\"\n                                  icon=\"plus\"\n                                  iconStyle=\"with-border\"\n                                  round\n                                  to={createHREF}\n                                />\n                              ) : undefined\n                            }\n                            buttonAriaLabel={buttonAriaLabel}\n                            href={href}\n                            id={`card-${slug}`}\n                            title={getTranslation(label, i18n)}\n                            titleAs=\"h3\"\n                          />\n                        </li>\n                      )\n                    })}\n                  </ul>\n                </div>\n              )\n            })\n          )}\n        </Fragment>\n        {afterDashboard &&\n          RenderServerComponent({\n            Component: afterDashboard,\n            importMap: payload.importMap,\n            serverProps: {\n              i18n,\n              locale,\n              params,\n              payload,\n              permissions,\n              searchParams,\n              user,\n            } satisfies ServerProps,\n          })}\n      </Gutter>\n    </div>\n  )\n}\n"],"names":["getTranslation","Button","Card","Gutter","Locked","RenderServerComponent","EntityType","formatAdminURL","React","Fragment","baseClass","DefaultDashboard","props","globalData","i18n","t","locale","navGroups","params","payload","config","admin","components","afterDashboard","beforeDashboard","routes","adminRoute","permissions","searchParams","user","_jsx","className","_jsxs","Component","importMap","serverProps","length","map","entities","label","groupIndex","slug","type","entityIndex","title","buttonAriaLabel","createHREF","href","hasCreatePermission","isLocked","userEditing","collection","path","collections","create","global","globalLockData","find","data","_isLocked","_userEditing","lockDuration","lastEditedAt","Date","_lastEditedAt","getTime","lockDurationInMilliseconds","lockExpirationTime","actions","id","buttonStyle","el","icon","iconStyle","round","to","undefined","titleAs"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 738, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 744, "column": 0}, "map": {"version":3,"file":"meta.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Dashboard/meta.ts"],"sourcesContent":["import type { GenerateViewMetadata } from '../Root/index.js'\n\nimport { meta } from '../../utilities/meta.js'\n\nexport const generateDashboardMetadata: GenerateViewMetadata = async ({ config, i18n: { t } }) =>\n  meta({\n    description: `${t('general:dashboard')} Payload`,\n    keywords: `${t('general:dashboard')}, Payload`,\n    serverURL: config.serverURL,\n    title: t('general:dashboard'),\n    ...(config.admin.meta || {}),\n    openGraph: {\n      title: t('general:dashboard'),\n      ...(config.admin.meta?.openGraph || {}),\n    },\n  })\n"],"names":["meta","generateDashboardMetadata","config","i18n","t","description","keywords","serverURL","title","admin","openGraph"],"mappings":";;;AAEA,SAASA,IAAI,QAAQ;;AAEd,MAAMC,yBAAA,GAAkD,MAAAA,CAAO,EAAEC,MAAM,EAAEC,IAAA,EAAM,EAAEC,CAAAA,EAAC,EAAI,IAC3FJ,4KAAAA,AAAA,EAAK;QACHK,WAAA,EAAa,GAAGD,CAAA,CAAE,qBAAA,QAAA,CAA8B;QAChDE,QAAA,EAAU,GAAGF,CAAA,CAAE,qBAAA,SAAA,CAA+B;QAC9CG,SAAA,EAAWL,MAAA,CAAOK,SAAS;QAC3BC,KAAA,EAAOJ,CAAA,CAAE;QACT,GAAIF,MAAA,CAAOO,KAAK,CAACT,IAAI,IAAI,CAAC,CAAC;QAC3BU,SAAA,EAAW;YACTF,KAAA,EAAOJ,CAAA,CAAE;YACT,GAAIF,MAAA,CAAOO,KAAK,CAACT,IAAI,EAAEU,SAAA,IAAa,CAAC,CAAC;QACxC;IACF","ignoreList":[0]}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 766, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Dashboard/index.tsx"],"sourcesContent":["import type { EntityToGroup } from '@payloadcms/ui/shared'\nimport type { AdminViewServerProps } from 'payload'\n\nimport { HydrateAuthProvider, SetStepNav } from '@payloadcms/ui'\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport { EntityType, groupNavItems } from '@payloadcms/ui/shared'\nimport React, { Fragment } from 'react'\n\nimport type { DashboardViewClientProps, DashboardViewServerPropsOnly } from './Default/index.js'\n\nimport { DefaultDashboard } from './Default/index.js'\n\nexport { generateDashboardMetadata } from './meta.js'\n\nexport async function Dashboard({ initPageResult, params, searchParams }: AdminViewServerProps) {\n  const {\n    locale,\n    permissions,\n    req: {\n      i18n,\n      payload: { config },\n      payload,\n      user,\n    },\n    req,\n    visibleEntities,\n  } = initPageResult\n\n  const collections = config.collections.filter(\n    (collection) =>\n      permissions?.collections?.[collection.slug]?.read &&\n      visibleEntities.collections.includes(collection.slug),\n  )\n\n  const globals = config.globals.filter(\n    (global) =>\n      permissions?.globals?.[global.slug]?.read && visibleEntities.globals.includes(global.slug),\n  )\n\n  // Query locked global documents only if there are globals in the config\n  let globalData = []\n\n  if (config.globals.length > 0) {\n    const lockedDocuments = await payload.find({\n      collection: 'payload-locked-documents',\n      depth: 1,\n      overrideAccess: false,\n      pagination: false,\n      req,\n      where: {\n        globalSlug: {\n          exists: true,\n        },\n      },\n    })\n\n    // Map over globals to include `lockDuration` and lock data for each global slug\n    globalData = config.globals.map((global) => {\n      const lockDurationDefault = 300\n      const lockDuration =\n        typeof global.lockDocuments === 'object'\n          ? global.lockDocuments.duration\n          : lockDurationDefault\n\n      const lockedDoc = lockedDocuments.docs.find((doc) => doc.globalSlug === global.slug)\n\n      return {\n        slug: global.slug,\n        data: {\n          _isLocked: !!lockedDoc,\n          _lastEditedAt: lockedDoc?.updatedAt ?? null,\n          _userEditing: lockedDoc?.user?.value ?? null,\n        },\n        lockDuration,\n      }\n    })\n  }\n\n  const navGroups = groupNavItems(\n    [\n      ...(collections.map((collection) => {\n        const entityToGroup: EntityToGroup = {\n          type: EntityType.collection,\n          entity: collection,\n        }\n\n        return entityToGroup\n      }) ?? []),\n      ...(globals.map((global) => {\n        const entityToGroup: EntityToGroup = {\n          type: EntityType.global,\n          entity: global,\n        }\n\n        return entityToGroup\n      }) ?? []),\n    ],\n    permissions,\n    i18n,\n  )\n\n  return (\n    <Fragment>\n      <HydrateAuthProvider permissions={permissions} />\n      <SetStepNav nav={[]} />\n      {RenderServerComponent({\n        clientProps: {\n          locale,\n        } satisfies DashboardViewClientProps,\n        Component: config.admin?.components?.views?.dashboard?.Component,\n        Fallback: DefaultDashboard,\n        importMap: payload.importMap,\n        serverProps: {\n          globalData,\n          i18n,\n          locale,\n          navGroups,\n          params,\n          payload,\n          permissions,\n          searchParams,\n          user,\n          visibleEntities,\n        } satisfies DashboardViewServerPropsOnly,\n      })}\n    </Fragment>\n  )\n}\n"],"names":["HydrateAuthProvider","SetStepNav","RenderServerComponent","EntityType","groupNavItems","React","Fragment","DefaultDashboard","generateDashboardMetadata","Dashboard","initPageResult","params","searchParams","locale","permissions","req","i18n","payload","config","user","visibleEntities","collections","filter","collection","slug","read","includes","globals","global","globalData","length","lockedDocuments","find","depth","overrideAccess","pagination","where","globalSlug","exists","map","lockDurationDefault","lockDuration","lockDocuments","duration","lockedDoc","docs","doc","data","_isLocked","_lastEditedAt","updatedAt","_userEditing","value","navGroups","entityToGroup","type","entity","_jsxs","_jsx","nav","clientProps","Component","admin","components","views","dashboard","Fallback","importMap","serverProps"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 864, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 882, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/ForgotPassword/ForgotPasswordForm/index.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ForgotPasswordForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call ForgotPasswordForm() from the server but ForgotPasswordForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/ForgotPassword/ForgotPasswordForm/index.js <module evaluation>\",\n    \"ForgotPasswordForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,qHACA","ignoreList":[0]}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 896, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/ForgotPassword/ForgotPasswordForm/index.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ForgotPasswordForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call ForgotPasswordForm() from the server but ForgotPasswordForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/ForgotPassword/ForgotPasswordForm/index.js\",\n    \"ForgotPasswordForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,iGACA","ignoreList":[0]}},
    {"offset": {"line": 904, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 910, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/ForgotPassword/ForgotPasswordForm/index.tsx"],"sourcesContent":["'use client'\n\nimport type { FormProps } from '@payloadcms/ui'\nimport type { FormState, PayloadRequest } from 'payload'\n\nimport { EmailField, Form, FormSubmit, TextField, useConfig, useTranslation } from '@payloadcms/ui'\nimport { email, text } from 'payload/shared'\nimport React, { useState } from 'react'\n\nimport { FormHeader } from '../../../elements/FormHeader/index.js'\n\nexport const ForgotPasswordForm: React.FC = () => {\n  const { config, getEntityConfig } = useConfig()\n\n  const {\n    admin: { user: userSlug },\n    routes: { api },\n  } = config\n\n  const { t } = useTranslation()\n  const [hasSubmitted, setHasSubmitted] = useState(false)\n  const collectionConfig = getEntityConfig({ collectionSlug: userSlug })\n  const loginWithUsername = collectionConfig?.auth?.loginWithUsername\n\n  const handleResponse: FormProps['handleResponse'] = (res, successToast, errorToast) => {\n    res\n      .json()\n      .then(() => {\n        setHasSubmitted(true)\n        successToast(t('general:submissionSuccessful'))\n      })\n      .catch(() => {\n        errorToast(\n          loginWithUsername\n            ? t('authentication:usernameNotValid')\n            : t('authentication:emailNotValid'),\n        )\n      })\n  }\n\n  const initialState: FormState = loginWithUsername\n    ? {\n        username: {\n          initialValue: '',\n          valid: true,\n          value: undefined,\n        },\n      }\n    : {\n        email: {\n          initialValue: '',\n          valid: true,\n          value: undefined,\n        },\n      }\n\n  if (hasSubmitted) {\n    return (\n      <FormHeader\n        description={t('authentication:checkYourEmailForPasswordReset')}\n        heading={t('authentication:emailSent')}\n      />\n    )\n  }\n\n  return (\n    <Form\n      action={`${api}/${userSlug}/forgot-password`}\n      handleResponse={handleResponse}\n      initialState={initialState}\n      method=\"POST\"\n    >\n      <FormHeader\n        description={\n          loginWithUsername\n            ? t('authentication:forgotPasswordUsernameInstructions')\n            : t('authentication:forgotPasswordEmailInstructions')\n        }\n        heading={t('authentication:forgotPassword')}\n      />\n\n      {loginWithUsername ? (\n        <TextField\n          field={{\n            name: 'username',\n            label: t('authentication:username'),\n            required: true,\n          }}\n          path=\"username\"\n          validate={(value) =>\n            text(value, {\n              name: 'username',\n              type: 'text',\n              blockData: {},\n              data: {},\n              event: 'onChange',\n              preferences: { fields: {} },\n              req: {\n                payload: {\n                  config,\n                },\n                t,\n              } as unknown as PayloadRequest,\n              required: true,\n              siblingData: {},\n            })\n          }\n        />\n      ) : (\n        <EmailField\n          field={{\n            name: 'email',\n            admin: {\n              autoComplete: 'email',\n            },\n            label: t('general:email'),\n            required: true,\n          }}\n          path=\"email\"\n          validate={(value) =>\n            email(value, {\n              name: 'email',\n              type: 'email',\n              blockData: {},\n              data: {},\n              event: 'onChange',\n              preferences: { fields: {} },\n              req: { payload: { config }, t } as unknown as PayloadRequest,\n              required: true,\n              siblingData: {},\n            })\n          }\n        />\n      )}\n      <FormSubmit size=\"large\">{t('general:submit')}</FormSubmit>\n    </Form>\n  )\n}\n"],"names":["c","_c","EmailField","Form","FormSubmit","TextField","useConfig","useTranslation","email","text","React","useState","FormHeader","ForgotPasswordForm","$","config","getEntityConfig","admin","t0","routes","t1","user","userSlug","api","t","hasSubmitted","setHasSubmitted","t2","collectionSlug","collectionConfig","loginWithUsername","auth","t3","res","successToast","errorToast","json","then","catch","handleResponse","t4","t5","Symbol","for","initialState","username","initialValue","valid","value","undefined","t6","_jsx","description","heading","_jsxs","action","method","children","field","name","label","required","path","validate","type","blockData","data","event","preferences","fields","req","payload","siblingData","autoComplete","value_0","size"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 914, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 920, "column": 0}, "map": {"version":3,"file":"meta.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/ForgotPassword/meta.ts"],"sourcesContent":["import type { GenerateViewMetadata } from '../Root/index.js'\n\nimport { meta } from '../../utilities/meta.js'\n\nexport const generateForgotPasswordMetadata: GenerateViewMetadata = async ({\n  config,\n  i18n: { t },\n}) =>\n  meta({\n    description: t('authentication:forgotPassword'),\n    keywords: t('authentication:forgotPassword'),\n    title: t('authentication:forgotPassword'),\n    ...(config.admin.meta || {}),\n    serverURL: config.serverURL,\n  })\n"],"names":["meta","generateForgotPasswordMetadata","config","i18n","t","description","keywords","title","admin","serverURL"],"mappings":";;;AAEA,SAASA,IAAI,QAAQ;;AAEd,MAAMC,8BAAA,GAAuD,MAAAA,CAAO,EACzEC,MAAM,EACNC,IAAA,EAAM,EAAEC,CAAAA,EAAC,EACV,yKACCJ,OAAAA,AAAA,EAAK;QACHK,WAAA,EAAaD,CAAA,CAAE;QACfE,QAAA,EAAUF,CAAA,CAAE;QACZG,KAAA,EAAOH,CAAA,CAAE;QACT,GAAIF,MAAA,CAAOM,KAAK,CAACR,IAAI,IAAI,CAAC,CAAC;QAC3BS,SAAA,EAAWP,MAAA,CAAOO,SAAAA;IACpB","ignoreList":[0]}},
    {"offset": {"line": 932, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 938, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/ForgotPassword/index.tsx"],"sourcesContent":["import type { AdminViewServerProps } from 'payload'\n\nimport { Button, Link } from '@payloadcms/ui'\nimport { formatAdminURL, Translation } from '@payloadcms/ui/shared'\nimport React, { Fragment } from 'react'\n\nimport { FormHeader } from '../../elements/FormHeader/index.js'\nimport { ForgotPasswordForm } from './ForgotPasswordForm/index.js'\n\nexport { generateForgotPasswordMetadata } from './meta.js'\n\nexport const forgotPasswordBaseClass = 'forgot-password'\n\nexport function ForgotPasswordView({ initPageResult }: AdminViewServerProps) {\n  const {\n    req: {\n      i18n,\n      payload: { config },\n      user,\n    },\n  } = initPageResult\n\n  const {\n    admin: {\n      routes: { account: accountRoute, login: loginRoute },\n    },\n    routes: { admin: adminRoute },\n  } = config\n\n  if (user) {\n    return (\n      <Fragment>\n        <FormHeader\n          description={\n            <Translation\n              elements={{\n                '0': ({ children }) => (\n                  <Link\n                    href={formatAdminURL({\n                      adminRoute,\n                      path: accountRoute,\n                    })}\n                    prefetch={false}\n                  >\n                    {children}\n                  </Link>\n                ),\n              }}\n              i18nKey=\"authentication:loggedInChangePassword\"\n              t={i18n.t}\n            />\n          }\n          heading={i18n.t('authentication:alreadyLoggedIn')}\n        />\n        <Button buttonStyle=\"secondary\" el=\"link\" size=\"large\" to={adminRoute}>\n          {i18n.t('general:backToDashboard')}\n        </Button>\n      </Fragment>\n    )\n  }\n\n  return (\n    <Fragment>\n      <ForgotPasswordForm />\n      <Link\n        href={formatAdminURL({\n          adminRoute,\n          path: loginRoute,\n        })}\n        prefetch={false}\n      >\n        {i18n.t('authentication:backToLogin')}\n      </Link>\n    </Fragment>\n  )\n}\n"],"names":["Button","Link","formatAdminURL","Translation","React","Fragment","FormHeader","ForgotPasswordForm","generateForgotPasswordMetadata","forgotPasswordBaseClass","ForgotPasswordView","initPageResult","req","i18n","payload","config","user","admin","routes","account","accountRoute","login","loginRoute","adminRoute","_jsxs","_jsx","description","elements","0","children","href","path","prefetch","i18nKey","t","heading","buttonStyle","el","size","to"],"mappings":";;;;;AAIA,OAAOI,KAAA,IAASC,QAAQ,QAAQ;AAGhC,SAASE,kBAAkB,QAAQ;AALnC,SAASP,MAAM,EAAEC,IAAI,QAAQ;AAC7B,SAASC,cAAc,EAAEC,WAAW,QAAQ;AAG5C,SAASG,UAAU,QAAQ;;;;;;;;AAKpB,MAAMG,uBAAA,GAA0B;AAEhC,SAASC,mBAAmB,EAAEC,cAAAA,EAAsC;IACzE,MAAM,EACJC,GAAA,EAAK,EACHC,IAAI,EACJC,OAAA,EAAS,EAAEC,MAAAA,EAAQ,EACnBC,IAAAA,EAAI,EAEP,GAAGL,cAAA;IAEJ,MAAM,EACJM,KAAA,EAAO,EACLC,MAAA,EAAQ,EAAEC,OAAA,EAASC,YAAY,EAAEC,KAAA,EAAOC,UAAAA,EAAU,EACnD,EACDJ,MAAA,EAAQ,EAAED,KAAA,EAAOM,UAAAA,EAAU,EAC5B,GAAGR,MAAA;IAEJ,IAAIC,IAAA,EAAM;QACR,OAAA,WAAA,+NACEQ,OAAAA,AAAA,EAACnB,iNAAA,EAAA;;0PACCoB,MAAA,AAAAA,EAACnB,6LAAA,EAAA;oBACCoB,WAAA,EAAA,WAAA,+NACED,MAAAA,AAAA,2KAACtB,cAAA,EAAA;wBACCwB,QAAA,EAAU;4BACR,KAAKC,CAAC,EAAEC,QAAAA,EAAU,GAAA,WAAA,GAChBJ,kOAAAA,AAAA,2KAACxB,OAAA,EAAA;oCACC6B,IAAA,GAAM5B,6LAAAA,AAAA,EAAe;wCACnBqB,UAAA;wCACAQ,IAAA,EAAMX;oCACR;oCACAY,QAAA,EAAU;8CAETH;;wBAGP;wBACAI,OAAA,EAAQ;wBACRC,CAAA,EAAGrB,IAAA,CAAKqB,CAAAA;;oBAGZC,OAAA,EAAStB,IAAA,CAAKqB,CAAC,CAAC;;0PAElBT,MAAAA,AAAA,2KAACzB,SAAA,EAAA;oBAAOoC,WAAA,EAAY;oBAAYC,EAAA,EAAG;oBAAOC,IAAA,EAAK;oBAAQC,EAAA,EAAIhB,UAAA;8BACxDV,IAAA,CAAKqB,CAAC,CAAC;;;;IAIhB;IAEA,OAAA,WAAA,+NACEV,OAAAA,AAAA,wMAACnB,WAAA,EAAA;;0BACCoB,kOAAAA,AAAA,yMAAClB,qBAAA,EAAA,CAAA;Y,W,+NACDkB,MAAAA,AAAA,EAACxB,gLAAA,EAAA;gBACC6B,IAAA,+KAAM5B,iBAAAA,AAAA,EAAe;oBACnBqB,UAAA;oBACAQ,IAAA,EAAMT;gBACR;gBACAU,QAAA,EAAU;0BAETnB,IAAA,CAAKqB,CAAC,CAAC;;;;AAIhB","ignoreList":[0]}},
    {"offset": {"line": 1003, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1022, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/elements/Logo/index.tsx"],"sourcesContent":["import type { ServerProps } from 'payload'\nimport type React from 'react'\n\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport { PayloadLogo } from '@payloadcms/ui/shared'\n\nexport const Logo: React.FC<ServerProps> = (props) => {\n  const { i18n, locale, params, payload, permissions, searchParams, user } = props\n\n  const {\n    admin: {\n      components: {\n        graphics: { Logo: CustomLogo } = {\n          Logo: undefined,\n        },\n      } = {},\n    } = {},\n  } = payload.config\n\n  return RenderServerComponent({\n    Component: CustomLogo,\n    Fallback: PayloadLogo,\n    importMap: payload.importMap,\n    serverProps: {\n      i18n,\n      locale,\n      params,\n      payload,\n      permissions,\n      searchParams,\n      user,\n    },\n  })\n}\n"],"names":["RenderServerComponent","PayloadLogo","Logo","props","i18n","locale","params","payload","permissions","searchParams","user","admin","components","graphics","CustomLogo","undefined","config","Component","Fallback","importMap","serverProps"],"mappings":";;;AAGA,SAASA,qBAAqB,QAAQ;AACtC,SAASC,WAAW,QAAQ;;;AAErB,MAAMC,IAAA,IAA+BC,KAAA;IAC1C,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAEC,WAAW,EAAEC,YAAY,EAAEC,IAAAA,EAAM,GAAGP,KAAA;IAE3E,MAAM,EACJQ,KAAA,EAAO,EACLC,UAAA,EAAY,EACVC,QAAA,EAAU,EAAEX,IAAA,EAAMY,UAAAA,EAAY,GAAG;QAC/BZ,IAAA,EAAMa;IACR,CAAA,EACD,GAAG,CAAC,CAAA,EACN,GAAG,CAAC,CAAA,EACN,GAAGR,OAAA,CAAQS,MAAM;IAElB,oMAAOhB,wBAAAA,AAAA,EAAsB;QAC3BiB,SAAA,EAAWH,UAAA;QACXI,QAAA,2KAAUjB,cAAA;QACVkB,SAAA,EAAWZ,OAAA,CAAQY,SAAS;QAC5BC,WAAA,EAAa;YACXhB,IAAA;YACAC,MAAA;YACAC,MAAA;YACAC,OAAA;YACAC,WAAA;YACAC,YAAA;YACAC;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 1049, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1055, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Login/LoginForm/index.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Login/LoginForm/index.js <module evaluation>\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,mGACA","ignoreList":[0]}},
    {"offset": {"line": 1063, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1069, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Login/LoginForm/index.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Login/LoginForm/index.js\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA","ignoreList":[0]}},
    {"offset": {"line": 1077, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1083, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Login/LoginForm/index.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nconst baseClass = 'login__form'\n\nimport type { UserWithToken } from '@payloadcms/ui'\nimport type { FormState } from 'payload'\n\nimport {\n  Form,\n  FormSubmit,\n  Link,\n  PasswordField,\n  useAuth,\n  useConfig,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { formatAdminURL } from '@payloadcms/ui/shared'\nimport { getLoginOptions } from 'payload/shared'\n\nimport type { LoginFieldProps } from '../LoginField/index.js'\n\nimport { LoginField } from '../LoginField/index.js'\nimport './index.scss'\n\nexport const LoginForm: React.FC<{\n  prefillEmail?: string\n  prefillPassword?: string\n  prefillUsername?: string\n  searchParams: { [key: string]: string | string[] | undefined }\n}> = ({ prefillEmail, prefillPassword, prefillUsername, searchParams }) => {\n  const { config, getEntityConfig } = useConfig()\n\n  const {\n    admin: {\n      routes: { forgot: forgotRoute },\n      user: userSlug,\n    },\n    routes: { admin: adminRoute, api: apiRoute },\n  } = config\n\n  const collectionConfig = getEntityConfig({ collectionSlug: userSlug })\n  const { auth: authOptions } = collectionConfig\n  const loginWithUsername = authOptions.loginWithUsername\n  const { canLoginWithEmail, canLoginWithUsername } = getLoginOptions(loginWithUsername)\n\n  const [loginType] = React.useState<LoginFieldProps['type']>(() => {\n    if (canLoginWithEmail && canLoginWithUsername) {\n      return 'emailOrUsername'\n    }\n    if (canLoginWithUsername) {\n      return 'username'\n    }\n    return 'email'\n  })\n\n  const { t } = useTranslation()\n  const { setUser } = useAuth()\n\n  const initialState: FormState = {\n    password: {\n      initialValue: prefillPassword ?? undefined,\n      valid: true,\n      value: prefillPassword ?? undefined,\n    },\n  }\n\n  if (loginWithUsername) {\n    initialState.username = {\n      initialValue: prefillUsername ?? undefined,\n      valid: true,\n      value: prefillUsername ?? undefined,\n    }\n  } else {\n    initialState.email = {\n      initialValue: prefillEmail ?? undefined,\n      valid: true,\n      value: prefillEmail ?? undefined,\n    }\n  }\n\n  const handleLogin = (data: UserWithToken) => {\n    setUser(data)\n  }\n\n  return (\n    <Form\n      action={`${apiRoute}/${userSlug}/login`}\n      className={baseClass}\n      disableSuccessStatus\n      initialState={initialState}\n      method=\"POST\"\n      onSuccess={handleLogin}\n      redirect={typeof searchParams?.redirect === 'string' ? searchParams.redirect : adminRoute}\n      waitForAutocomplete\n    >\n      <div className={`${baseClass}__inputWrap`}>\n        <LoginField type={loginType} />\n        <PasswordField\n          field={{\n            name: 'password',\n            label: t('general:password'),\n            required: true,\n          }}\n          path=\"password\"\n        />\n      </div>\n      <Link\n        href={formatAdminURL({\n          adminRoute,\n          path: forgotRoute,\n        })}\n        prefetch={false}\n      >\n        {t('authentication:forgotPasswordQuestion')}\n      </Link>\n      <FormSubmit size=\"large\">{t('authentication:login')}</FormSubmit>\n    </Form>\n  )\n}\n"],"names":["c","_c","React","baseClass","Form","FormSubmit","Link","PasswordField","useAuth","useConfig","useTranslation","formatAdminURL","getLoginOptions","LoginField","LoginForm","t0","$","prefillEmail","prefillPassword","prefillUsername","searchParams","config","getEntityConfig","admin","t1","routes","t2","t3","user","userSlug","forgot","forgotRoute","adminRoute","api","apiRoute","loginWithUsername","t4","collectionConfig","collectionSlug","auth","authOptions","canLoginWithEmail","canLoginWithUsername","t5","loginType","useState","t","setUser","t6","undefined","t7","t8","initialState","password","initialValue","valid","value","username","email","t9","data","handleLogin","_jsxs","action","className","disableSuccessStatus","method","onSuccess","redirect","waitForAutocomplete","children","_jsx","type","field","name","label","required","path","href","prefetch","size"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 1087, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1093, "column": 0}, "map": {"version":3,"file":"meta.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Login/meta.ts"],"sourcesContent":["import type { GenerateViewMetadata } from '../Root/index.js'\n\nimport { meta } from '../../utilities/meta.js'\n\nexport const generateLoginMetadata: GenerateViewMetadata = async ({ config, i18n: { t } }) =>\n  meta({\n    description: `${t('authentication:login')}`,\n    keywords: `${t('authentication:login')}`,\n    serverURL: config.serverURL,\n    title: t('authentication:login'),\n    ...(config.admin.meta || {}),\n  })\n"],"names":["meta","generateLoginMetadata","config","i18n","t","description","keywords","serverURL","title","admin"],"mappings":";;;AAEA,SAASA,IAAI,QAAQ;;AAEd,MAAMC,qBAAA,GAA8C,MAAAA,CAAO,EAAEC,MAAM,EAAEC,IAAA,EAAM,EAAEC,CAAAA,EAAC,EAAI,yKACvFJ,OAAAA,AAAA,EAAK;QACHK,WAAA,EAAa,GAAGD,CAAA,CAAE,yBAAyB;QAC3CE,QAAA,EAAU,GAAGF,CAAA,CAAE,yBAAyB;QACxCG,SAAA,EAAWL,MAAA,CAAOK,SAAS;QAC3BC,KAAA,EAAOJ,CAAA,CAAE;QACT,GAAIF,MAAA,CAAOO,KAAK,CAACT,IAAI,IAAI,CAAC,CAAC;IAC7B","ignoreList":[0]}},
    {"offset": {"line": 1105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1111, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Login/index.tsx"],"sourcesContent":["import type { AdminViewServerProps, ServerProps } from 'payload'\n\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport { redirect } from 'next/navigation.js'\nimport React, { Fragment } from 'react'\n\nimport { Logo } from '../../elements/Logo/index.js'\nimport { LoginForm } from './LoginForm/index.js'\nimport './index.scss'\n\nexport { generateLoginMetadata } from './meta.js'\n\nexport const loginBaseClass = 'login'\n\nexport function LoginView({ initPageResult, params, searchParams }: AdminViewServerProps) {\n  const { locale, permissions, req } = initPageResult\n\n  const {\n    i18n,\n    payload: { config },\n    payload,\n    user,\n  } = req\n\n  const {\n    admin: { components: { afterLogin, beforeLogin } = {}, user: userSlug },\n    routes: { admin },\n  } = config\n\n  if (user) {\n    redirect((searchParams.redirect as string) || admin)\n  }\n\n  const collectionConfig = payload?.collections?.[userSlug]?.config\n\n  const prefillAutoLogin =\n    typeof config.admin?.autoLogin === 'object' && config.admin?.autoLogin.prefillOnly\n\n  const prefillUsername =\n    prefillAutoLogin && typeof config.admin?.autoLogin === 'object'\n      ? config.admin?.autoLogin.username\n      : undefined\n\n  const prefillEmail =\n    prefillAutoLogin && typeof config.admin?.autoLogin === 'object'\n      ? config.admin?.autoLogin.email\n      : undefined\n\n  const prefillPassword =\n    prefillAutoLogin && typeof config.admin?.autoLogin === 'object'\n      ? config.admin?.autoLogin.password\n      : undefined\n\n  return (\n    <Fragment>\n      <div className={`${loginBaseClass}__brand`}>\n        <Logo\n          i18n={i18n}\n          locale={locale}\n          params={params}\n          payload={payload}\n          permissions={permissions}\n          searchParams={searchParams}\n          user={user}\n        />\n      </div>\n      {RenderServerComponent({\n        Component: beforeLogin,\n        importMap: payload.importMap,\n        serverProps: {\n          i18n,\n          locale,\n          params,\n          payload,\n          permissions,\n          searchParams,\n          user,\n        } satisfies ServerProps,\n      })}\n      {!collectionConfig?.auth?.disableLocalStrategy && (\n        <LoginForm\n          prefillEmail={prefillEmail}\n          prefillPassword={prefillPassword}\n          prefillUsername={prefillUsername}\n          searchParams={searchParams}\n        />\n      )}\n      {RenderServerComponent({\n        Component: afterLogin,\n        importMap: payload.importMap,\n        serverProps: {\n          i18n,\n          locale,\n          params,\n          payload,\n          permissions,\n          searchParams,\n          user,\n        } satisfies ServerProps,\n      })}\n    </Fragment>\n  )\n}\n"],"names":["RenderServerComponent","redirect","React","Fragment","Logo","LoginForm","generateLoginMetadata","loginBaseClass","LoginView","initPageResult","params","searchParams","locale","permissions","req","i18n","payload","config","user","admin","components","afterLogin","beforeLogin","userSlug","routes","collectionConfig","collections","prefillAutoLogin","autoLogin","prefillOnly","prefillUsername","username","undefined","prefillEmail","email","prefillPassword","password","_jsxs","_jsx","className","Component","importMap","serverProps","auth","disableLocalStrategy"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1210, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Logout/LogoutClient.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LogoutClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call LogoutClient() from the server but LogoutClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Logout/LogoutClient.js <module evaluation>\",\n    \"LogoutClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,iGACA","ignoreList":[0]}},
    {"offset": {"line": 1218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1224, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Logout/LogoutClient.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LogoutClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call LogoutClient() from the server but LogoutClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Logout/LogoutClient.js\",\n    \"LogoutClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6EACA","ignoreList":[0]}},
    {"offset": {"line": 1232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1238, "column": 0}, "map": {"version":3,"file":"LogoutClient.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Logout/LogoutClient.tsx"],"sourcesContent":["'use client'\nimport {\n  Button,\n  LoadingOverlay,\n  toast,\n  useAuth,\n  useRouteTransition,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { formatAdminURL } from '@payloadcms/ui/shared'\nimport { useRouter } from 'next/navigation.js'\nimport React, { useEffect } from 'react'\n\nimport './index.scss'\n\nconst baseClass = 'logout'\n\nexport const LogoutClient: React.FC<{\n  adminRoute: string\n  inactivity?: boolean\n  redirect: string\n}> = (props) => {\n  const { adminRoute, inactivity, redirect } = props\n\n  const { logOut, user } = useAuth()\n\n  const { startRouteTransition } = useRouteTransition()\n\n  const [isLoggedOut, setIsLoggedOut] = React.useState<boolean>(!user)\n\n  const logOutSuccessRef = React.useRef(false)\n\n  const [loginRoute] = React.useState(() =>\n    formatAdminURL({\n      adminRoute,\n      path: `/login${\n        inactivity && redirect && redirect.length > 0\n          ? `?redirect=${encodeURIComponent(redirect)}`\n          : ''\n      }`,\n    }),\n  )\n\n  const { t } = useTranslation()\n  const router = useRouter()\n\n  const handleLogOut = React.useCallback(async () => {\n    const loggedOut = await logOut()\n    setIsLoggedOut(loggedOut)\n\n    if (!inactivity && loggedOut && !logOutSuccessRef.current) {\n      toast.success(t('authentication:loggedOutSuccessfully'))\n      logOutSuccessRef.current = true\n      startRouteTransition(() => router.push(loginRoute))\n      return\n    }\n  }, [inactivity, logOut, loginRoute, router, startRouteTransition, t])\n\n  useEffect(() => {\n    if (!isLoggedOut) {\n      void handleLogOut()\n    } else {\n      startRouteTransition(() => router.push(loginRoute))\n    }\n  }, [handleLogOut, isLoggedOut, loginRoute, router, startRouteTransition])\n\n  if (isLoggedOut && inactivity) {\n    return (\n      <div className={`${baseClass}__wrap`}>\n        <h2>{t('authentication:loggedOutInactivity')}</h2>\n        <Button buttonStyle=\"secondary\" el=\"link\" size=\"large\" url={loginRoute}>\n          {t('authentication:logBackIn')}\n        </Button>\n      </div>\n    )\n  }\n\n  return <LoadingOverlay animationDuration={'0ms'} loadingText={t('authentication:loggingOut')} />\n}\n"],"names":["c","_c","Button","LoadingOverlay","toast","useAuth","useRouteTransition","useTranslation","formatAdminURL","useRouter","React","useEffect","baseClass","LogoutClient","props","$","adminRoute","inactivity","redirect","logOut","user","startRouteTransition","isLoggedOut","setIsLoggedOut","useState","logOutSuccessRef","useRef","t0","path","length","encodeURIComponent","loginRoute","t","router","t1","loggedOut","current","success","push","handleLogOut","t2","t3","t4","_jsxs","className","children","_jsx","buttonStyle","el","size","url","animationDuration","loadingText"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 1242, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1248, "column": 0}, "map": {"version":3,"file":"meta.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Logout/meta.ts"],"sourcesContent":["import type { GenerateViewMetadata } from '../Root/index.js'\n\nimport { meta } from '../../utilities/meta.js'\n\nexport const generateLogoutMetadata: GenerateViewMetadata = async ({ config, i18n: { t } }) =>\n  meta({\n    description: `${t('authentication:logoutUser')}`,\n    keywords: `${t('authentication:logout')}`,\n    serverURL: config.serverURL,\n    title: t('authentication:logout'),\n  })\n"],"names":["meta","generateLogoutMetadata","config","i18n","t","description","keywords","serverURL","title"],"mappings":";;;AAEA,SAASA,IAAI,QAAQ;;AAEd,MAAMC,sBAAA,GAA+C,MAAAA,CAAO,EAAEC,MAAM,EAAEC,IAAA,EAAM,EAAEC,CAAAA,EAAC,EAAI,yKACxFJ,OAAAA,AAAA,EAAK;QACHK,WAAA,EAAa,GAAGD,CAAA,CAAE,8BAA8B;QAChDE,QAAA,EAAU,GAAGF,CAAA,CAAE,0BAA0B;QACzCG,SAAA,EAAWL,MAAA,CAAOK,SAAS;QAC3BC,KAAA,EAAOJ,CAAA,CAAE;IACX","ignoreList":[0]}},
    {"offset": {"line": 1259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1265, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Logout/index.tsx"],"sourcesContent":["import type { AdminViewServerProps } from 'payload'\n\nimport React from 'react'\n\nimport { LogoutClient } from './LogoutClient.js'\nimport './index.scss'\n\nconst baseClass = 'logout'\n\nexport { generateLogoutMetadata } from './meta.js'\n\nexport const LogoutView: React.FC<\n  {\n    inactivity?: boolean\n  } & AdminViewServerProps\n> = ({ inactivity, initPageResult, searchParams }) => {\n  const {\n    req: {\n      payload: {\n        config: {\n          routes: { admin: adminRoute },\n        },\n      },\n    },\n  } = initPageResult\n\n  return (\n    <div className={`${baseClass}`}>\n      <LogoutClient\n        adminRoute={adminRoute}\n        inactivity={inactivity}\n        redirect={searchParams.redirect as string}\n      />\n    </div>\n  )\n}\n\nexport function LogoutInactivity(props: AdminViewServerProps) {\n  return <LogoutView inactivity {...props} />\n}\n"],"names":["React","LogoutClient","baseClass","generateLogoutMetadata","LogoutView","inactivity","initPageResult","searchParams","req","payload","config","routes","admin","adminRoute","_jsx","className","redirect","LogoutInactivity","props"],"mappings":";;;;;AAIA,SAASC,YAAY,QAAQ;;;;AAG7B,MAAMC,SAAA,GAAY;;AAIX,MAAME,UAAA,GAITA,CAAC,EAAEC,UAAU,EAAEC,cAAc,EAAEC,YAAAA,EAAc;IAC/C,MAAM,EACJC,GAAA,EAAK,EACHC,OAAA,EAAS,EACPC,MAAA,EAAQ,EACNC,MAAA,EAAQ,EAAEC,KAAA,EAAOC,UAAAA,EAAU,EAAE,EAC9B,EACF,EAEJ,GAAGP,cAAA;IAEJ,OAAA,WAAA,+NACEQ,MAAAA,AAAA,EAAC,OAAA;QAAIC,SAAA,EAAW,GAAGb,SAAA,EAAW;kBAC5B,WAAA,+NAAAY,MAAAA,AAAA,kLAACb,eAAA,EAAA;YACCY,UAAA,EAAYA,UAAA;YACZR,UAAA,EAAYA,UAAA;YACZW,QAAA,EAAUT,YAAA,CAAaS,QAAAA;;;AAI/B;AAEO,SAASC,iBAAiBC,KAA2B;IAC1D,OAAA,WAAA,+NAAOJ,MAAAA,AAAA,EAACV,UAAA,EAAA;QAAWC,UAAU,EAAA;QAAE,GAAGa,KAAAA;;AACpC","ignoreList":[0]}},
    {"offset": {"line": 1293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1311, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/ResetPassword/ResetPasswordForm/index.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ResetPasswordForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call ResetPasswordForm() from the server but ResetPasswordForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/ResetPassword/ResetPasswordForm/index.js <module evaluation>\",\n    \"ResetPasswordForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,mHACA","ignoreList":[0]}},
    {"offset": {"line": 1319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1325, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/ResetPassword/ResetPasswordForm/index.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ResetPasswordForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call ResetPasswordForm() from the server but ResetPasswordForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/ResetPassword/ResetPasswordForm/index.js\",\n    \"ResetPasswordForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,+FACA","ignoreList":[0]}},
    {"offset": {"line": 1333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1339, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/ResetPassword/ResetPasswordForm/index.tsx"],"sourcesContent":["'use client'\nimport {\n  ConfirmPasswordField,\n  Form,\n  FormSubmit,\n  HiddenField,\n  PasswordField,\n  useAuth,\n  useConfig,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { formatAdminURL } from '@payloadcms/ui/shared'\nimport { useRouter } from 'next/navigation.js'\nimport { type FormState } from 'payload'\nimport React from 'react'\n\ntype Args = {\n  readonly token: string\n}\n\nconst initialState: FormState = {\n  'confirm-password': {\n    initialValue: '',\n    valid: false,\n    value: '',\n  },\n  password: {\n    initialValue: '',\n    valid: false,\n    value: '',\n  },\n}\n\nexport const ResetPasswordForm: React.FC<Args> = ({ token }) => {\n  const i18n = useTranslation()\n  const {\n    config: {\n      admin: {\n        routes: { login: loginRoute },\n        user: userSlug,\n      },\n      routes: { admin: adminRoute, api: apiRoute },\n      serverURL,\n    },\n  } = useConfig()\n\n  const history = useRouter()\n  const { fetchFullUser } = useAuth()\n\n  const onSuccess = React.useCallback(async () => {\n    const user = await fetchFullUser()\n    if (user) {\n      history.push(adminRoute)\n    } else {\n      history.push(\n        formatAdminURL({\n          adminRoute,\n          path: loginRoute,\n        }),\n      )\n    }\n  }, [adminRoute, fetchFullUser, history, loginRoute])\n\n  return (\n    <Form\n      action={`${serverURL}${apiRoute}/${userSlug}/reset-password`}\n      initialState={initialState}\n      method=\"POST\"\n      onSuccess={onSuccess}\n    >\n      <div className=\"inputWrap\">\n        <PasswordField\n          field={{\n            name: 'password',\n            label: i18n.t('authentication:newPassword'),\n            required: true,\n          }}\n          path=\"password\"\n          schemaPath={`${userSlug}.password`}\n        />\n        <ConfirmPasswordField />\n        <HiddenField path=\"token\" schemaPath={`${userSlug}.token`} value={token} />\n      </div>\n      <FormSubmit size=\"large\">{i18n.t('authentication:resetPassword')}</FormSubmit>\n    </Form>\n  )\n}\n"],"names":["c","_c","ConfirmPasswordField","Form","FormSubmit","HiddenField","PasswordField","useAuth","useConfig","useTranslation","formatAdminURL","useRouter","React","initialState","initialValue","valid","value","password","ResetPasswordForm","t0","$","token","i18n","config","t1","admin","t2","routes","t3","serverURL","t4","user","userSlug","login","loginRoute","adminRoute","api","apiRoute","history","fetchFullUser","t5","push","path","onSuccess","t6","t7","_jsxs","action","method","children","className","_jsx","field","name","label","t","required","schemaPath","size"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 1343, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1349, "column": 0}, "map": {"version":3,"file":"meta.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/ResetPassword/meta.ts"],"sourcesContent":["import type { Metadata } from 'next'\n\nimport type { GenerateViewMetadata } from '../Root/index.js'\n\nimport { meta } from '../../utilities/meta.js'\n\nexport const generateResetPasswordMetadata: GenerateViewMetadata = async ({\n  config,\n  i18n: { t },\n}): Promise<Metadata> =>\n  meta({\n    description: t('authentication:resetPassword'),\n    keywords: t('authentication:resetPassword'),\n    serverURL: config.serverURL,\n    title: t('authentication:resetPassword'),\n    ...(config.admin.meta || {}),\n  })\n"],"names":["meta","generateResetPasswordMetadata","config","i18n","t","description","keywords","serverURL","title","admin"],"mappings":";;;AAIA,SAASA,IAAI,QAAQ;;AAEd,MAAMC,6BAAA,GAAsD,MAAAA,CAAO,EACxEC,MAAM,EACNC,IAAA,EAAM,EAAEC,CAAAA,EAAC,EACV,yKACCJ,OAAAA,AAAA,EAAK;QACHK,WAAA,EAAaD,CAAA,CAAE;QACfE,QAAA,EAAUF,CAAA,CAAE;QACZG,SAAA,EAAWL,MAAA,CAAOK,SAAS;QAC3BC,KAAA,EAAOJ,CAAA,CAAE;QACT,GAAIF,MAAA,CAAOO,KAAK,CAACT,IAAI,IAAI,CAAC,CAAC;IAC7B","ignoreList":[0]}},
    {"offset": {"line": 1361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1367, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/ResetPassword/index.tsx"],"sourcesContent":["import type { AdminViewServerProps } from 'payload'\n\nimport { Button, Link } from '@payloadcms/ui'\nimport { formatAdminURL, Translation } from '@payloadcms/ui/shared'\nimport React from 'react'\n\nimport { FormHeader } from '../../elements/FormHeader/index.js'\nimport { ResetPasswordForm } from './ResetPasswordForm/index.js'\nimport './index.scss'\n\nexport const resetPasswordBaseClass = 'reset-password'\n\nexport { generateResetPasswordMetadata } from './meta.js'\n\nexport function ResetPassword({ initPageResult, params }: AdminViewServerProps) {\n  const { req } = initPageResult\n\n  const {\n    segments: [_, token],\n  } = params\n\n  const {\n    i18n,\n    payload: { config },\n    user,\n  } = req\n\n  const {\n    admin: {\n      routes: { account: accountRoute, login: loginRoute },\n    },\n    routes: { admin: adminRoute },\n  } = config\n\n  if (user) {\n    return (\n      <div className={`${resetPasswordBaseClass}__wrap`}>\n        <FormHeader\n          description={\n            <Translation\n              elements={{\n                '0': ({ children }) => (\n                  <Link\n                    href={formatAdminURL({\n                      adminRoute,\n                      path: accountRoute,\n                    })}\n                    prefetch={false}\n                  >\n                    {children}\n                  </Link>\n                ),\n              }}\n              i18nKey=\"authentication:loggedInChangePassword\"\n              t={i18n.t}\n            />\n          }\n          heading={i18n.t('authentication:alreadyLoggedIn')}\n        />\n        <Button buttonStyle=\"secondary\" el=\"link\" size=\"large\" to={adminRoute}>\n          {i18n.t('general:backToDashboard')}\n        </Button>\n      </div>\n    )\n  }\n\n  return (\n    <div className={`${resetPasswordBaseClass}__wrap`}>\n      <FormHeader heading={i18n.t('authentication:resetPassword')} />\n      <ResetPasswordForm token={token} />\n      <Link\n        href={formatAdminURL({\n          adminRoute,\n          path: loginRoute,\n        })}\n        prefetch={false}\n      >\n        {i18n.t('authentication:backToLogin')}\n      </Link>\n    </div>\n  )\n}\n"],"names":["Button","Link","formatAdminURL","Translation","React","FormHeader","ResetPasswordForm","resetPasswordBaseClass","generateResetPasswordMetadata","ResetPassword","initPageResult","params","req","segments","_","token","i18n","payload","config","user","admin","routes","account","accountRoute","login","loginRoute","adminRoute","_jsxs","className","_jsx","description","elements","0","children","href","path","prefetch","i18nKey","t","heading","buttonStyle","el","size","to"],"mappings":";;;;;AAMA,SAASK,UAAU,QAAQ;AAC3B,SAASC,iBAAiB,QAAQ;AALlC,SAASN,MAAM,EAAEC,IAAI,QAAQ;AAC7B,SAASC,cAAc,EAAEC,WAAW,QAAQ;;;;;;;AAOrC,MAAMI,sBAAA,GAAyB;;AAI/B,SAASE,cAAc,EAAEC,cAAc,EAAEC,MAAAA,EAA8B;IAC5E,MAAM,EAAEC,GAAAA,EAAK,GAAGF,cAAA;IAEhB,MAAM,EACJG,QAAA,EAAU,CAACC,CAAA,EAAGC,KAAA,CAAA,EACf,GAAGJ,MAAA;IAEJ,MAAM,EACJK,IAAI,EACJC,OAAA,EAAS,EAAEC,MAAAA,EAAQ,EACnBC,IAAAA,EACD,GAAGP,GAAA;IAEJ,MAAM,EACJQ,KAAA,EAAO,EACLC,MAAA,EAAQ,EAAEC,OAAA,EAASC,YAAY,EAAEC,KAAA,EAAOC,UAAAA,EAAU,EACnD,EACDJ,MAAA,EAAQ,EAAED,KAAA,EAAOM,UAAAA,EAAU,EAC5B,GAAGR,MAAA;IAEJ,IAAIC,IAAA,EAAM;QACR,OAAA,WAAA,+NACEQ,OAAAA,AAAA,EAAC,OAAA;YAAIC,SAAA,EAAW,GAAGrB,sBAAA,CAAA,MAAA,CAA8B;;8BAC/CsB,kOAAAA,AAAA,kLAACxB,aAAA,EAAA;oBACCyB,WAAA,EAAA,WAAA,GACED,kOAAAA,AAAA,2KAAC1B,cAAA,EAAA;wBACC4B,QAAA,EAAU;4BACR,KAAKC,CAAC,EAAEC,QAAAA,EAAU,GAAA,WAAA,IAChBJ,iOAAAA,AAAA,2KAAC5B,OAAA,EAAA;oCACCiC,IAAA,+KAAMhC,iBAAAA,AAAA,EAAe;wCACnBwB,UAAA;wCACAS,IAAA,EAAMZ;oCACR;oCACAa,QAAA,EAAU;8CAETH;;wBAGP;wBACAI,OAAA,EAAQ;wBACRC,CAAA,EAAGtB,IAAA,CAAKsB,CAAAA;;oBAGZC,OAAA,EAASvB,IAAA,CAAKsB,CAAC,CAAC;;0PAElBT,MAAA,AAAAA,2KAAC7B,SAAA,EAAA;oBAAOwC,WAAA,EAAY;oBAAYC,EAAA,EAAG;oBAAOC,IAAA,EAAK;oBAAQC,EAAA,EAAIjB,UAAA;8BACxDV,IAAA,CAAKsB,CAAC,CAAC;;;;IAIhB;IAEA,OAAA,WAAA,IACEX,kOAAAA,AAAA,EAAC,OAAA;QAAIC,SAAA,EAAW,GAAGrB,sBAAA,CAAA,MAAA,CAA8B;;sPAC/CsB,MAAAA,AAAA,kLAACxB,aAAA,EAAA;gBAAWkC,OAAA,EAASvB,IAAA,CAAKsB,CAAC,CAAC;;sPAC5BT,MAAAA,AAAA,uMAACvB,oBAAA,EAAA;gBAAkBS,KAAA,EAAOA;;2BAC1Bc,iOAAAA,AAAA,2KAAC5B,OAAA,EAAA;gBACCiC,IAAA,EAAMhC,8LAAAA,AAAA,EAAe;oBACnBwB,UAAA;oBACAS,IAAA,EAAMV;gBACR;gBACAW,QAAA,EAAU;0BAETpB,IAAA,CAAKsB,CAAC,CAAC;;;;AAIhB","ignoreList":[0]}},
    {"offset": {"line": 1440, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1459, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Verify/index.client.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ToastAndRedirect = registerClientReference(\n    function() { throw new Error(\"Attempted to call ToastAndRedirect() from the server but ToastAndRedirect is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Verify/index.client.js <module evaluation>\",\n    \"ToastAndRedirect\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iGACA","ignoreList":[0]}},
    {"offset": {"line": 1467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1473, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/dist/views/Verify/index.client.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ToastAndRedirect = registerClientReference(\n    function() { throw new Error(\"Attempted to call ToastAndRedirect() from the server but ToastAndRedirect is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@payloadcms/next/dist/views/Verify/index.client.js\",\n    \"ToastAndRedirect\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6EACA","ignoreList":[0]}},
    {"offset": {"line": 1481, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1487, "column": 0}, "map": {"version":3,"file":"index.client.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Verify/index.client.tsx"],"sourcesContent":["'use client'\nimport { toast, useRouteTransition } from '@payloadcms/ui'\nimport { useRouter } from 'next/navigation.js'\nimport React, { useEffect } from 'react'\n\ntype Props = {\n  message: string\n  redirectTo: string\n}\nexport function ToastAndRedirect({ message, redirectTo }: Props) {\n  const router = useRouter()\n  const { startRouteTransition } = useRouteTransition()\n  const hasToastedRef = React.useRef(false)\n\n  useEffect(() => {\n    let timeoutID\n\n    if (toast) {\n      timeoutID = setTimeout(() => {\n        toast.success(message)\n        hasToastedRef.current = true\n        startRouteTransition(() => router.push(redirectTo))\n      }, 100)\n    }\n\n    return () => {\n      if (timeoutID) {\n        clearTimeout(timeoutID)\n      }\n    }\n  }, [router, redirectTo, message, startRouteTransition])\n\n  return null\n}\n"],"names":["c","_c","toast","useRouteTransition","useRouter","React","useEffect","ToastAndRedirect","t0","$","message","redirectTo","router","startRouteTransition","hasToastedRef","useRef","t1","t2","timeoutID","current","push","clearTimeout"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 1491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1497, "column": 0}, "map": {"version":3,"file":"meta.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Verify/meta.ts"],"sourcesContent":["import type { GenerateViewMetadata } from '../Root/index.js'\n\nimport { meta } from '../../utilities/meta.js'\n\nexport const generateVerifyMetadata: GenerateViewMetadata = async ({ config, i18n: { t } }) =>\n  meta({\n    description: t('authentication:verifyUser'),\n    keywords: t('authentication:verify'),\n    serverURL: config.serverURL,\n    title: t('authentication:verify'),\n    ...(config.admin.meta || {}),\n  })\n"],"names":["meta","generateVerifyMetadata","config","i18n","t","description","keywords","serverURL","title","admin"],"mappings":";;;AAEA,SAASA,IAAI,QAAQ;;AAEd,MAAMC,sBAAA,GAA+C,MAAAA,CAAO,EAAEC,MAAM,EAAEC,IAAA,EAAM,EAAEC,CAAAA,EAAC,EAAI,yKACxFJ,OAAAA,AAAA,EAAK;QACHK,WAAA,EAAaD,CAAA,CAAE;QACfE,QAAA,EAAUF,CAAA,CAAE;QACZG,SAAA,EAAWL,MAAA,CAAOK,SAAS;QAC3BC,KAAA,EAAOJ,CAAA,CAAE;QACT,GAAIF,MAAA,CAAOO,KAAK,CAACT,IAAI,IAAI,CAAC,CAAC;IAC7B","ignoreList":[0]}},
    {"offset": {"line": 1509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1515, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Verify/index.tsx"],"sourcesContent":["import type { AdminViewServerProps } from 'payload'\n\nimport { formatAdminURL } from '@payloadcms/ui/shared'\nimport React from 'react'\n\nimport { Logo } from '../../elements/Logo/index.js'\nimport { ToastAndRedirect } from './index.client.js'\nimport './index.scss'\n\nexport const verifyBaseClass = 'verify'\n\nexport { generateVerifyMetadata } from './meta.js'\n\nexport async function Verify({ initPageResult, params, searchParams }: AdminViewServerProps) {\n  // /:collectionSlug/verify/:token\n\n  const [collectionSlug, token] = params.segments\n  const { locale, permissions, req } = initPageResult\n\n  const {\n    i18n,\n    payload: { config },\n    payload,\n    user,\n  } = req\n\n  const {\n    routes: { admin: adminRoute },\n  } = config\n\n  let textToRender\n  let isVerified = false\n\n  try {\n    await req.payload.verifyEmail({\n      collection: collectionSlug,\n      token,\n    })\n\n    isVerified = true\n    textToRender = req.t('authentication:emailVerified')\n  } catch (e) {\n    textToRender = req.t('authentication:unableToVerify')\n  }\n\n  if (isVerified) {\n    return (\n      <ToastAndRedirect\n        message={req.t('authentication:emailVerified')}\n        redirectTo={formatAdminURL({ adminRoute, path: '/login' })}\n      />\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <div className={`${verifyBaseClass}__brand`}>\n        <Logo\n          i18n={i18n}\n          locale={locale}\n          params={params}\n          payload={payload}\n          permissions={permissions}\n          searchParams={searchParams}\n          user={user}\n        />\n      </div>\n      <h2>{textToRender}</h2>\n    </React.Fragment>\n  )\n}\n"],"names":["formatAdminURL","React","Logo","ToastAndRedirect","verifyBaseClass","generateVerifyMetadata","Verify","initPageResult","params","searchParams","collectionSlug","token","segments","locale","permissions","req","i18n","payload","config","user","routes","admin","adminRoute","textToRender","isVerified","verifyEmail","collection","t","e","_jsx","message","redirectTo","path","_jsxs","Fragment","className"],"mappings":";;;;;AAGA,OAAOC,KAAA,MAAW;AAElB,SAASC,IAAI,QAAQ;AACrB,SAASC,gBAAgB,QAAQ;AAJjC,SAASH,cAAc,QAAQ;;;;;;AAOxB,MAAMI,eAAA,GAAkB;;AAIxB,eAAeE,OAAO,EAAEC,cAAc,EAAEC,MAAM,EAAEC,YAAAA,EAAoC;IACzF,iCAAA;IAEA,MAAM,CAACC,cAAA,EAAgBC,KAAA,CAAM,GAAGH,MAAA,CAAOI,QAAQ;IAC/C,MAAM,EAAEC,MAAM,EAAEC,WAAW,EAAEC,GAAAA,EAAK,GAAGR,cAAA;IAErC,MAAM,EACJS,IAAI,EACJC,OAAA,EAAS,EAAEC,MAAAA,EAAQ,EACnBD,OAAO,EACPE,IAAAA,EACD,GAAGJ,GAAA;IAEJ,MAAM,EACJK,MAAA,EAAQ,EAAEC,KAAA,EAAOC,UAAAA,EAAU,EAC5B,GAAGJ,MAAA;IAEJ,IAAIK,YAAA;IACJ,IAAIC,UAAA,GAAa;IAEjB,IAAI;QACF,MAAMT,GAAA,CAAIE,OAAO,CAACQ,WAAW,CAAC;YAC5BC,UAAA,EAAYhB,cAAA;YACZC;QACF;QAEAa,UAAA,GAAa;QACbD,YAAA,GAAeR,GAAA,CAAIY,CAAC,CAAC;IACvB,EAAE,OAAOC,CAAA,EAAG;QACVL,YAAA,GAAeR,GAAA,CAAIY,CAAC,CAAC;IACvB;IAEA,IAAIH,UAAA,EAAY;QACd,OAAA,WAAA,+NACEK,MAAAA,AAAA,qLAAC1B,mBAAA,EAAA;YACC2B,OAAA,EAASf,GAAA,CAAIY,CAAC,CAAC;YACfI,UAAA,EAAY/B,8LAAA,AAAAA,EAAe;gBAAEsB,UAAA;gBAAYU,IAAA,EAAM;YAAS;;IAG9D;IAEA,OAAA,WAAA,+NACEC,OAAAA,AAAA,uMAAChC,WAAA,CAAMiC,QAAQ,EAAA;;sPACbL,MAAAA,AAAA,EAAC,OAAA;gBAAIM,SAAA,EAAW,GAAG/B,eAAA,CAAA,OAAA,CAAwB;0BACzC,WAAA,+NAAAyB,MAAAA,AAAA,4KAAC3B,OAAA,EAAA;oBACCc,IAAA,EAAMA,IAAA;oBACNH,MAAA,EAAQA,MAAA;oBACRL,MAAA,EAAQA,MAAA;oBACRS,OAAA,EAASA,OAAA;oBACTH,WAAA,EAAaA,WAAA;oBACbL,YAAA,EAAcA,YAAA;oBACdU,IAAA,EAAMA;;;sPAGVU,MAAAA,AAAA,EAAC,MAAA;0BAAIN;;;;AAGX","ignoreList":[0]}},
    {"offset": {"line": 1578, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1597, "column": 0}, "map": {"version":3,"file":"attachViewActions.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Root/attachViewActions.ts"],"sourcesContent":["import type {\n  CustomComponent,\n  EditConfig,\n  SanitizedCollectionConfig,\n  SanitizedGlobalConfig,\n  ServerPropsFromView,\n} from 'payload'\n\nexport function getViewActions({\n  editConfig,\n  viewKey,\n}: {\n  editConfig: EditConfig\n  viewKey: keyof EditConfig\n}): CustomComponent[] | undefined {\n  if (editConfig && viewKey in editConfig && 'actions' in editConfig[viewKey]) {\n    return editConfig[viewKey].actions\n  }\n\n  return undefined\n}\n\nexport function attachViewActions({\n  collectionOrGlobal,\n  serverProps,\n  viewKeyArg,\n}: {\n  collectionOrGlobal: SanitizedCollectionConfig | SanitizedGlobalConfig\n  serverProps: ServerPropsFromView\n  viewKeyArg?: keyof EditConfig\n}) {\n  if (collectionOrGlobal?.admin?.components?.views?.edit) {\n    let viewKey = viewKeyArg || 'default'\n    if ('root' in collectionOrGlobal.admin.components.views.edit) {\n      viewKey = 'root'\n    }\n\n    const actions = getViewActions({\n      editConfig: collectionOrGlobal.admin?.components?.views?.edit,\n      viewKey,\n    })\n\n    if (actions) {\n      serverProps.viewActions = serverProps.viewActions.concat(actions)\n    }\n  }\n}\n"],"names":["getViewActions","editConfig","viewKey","actions","undefined","attachViewActions","collectionOrGlobal","serverProps","viewKeyArg","admin","components","views","edit","viewActions","concat"],"mappings":";;;;AAQO,SAASA,eAAe,EAC7BC,UAAU,EACVC,OAAAA,EAID;IACC,IAAID,UAAA,IAAcC,OAAA,IAAWD,UAAA,IAAc,aAAaA,UAAU,CAACC,OAAA,CAAQ,EAAE;QAC3E,OAAOD,UAAU,CAACC,OAAA,CAAQ,CAACC,OAAO;IACpC;IAEA,OAAOC,SAAA;AACT;AAEO,SAASC,kBAAkB,EAChCC,kBAAkB,EAClBC,WAAW,EACXC,UAAAA,EAKD;IACC,IAAIF,kBAAA,EAAoBG,KAAA,EAAOC,UAAA,EAAYC,KAAA,EAAOC,IAAA,EAAM;QACtD,IAAIV,OAAA,GAAUM,UAAA,IAAc;QAC5B,IAAI,UAAUF,kBAAA,CAAmBG,KAAK,CAACC,UAAU,CAACC,KAAK,CAACC,IAAI,EAAE;YAC5DV,OAAA,GAAU;QACZ;QAEA,MAAMC,OAAA,GAAUH,cAAA,CAAe;YAC7BC,UAAA,EAAYK,kBAAA,CAAmBG,KAAK,EAAEC,UAAA,EAAYC,KAAA,EAAOC,IAAA;YACzDV;QACF;QAEA,IAAIC,OAAA,EAAS;YACXI,WAAA,CAAYM,WAAW,GAAGN,WAAA,CAAYM,WAAW,CAACC,MAAM,CAACX,OAAA;QAC3D;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 1622, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1628, "column": 0}, "map": {"version":3,"file":"getCustomViewByRoute.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Root/getCustomViewByRoute.ts"],"sourcesContent":["import type { AdminViewConfig, SanitizedConfig } from 'payload'\n\nimport type { ViewFromConfig } from './getViewFromConfig.js'\n\nimport { isPathMatchingRoute } from './isPathMatchingRoute.js'\n\nexport const getCustomViewByRoute = ({\n  config,\n  currentRoute: currentRouteWithAdmin,\n}: {\n  config: SanitizedConfig\n  currentRoute: string\n}): {\n  view: ViewFromConfig\n  viewConfig: AdminViewConfig\n  viewKey: string\n} => {\n  const {\n    admin: {\n      components: { views },\n    },\n    routes: { admin: adminRoute },\n  } = config\n\n  const currentRoute = currentRouteWithAdmin.replace(adminRoute, '')\n  let viewKey: string\n\n  const foundViewConfig =\n    (views &&\n      typeof views === 'object' &&\n      Object.entries(views).find(([key, view]) => {\n        const isMatching = isPathMatchingRoute({\n          currentRoute,\n          exact: view.exact,\n          path: view.path,\n          sensitive: view.sensitive,\n          strict: view.strict,\n        })\n\n        if (isMatching) {\n          viewKey = key\n        }\n\n        return isMatching\n      })?.[1]) ||\n    undefined\n\n  if (!foundViewConfig) {\n    return {\n      view: {\n        Component: null,\n      },\n      viewConfig: null,\n      viewKey: null,\n    }\n  }\n\n  return {\n    view: {\n      payloadComponent: foundViewConfig.Component,\n    },\n    viewConfig: foundViewConfig,\n    viewKey,\n  }\n}\n"],"names":["isPathMatchingRoute","getCustomViewByRoute","config","currentRoute","currentRouteWithAdmin","admin","components","views","routes","adminRoute","replace","viewKey","foundViewConfig","Object","entries","find","key","view","isMatching","exact","path","sensitive","strict","undefined","Component","viewConfig","payloadComponent"],"mappings":";;;AAIA,SAASA,mBAAmB,QAAQ;;AAE7B,MAAMC,oBAAA,GAAuBA,CAAC,EACnCC,MAAM,EACNC,YAAA,EAAcC,qBAAAA,EAIf;IAKC,MAAM,EACJC,KAAA,EAAO,EACLC,UAAA,EAAY,EAAEC,KAAAA,EAAK,EACpB,EACDC,MAAA,EAAQ,EAAEH,KAAA,EAAOI,UAAAA,EAAU,EAC5B,GAAGP,MAAA;IAEJ,MAAMC,YAAA,GAAeC,qBAAA,CAAsBM,OAAO,CAACD,UAAA,EAAY;IAC/D,IAAIE,OAAA;IAEJ,MAAMC,eAAA,GACJL,KAAC,IACC,OAAOA,KAAA,KAAU,YACjBM,MAAA,CAAOC,OAAO,CAACP,KAAA,EAAOQ,IAAI,CAAC,CAAC,CAACC,GAAA,EAAKC,IAAA,CAAK;QACrC,MAAMC,UAAA,4LAAalB,sBAAAA,AAAA,EAAoB;YACrCG,YAAA;YACAgB,KAAA,EAAOF,IAAA,CAAKE,KAAK;YACjBC,IAAA,EAAMH,IAAA,CAAKG,IAAI;YACfC,SAAA,EAAWJ,IAAA,CAAKI,SAAS;YACzBC,MAAA,EAAQL,IAAA,CAAKK,MAAAA;QACf;QAEA,IAAIJ,UAAA,EAAY;YACdP,OAAA,GAAUK,GAAA;QACZ;QAEA,OAAOE,UAAA;IACT,IAAA,CAAK,EAAE,IACTK,SAAA;IAEF,IAAI,CAACX,eAAA,EAAiB;QACpB,OAAO;YACLK,IAAA,EAAM;gBACJO,SAAA,EAAW;YACb;YACAC,UAAA,EAAY;YACZd,OAAA,EAAS;QACX;IACF;IAEA,OAAO;QACLM,IAAA,EAAM;YACJS,gBAAA,EAAkBd,eAAA,CAAgBY,SAAAA;QACpC;QACAC,UAAA,EAAYb,eAAA;QACZD;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 1667, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1673, "column": 0}, "map": {"version":3,"file":"getDocumentViewInfo.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Root/getDocumentViewInfo.ts"],"sourcesContent":["import type { DocumentSubViewTypes, ViewTypes } from 'payload'\n\nexport function getDocumentViewInfo(segments: string[]): {\n  documentSubViewType?: DocumentSubViewTypes\n  viewType: ViewTypes\n} {\n  const [tabSegment, versionSegment] = segments\n\n  if (versionSegment) {\n    if (tabSegment === 'versions') {\n      return {\n        documentSubViewType: 'version',\n        viewType: 'version',\n      }\n    }\n  } else {\n    if (tabSegment === 'versions') {\n      return {\n        documentSubViewType: 'versions',\n        viewType: 'document',\n      }\n    } else if (tabSegment === 'preview') {\n      return {\n        documentSubViewType: 'livePreview',\n        viewType: 'document',\n      }\n    } else if (tabSegment === 'api') {\n      return {\n        documentSubViewType: 'api',\n        viewType: 'document',\n      }\n    }\n  }\n\n  return {\n    documentSubViewType: 'default',\n    viewType: 'document',\n  }\n}\n"],"names":["getDocumentViewInfo","segments","tabSegment","versionSegment","documentSubViewType","viewType"],"mappings":";;;AAEO,SAASA,oBAAoBC,QAAkB;IAIpD,MAAM,CAACC,UAAA,EAAYC,cAAA,CAAe,GAAGF,QAAA;IAErC,IAAIE,cAAA,EAAgB;QAClB,IAAID,UAAA,KAAe,YAAY;YAC7B,OAAO;gBACLE,mBAAA,EAAqB;gBACrBC,QAAA,EAAU;YACZ;QACF;IACF,OAAO;QACL,IAAIH,UAAA,KAAe,YAAY;YAC7B,OAAO;gBACLE,mBAAA,EAAqB;gBACrBC,QAAA,EAAU;YACZ;QACF,OAAO,IAAIH,UAAA,KAAe,WAAW;YACnC,OAAO;gBACLE,mBAAA,EAAqB;gBACrBC,QAAA,EAAU;YACZ;QACF,OAAO,IAAIH,UAAA,KAAe,OAAO;YAC/B,OAAO;gBACLE,mBAAA,EAAqB;gBACrBC,QAAA,EAAU;YACZ;QACF;IACF;IAEA,OAAO;QACLD,mBAAA,EAAqB;QACrBC,QAAA,EAAU;IACZ;AACF","ignoreList":[0]}},
    {"offset": {"line": 1708, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1714, "column": 0}, "map": {"version":3,"file":"getViewFromConfig.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Root/getViewFromConfig.ts"],"sourcesContent":["import type {\n  AdminViewServerProps,\n  DocumentSubViewTypes,\n  ImportMap,\n  PayloadComponent,\n  SanitizedConfig,\n  ServerPropsFromView,\n  ViewTypes,\n} from 'payload'\nimport type React from 'react'\n\nimport { formatAdminURL } from '@payloadcms/ui/shared'\n\nimport type { initPage } from '../../utilities/initPage/index.js'\n\nimport { Account } from '../Account/index.js'\nimport { CreateFirstUserView } from '../CreateFirstUser/index.js'\nimport { Dashboard } from '../Dashboard/index.js'\nimport { Document as DocumentView } from '../Document/index.js'\nimport { forgotPasswordBaseClass, ForgotPasswordView } from '../ForgotPassword/index.js'\nimport { ListView } from '../List/index.js'\nimport { loginBaseClass, LoginView } from '../Login/index.js'\nimport { LogoutInactivity, LogoutView } from '../Logout/index.js'\nimport { ResetPassword, resetPasswordBaseClass } from '../ResetPassword/index.js'\nimport { UnauthorizedView } from '../Unauthorized/index.js'\nimport { Verify, verifyBaseClass } from '../Verify/index.js'\nimport { attachViewActions, getViewActions } from './attachViewActions.js'\nimport { getCustomViewByRoute } from './getCustomViewByRoute.js'\nimport { getDocumentViewInfo } from './getDocumentViewInfo.js'\nimport { isPathMatchingRoute } from './isPathMatchingRoute.js'\n\nconst baseClasses = {\n  account: 'account',\n  forgot: forgotPasswordBaseClass,\n  login: loginBaseClass,\n  reset: resetPasswordBaseClass,\n  verify: verifyBaseClass,\n}\n\ntype OneSegmentViews = {\n  [K in Exclude<keyof SanitizedConfig['admin']['routes'], 'reset'>]: React.FC<AdminViewServerProps>\n}\n\nexport type ViewFromConfig = {\n  Component?: React.FC<AdminViewServerProps>\n  payloadComponent?: PayloadComponent<AdminViewServerProps>\n}\n\nconst oneSegmentViews: OneSegmentViews = {\n  account: Account,\n  createFirstUser: CreateFirstUserView,\n  forgot: ForgotPasswordView,\n  inactivity: LogoutInactivity,\n  login: LoginView,\n  logout: LogoutView,\n  unauthorized: UnauthorizedView,\n}\n\ntype GetViewFromConfigArgs = {\n  adminRoute: string\n  config: SanitizedConfig\n  currentRoute: string\n  importMap: ImportMap\n  searchParams: {\n    [key: string]: string | string[]\n  }\n  segments: string[]\n}\n\ntype GetViewFromConfigResult = {\n  DefaultView: ViewFromConfig\n  documentSubViewType?: DocumentSubViewTypes\n  initPageOptions: Parameters<typeof initPage>[0]\n  serverProps: ServerPropsFromView\n  templateClassName: string\n  templateType: 'default' | 'minimal'\n  viewType?: ViewTypes\n}\n\nexport const getViewFromConfig = ({\n  adminRoute,\n  config,\n  currentRoute,\n  importMap,\n  searchParams,\n  segments,\n}: GetViewFromConfigArgs): GetViewFromConfigResult => {\n  let ViewToRender: ViewFromConfig = null\n  let templateClassName: string\n  let templateType: 'default' | 'minimal' | undefined\n  let documentSubViewType: DocumentSubViewTypes\n  let viewType: ViewTypes\n\n  const initPageOptions: Parameters<typeof initPage>[0] = {\n    config,\n    importMap,\n    route: currentRoute,\n    searchParams,\n  }\n\n  const [segmentOne, segmentTwo, segmentThree, segmentFour, segmentFive] = segments\n\n  const isGlobal = segmentOne === 'globals'\n  const isCollection = segmentOne === 'collections'\n  let matchedCollection: SanitizedConfig['collections'][number] = undefined\n  let matchedGlobal: SanitizedConfig['globals'][number] = undefined\n\n  const serverProps: ServerPropsFromView = {\n    viewActions: config?.admin?.components?.actions || [],\n  }\n\n  if (isCollection) {\n    matchedCollection = config.collections.find(({ slug }) => slug === segmentTwo)\n    serverProps.collectionConfig = matchedCollection\n  }\n\n  if (isGlobal) {\n    matchedGlobal = config.globals.find(({ slug }) => slug === segmentTwo)\n    serverProps.globalConfig = matchedGlobal\n  }\n\n  switch (segments.length) {\n    case 0: {\n      if (currentRoute === adminRoute) {\n        ViewToRender = {\n          Component: Dashboard,\n        }\n        templateClassName = 'dashboard'\n        templateType = 'default'\n        viewType = 'dashboard'\n      }\n      break\n    }\n    case 1: {\n      // users can override the default routes via `admin.routes` config\n      // i.e.{ admin: { routes: { logout: '/sign-out', inactivity: '/idle' }}}\n      let viewKey: keyof typeof oneSegmentViews\n\n      if (config.admin.routes) {\n        const matchedRoute = Object.entries(config.admin.routes).find(([, route]) => {\n          return isPathMatchingRoute({\n            currentRoute,\n            exact: true,\n            path: formatAdminURL({ adminRoute, path: route }),\n          })\n        })\n\n        if (matchedRoute) {\n          viewKey = matchedRoute[0] as keyof typeof oneSegmentViews\n        }\n      }\n\n      if (oneSegmentViews[viewKey]) {\n        // --> /account\n        // --> /create-first-user\n        // --> /forgot\n        // --> /login\n        // --> /logout\n        // --> /logout-inactivity\n        // --> /unauthorized\n\n        ViewToRender = {\n          Component: oneSegmentViews[viewKey],\n        }\n\n        templateClassName = baseClasses[viewKey]\n        templateType = 'minimal'\n\n        if (viewKey === 'account') {\n          templateType = 'default'\n          viewType = 'account'\n        }\n      }\n      break\n    }\n    case 2: {\n      if (`/${segmentOne}` === config.admin.routes.reset) {\n        // --> /reset/:token\n        ViewToRender = {\n          Component: ResetPassword,\n        }\n        templateClassName = baseClasses[segmentTwo]\n        templateType = 'minimal'\n        viewType = 'reset'\n      }\n\n      if (isCollection && matchedCollection) {\n        // --> /collections/:collectionSlug\n\n        ViewToRender = {\n          Component: ListView,\n        }\n\n        templateClassName = `${segmentTwo}-list`\n        templateType = 'default'\n        viewType = 'list'\n        serverProps.viewActions = serverProps.viewActions.concat(\n          matchedCollection.admin.components?.views?.list?.actions,\n        )\n      } else if (isGlobal && matchedGlobal) {\n        // --> /globals/:globalSlug\n\n        ViewToRender = {\n          Component: DocumentView,\n        }\n\n        templateClassName = 'global-edit'\n        templateType = 'default'\n        viewType = 'document'\n\n        // add default view actions\n        serverProps.viewActions = serverProps.viewActions.concat(\n          getViewActions({\n            editConfig: matchedGlobal.admin?.components?.views?.edit,\n            viewKey: 'default',\n          }),\n        )\n      }\n      break\n    }\n    default:\n      if (segmentTwo === 'verify') {\n        // --> /:collectionSlug/verify/:token\n        ViewToRender = {\n          Component: Verify,\n        }\n\n        templateClassName = 'verify'\n        templateType = 'minimal'\n        viewType = 'verify'\n      } else if (isCollection && matchedCollection) {\n        // Custom Views\n        // --> /collections/:collectionSlug/:id\n        // --> /collections/:collectionSlug/:id/api\n        // --> /collections/:collectionSlug/:id/preview\n        // --> /collections/:collectionSlug/:id/versions\n        // --> /collections/:collectionSlug/:id/versions/:versionID\n\n        ViewToRender = {\n          Component: DocumentView,\n        }\n\n        templateClassName = `collection-default-edit`\n        templateType = 'default'\n\n        const viewInfo = getDocumentViewInfo([segmentFour, segmentFive])\n        viewType = viewInfo.viewType\n        documentSubViewType = viewInfo.documentSubViewType\n\n        attachViewActions({\n          collectionOrGlobal: matchedCollection,\n          serverProps,\n          viewKeyArg: documentSubViewType,\n        })\n      } else if (isGlobal && matchedGlobal) {\n        // Custom Views\n        // --> /globals/:globalSlug/versions\n        // --> /globals/:globalSlug/preview\n        // --> /globals/:globalSlug/versions/:versionID\n        // --> /globals/:globalSlug/api\n\n        ViewToRender = {\n          Component: DocumentView,\n        }\n\n        templateClassName = `global-edit`\n        templateType = 'default'\n\n        const viewInfo = getDocumentViewInfo([segmentThree, segmentFour])\n        viewType = viewInfo.viewType\n        documentSubViewType = viewInfo.documentSubViewType\n\n        attachViewActions({\n          collectionOrGlobal: matchedGlobal,\n          serverProps,\n          viewKeyArg: documentSubViewType,\n        })\n      }\n      break\n  }\n\n  if (!ViewToRender) {\n    ViewToRender = getCustomViewByRoute({ config, currentRoute })?.view\n  }\n\n  serverProps.viewActions.reverse()\n\n  return {\n    DefaultView: ViewToRender,\n    documentSubViewType,\n    initPageOptions,\n    serverProps,\n    templateClassName,\n    templateType,\n    viewType,\n  }\n}\n"],"names":["formatAdminURL","Account","CreateFirstUserView","Dashboard","Document","DocumentView","forgotPasswordBaseClass","ForgotPasswordView","ListView","loginBaseClass","LoginView","LogoutInactivity","LogoutView","ResetPassword","resetPasswordBaseClass","UnauthorizedView","Verify","verifyBaseClass","attachViewActions","getViewActions","getCustomViewByRoute","getDocumentViewInfo","isPathMatchingRoute","baseClasses","account","forgot","login","reset","verify","oneSegmentViews","createFirstUser","inactivity","logout","unauthorized","getViewFromConfig","adminRoute","config","currentRoute","importMap","searchParams","segments","ViewToRender","templateClassName","templateType","documentSubViewType","viewType","initPageOptions","route","segmentOne","segmentTwo","segmentThree","segmentFour","segmentFive","isGlobal","isCollection","matchedCollection","undefined","matchedGlobal","serverProps","viewActions","admin","components","actions","collections","find","slug","collectionConfig","globals","globalConfig","length","Component","viewKey","routes","matchedRoute","Object","entries","exact","path","concat","views","list","editConfig","edit","viewInfo","collectionOrGlobal","viewKeyArg","view","reverse","DefaultView"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1966, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1972, "column": 0}, "map": {"version":3,"file":"meta.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Document/meta.ts"],"sourcesContent":["import type { GenerateEditViewMetadata } from './getMetaBySegment.js'\n\nimport { getMetaBySegment } from './getMetaBySegment.js'\n\nexport const generateDocumentMetadata: GenerateEditViewMetadata = async (args) =>\n  getMetaBySegment(args)\n"],"names":["getMetaBySegment","generateDocumentMetadata","args"],"mappings":";;;AAEA,SAASA,gBAAgB,QAAQ;;AAE1B,MAAMC,wBAAA,GAAqD,OAAOC,IAAA,6LACvEF,mBAAAA,AAAA,EAAiBE,IAAA","ignoreList":[0]}},
    {"offset": {"line": 1978, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1984, "column": 0}, "map": {"version":3,"file":"generateCustomViewMetadata.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Root/generateCustomViewMetadata.ts"],"sourcesContent":["import type { I18nClient } from '@payloadcms/translations'\nimport type { Metadata } from 'next'\nimport type {\n  AdminViewConfig,\n  SanitizedCollectionConfig,\n  SanitizedConfig,\n  SanitizedGlobalConfig,\n} from 'payload'\n\nimport { meta } from '../../utilities/meta.js'\n\nexport const generateCustomViewMetadata = async (args: {\n  collectionConfig?: SanitizedCollectionConfig\n  config: SanitizedConfig\n  globalConfig?: SanitizedGlobalConfig\n  i18n: I18nClient\n  viewConfig: AdminViewConfig\n}): Promise<Metadata> => {\n  const {\n    config,\n    // i18n: { t },\n    viewConfig,\n  } = args\n\n  if (!viewConfig) {\n    return null\n  }\n\n  return meta({\n    description: `Payload`,\n    keywords: `Payload`,\n    serverURL: config.serverURL,\n    title: 'Payload',\n    ...(config.admin.meta || {}),\n    ...(viewConfig.meta || {}),\n    openGraph: {\n      title: 'Payload',\n      ...(config.admin.meta?.openGraph || {}),\n      ...(viewConfig.meta?.openGraph || {}),\n    },\n  })\n}\n"],"names":["meta","generateCustomViewMetadata","args","config","viewConfig","description","keywords","serverURL","title","admin","openGraph"],"mappings":";;;AASA,SAASA,IAAI,QAAQ;;AAEd,MAAMC,0BAAA,GAA6B,OAAOC,IAAA;IAO/C,MAAM,EACJC,MAAM,EACN,eAAA;IACAC,UAAAA,EACD,GAAGF,IAAA;IAEJ,IAAI,CAACE,UAAA,EAAY;QACf,OAAO;IACT;IAEA,QAAOJ,4KAAAA,AAAA,EAAK;QACVK,WAAA,EAAa,CAAA,OAAA,CAAS;QACtBC,QAAA,EAAU,CAAA,OAAA,CAAS;QACnBC,SAAA,EAAWJ,MAAA,CAAOI,SAAS;QAC3BC,KAAA,EAAO;QACP,GAAIL,MAAA,CAAOM,KAAK,CAACT,IAAI,IAAI,CAAC,CAAC;QAC3B,GAAII,UAAA,CAAWJ,IAAI,IAAI,CAAC,CAAC;QACzBU,SAAA,EAAW;YACTF,KAAA,EAAO;YACP,GAAIL,MAAA,CAAOM,KAAK,CAACT,IAAI,EAAEU,SAAA,IAAa,CAAC,CAAC;YACtC,GAAIN,UAAA,CAAWJ,IAAI,EAAEU,SAAA,IAAa,CAAC,CAAC;QACtC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 2009, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2015, "column": 0}, "map": {"version":3,"file":"meta.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Root/meta.ts"],"sourcesContent":["import type { Metadata } from 'next'\nimport type { SanitizedConfig } from 'payload'\n\nimport { getNextRequestI18n } from '../../utilities/getNextRequestI18n.js'\nimport { generateAccountMetadata } from '../Account/index.js'\nimport { generateCreateFirstUserMetadata } from '../CreateFirstUser/index.js'\nimport { generateDashboardMetadata } from '../Dashboard/index.js'\nimport { generateDocumentMetadata } from '../Document/meta.js'\nimport { generateForgotPasswordMetadata } from '../ForgotPassword/index.js'\nimport { generateListMetadata } from '../List/index.js'\nimport { generateLoginMetadata } from '../Login/index.js'\nimport { generateNotFoundMeta } from '../NotFound/meta.js'\nimport { generateResetPasswordMetadata } from '../ResetPassword/index.js'\nimport { generateUnauthorizedMetadata } from '../Unauthorized/index.js'\nimport { generateVerifyMetadata } from '../Verify/index.js'\nimport { generateCustomViewMetadata } from './generateCustomViewMetadata.js'\nimport { getCustomViewByRoute } from './getCustomViewByRoute.js'\n\nconst oneSegmentMeta = {\n  'create-first-user': generateCreateFirstUserMetadata,\n  forgot: generateForgotPasswordMetadata,\n  login: generateLoginMetadata,\n  logout: generateUnauthorizedMetadata,\n  'logout-inactivity': generateUnauthorizedMetadata,\n  unauthorized: generateUnauthorizedMetadata,\n}\n\ntype Args = {\n  config: Promise<SanitizedConfig>\n  params: Promise<{\n    [key: string]: string | string[]\n  }>\n  searchParams: Promise<{\n    [key: string]: string | string[]\n  }>\n}\n\nexport const generatePageMetadata = async ({\n  config: configPromise,\n  params: paramsPromise,\n}: Args) => {\n  const config = await configPromise\n\n  const params = await paramsPromise\n  const segments = Array.isArray(params.segments) ? params.segments : []\n\n  const currentRoute = `/${segments.join('/')}`\n  const [segmentOne, segmentTwo] = segments\n\n  const isGlobal = segmentOne === 'globals'\n  const isCollection = segmentOne === 'collections'\n\n  const i18n = await getNextRequestI18n({\n    config,\n  })\n\n  let meta: Metadata\n\n  // TODO: handle custom routes\n\n  const collectionConfig =\n    isCollection &&\n    segments.length > 1 &&\n    config?.collections?.find((collection) => collection.slug === segmentTwo)\n\n  const globalConfig =\n    isGlobal && segments.length > 1 && config?.globals?.find((global) => global.slug === segmentTwo)\n\n  switch (segments.length) {\n    case 0: {\n      meta = await generateDashboardMetadata({ config, i18n })\n      break\n    }\n    case 1: {\n      if (oneSegmentMeta[segmentOne] && segmentOne !== 'account') {\n        // --> /create-first-user\n        // --> /forgot\n        // --> /login\n        // --> /logout\n        // --> /logout-inactivity\n        // --> /unauthorized\n        meta = await oneSegmentMeta[segmentOne]({ config, i18n })\n        break\n      } else if (segmentOne === 'account') {\n        // --> /account\n        meta = await generateAccountMetadata({ config, i18n })\n        break\n      }\n      break\n    }\n    case 2: {\n      if (`/${segmentOne}` === config.admin.routes.reset) {\n        // --> /reset/:token\n        meta = await generateResetPasswordMetadata({ config, i18n })\n      }\n      if (isCollection) {\n        // --> /collections/:collectionSlug\n        meta = await generateListMetadata({ collectionConfig, config, i18n })\n      } else if (isGlobal) {\n        // --> /globals/:globalSlug\n        meta = await generateDocumentMetadata({\n          config,\n          globalConfig,\n          i18n,\n          params,\n        })\n      }\n      break\n    }\n    default: {\n      if (segmentTwo === 'verify') {\n        // --> /:collectionSlug/verify/:token\n        meta = await generateVerifyMetadata({ config, i18n })\n      } else if (isCollection) {\n        // Custom Views\n        // --> /collections/:collectionSlug/:id\n        // --> /collections/:collectionSlug/:id/preview\n        // --> /collections/:collectionSlug/:id/versions\n        // --> /collections/:collectionSlug/:id/versions/:version\n        // --> /collections/:collectionSlug/:id/api\n        meta = await generateDocumentMetadata({ collectionConfig, config, i18n, params })\n      } else if (isGlobal) {\n        // Custom Views\n        // --> /globals/:globalSlug/versions\n        // --> /globals/:globalSlug/versions/:version\n        // --> /globals/:globalSlug/preview\n        // --> /globals/:globalSlug/api\n        meta = await generateDocumentMetadata({\n          config,\n          globalConfig,\n          i18n,\n          params,\n        })\n      }\n      break\n    }\n  }\n\n  if (!meta) {\n    const { viewConfig, viewKey } = getCustomViewByRoute({\n      config,\n      currentRoute,\n    })\n\n    if (viewKey) {\n      // Custom Views\n      // --> /:path\n      meta = await generateCustomViewMetadata({\n        config,\n        i18n,\n        viewConfig,\n      })\n    } else {\n      meta = await generateNotFoundMeta({ config, i18n })\n    }\n  }\n\n  return meta\n}\n"],"names":["getNextRequestI18n","generateAccountMetadata","generateCreateFirstUserMetadata","generateDashboardMetadata","generateDocumentMetadata","generateForgotPasswordMetadata","generateListMetadata","generateLoginMetadata","generateNotFoundMeta","generateResetPasswordMetadata","generateUnauthorizedMetadata","generateVerifyMetadata","generateCustomViewMetadata","getCustomViewByRoute","oneSegmentMeta","forgot","login","logout","unauthorized","generatePageMetadata","config","configPromise","params","paramsPromise","segments","Array","isArray","currentRoute","join","segmentOne","segmentTwo","isGlobal","isCollection","i18n","meta","collectionConfig","length","collections","find","collection","slug","globalConfig","globals","global","admin","routes","reset","viewConfig","viewKey"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2203, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/views/Root/index.tsx"],"sourcesContent":["import type { I18nClient } from '@payloadcms/translations'\nimport type { Metadata } from 'next'\nimport type {\n  AdminViewClientProps,\n  AdminViewServerPropsOnly,\n  ImportMap,\n  SanitizedConfig,\n} from 'payload'\n\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport { formatAdminURL } from '@payloadcms/ui/shared'\nimport { getClientConfig } from '@payloadcms/ui/utilities/getClientConfig'\nimport { notFound, redirect } from 'next/navigation.js'\nimport React, { Fragment } from 'react'\n\nimport { DefaultTemplate } from '../../templates/Default/index.js'\nimport { MinimalTemplate } from '../../templates/Minimal/index.js'\nimport { initPage } from '../../utilities/initPage/index.js'\nimport { getViewFromConfig } from './getViewFromConfig.js'\n\nexport { generatePageMetadata } from './meta.js'\n\nexport type GenerateViewMetadata = (args: {\n  config: SanitizedConfig\n  i18n: I18nClient\n  isEditing?: boolean\n  params?: { [key: string]: string | string[] }\n}) => Promise<Metadata>\n\nexport const RootPage = async ({\n  config: configPromise,\n  importMap,\n  params: paramsPromise,\n  searchParams: searchParamsPromise,\n}: {\n  readonly config: Promise<SanitizedConfig>\n  readonly importMap: ImportMap\n  readonly params: Promise<{\n    segments: string[]\n  }>\n  readonly searchParams: Promise<{\n    [key: string]: string | string[]\n  }>\n}) => {\n  const config = await configPromise\n\n  const {\n    admin: {\n      routes: { createFirstUser: _createFirstUserRoute },\n      user: userSlug,\n    },\n    routes: { admin: adminRoute },\n  } = config\n\n  const params = await paramsPromise\n\n  const currentRoute = formatAdminURL({\n    adminRoute,\n    path: `${Array.isArray(params.segments) ? `/${params.segments.join('/')}` : ''}`,\n  })\n\n  const segments = Array.isArray(params.segments) ? params.segments : []\n\n  const searchParams = await searchParamsPromise\n\n  const {\n    DefaultView,\n    documentSubViewType,\n    initPageOptions,\n    serverProps,\n    templateClassName,\n    templateType,\n    viewType,\n  } = getViewFromConfig({\n    adminRoute,\n    config,\n    currentRoute,\n    importMap,\n    searchParams,\n    segments,\n  })\n\n  const initPageResult = await initPage(initPageOptions)\n\n  const dbHasUser =\n    initPageResult.req.user ||\n    (await initPageResult?.req.payload.db\n      .findOne({\n        collection: userSlug,\n        req: initPageResult?.req,\n      })\n      ?.then((doc) => !!doc))\n\n  if (!DefaultView?.Component && !DefaultView?.payloadComponent) {\n    if (initPageResult?.req?.user) {\n      notFound()\n    }\n\n    if (dbHasUser) {\n      redirect(adminRoute)\n    }\n  }\n\n  if (typeof initPageResult?.redirectTo === 'string') {\n    redirect(initPageResult.redirectTo)\n  }\n\n  if (initPageResult) {\n    const createFirstUserRoute = formatAdminURL({ adminRoute, path: _createFirstUserRoute })\n\n    const collectionConfig = config.collections.find(({ slug }) => slug === userSlug)\n    const disableLocalStrategy = collectionConfig?.auth?.disableLocalStrategy\n\n    if (disableLocalStrategy && currentRoute === createFirstUserRoute) {\n      redirect(adminRoute)\n    }\n\n    if (!dbHasUser && currentRoute !== createFirstUserRoute && !disableLocalStrategy) {\n      redirect(createFirstUserRoute)\n    }\n\n    if (dbHasUser && currentRoute === createFirstUserRoute) {\n      redirect(adminRoute)\n    }\n  }\n\n  if (!DefaultView?.Component && !DefaultView?.payloadComponent && !dbHasUser) {\n    redirect(adminRoute)\n  }\n\n  const clientConfig = getClientConfig({\n    config,\n    i18n: initPageResult?.req.i18n,\n    importMap,\n  })\n\n  const RenderedView = RenderServerComponent({\n    clientProps: { clientConfig, documentSubViewType, viewType } satisfies AdminViewClientProps,\n    Component: DefaultView.payloadComponent,\n    Fallback: DefaultView.Component,\n    importMap,\n    serverProps: {\n      ...serverProps,\n      clientConfig,\n      docID: initPageResult?.docID,\n      i18n: initPageResult?.req.i18n,\n      importMap,\n      initPageResult,\n      params,\n      payload: initPageResult?.req.payload,\n      searchParams,\n    } satisfies AdminViewServerPropsOnly,\n  })\n\n  return (\n    <Fragment>\n      {!templateType && <Fragment>{RenderedView}</Fragment>}\n      {templateType === 'minimal' && (\n        <MinimalTemplate className={templateClassName}>{RenderedView}</MinimalTemplate>\n      )}\n      {templateType === 'default' && (\n        <DefaultTemplate\n          collectionSlug={initPageResult?.collectionConfig?.slug}\n          docID={initPageResult?.docID}\n          documentSubViewType={documentSubViewType}\n          globalSlug={initPageResult?.globalConfig?.slug}\n          i18n={initPageResult?.req.i18n}\n          locale={initPageResult?.locale}\n          params={params}\n          payload={initPageResult?.req.payload}\n          permissions={initPageResult?.permissions}\n          searchParams={searchParams}\n          user={initPageResult?.req.user}\n          viewActions={serverProps.viewActions}\n          viewType={viewType}\n          visibleEntities={{\n            // The reason we are not passing in initPageResult.visibleEntities directly is due to a \"Cannot assign to read only property of object '#<Object>\" error introduced in React 19\n            // which this caused as soon as initPageResult.visibleEntities is passed in\n            collections: initPageResult?.visibleEntities?.collections,\n            globals: initPageResult?.visibleEntities?.globals,\n          }}\n        >\n          {RenderedView}\n        </DefaultTemplate>\n      )}\n    </Fragment>\n  )\n}\n"],"names":["RenderServerComponent","formatAdminURL","getClientConfig","notFound","redirect","React","Fragment","DefaultTemplate","MinimalTemplate","initPage","getViewFromConfig","generatePageMetadata","RootPage","config","configPromise","importMap","params","paramsPromise","searchParams","searchParamsPromise","admin","routes","createFirstUser","_createFirstUserRoute","user","userSlug","adminRoute","currentRoute","path","Array","isArray","segments","join","DefaultView","documentSubViewType","initPageOptions","serverProps","templateClassName","templateType","viewType","initPageResult","dbHasUser","req","payload","db","findOne","collection","then","doc","Component","payloadComponent","redirectTo","createFirstUserRoute","collectionConfig","collections","find","slug","disableLocalStrategy","auth","clientConfig","i18n","RenderedView","clientProps","Fallback","docID","_jsxs","_jsx","className","collectionSlug","globalSlug","globalConfig","locale","permissions","viewActions","visibleEntities","globals"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2363, "column": 0}, "map": {"version":3,"file":"views.js","sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/%40payloadcms/next/src/exports/views.ts"],"sourcesContent":["export { NotFoundPage } from '../views/NotFound/index.js'\nexport { generatePageMetadata, type GenerateViewMetadata, RootPage } from '../views/Root/index.js'\n"],"names":["NotFoundPage","generatePageMetadata","RootPage"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 2367, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}