{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/file-type/node_modules/strtok3/lib/AbstractTokenizer.js"],"sourcesContent":["import { EndOfStreamError } from 'peek-readable';\n/**\n * Core tokenizer\n */\nexport class AbstractTokenizer {\n    /**\n     * Constructor\n     * @param options Tokenizer options\n     * @protected\n     */\n    constructor(options) {\n        /**\n         * Tokenizer-stream position\n         */\n        this.position = 0;\n        this.numBuffer = new Uint8Array(8);\n        this.fileInfo = options?.fileInfo ?? {};\n        this.onClose = options?.onClose;\n    }\n    /**\n     * Read a token from the tokenizer-stream\n     * @param token - The token to read\n     * @param position - If provided, the desired position in the tokenizer-stream\n     * @returns Promise with token data\n     */\n    async readToken(token, position = this.position) {\n        const uint8Array = new Uint8Array(token.len);\n        const len = await this.readBuffer(uint8Array, { position });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(uint8Array, 0);\n    }\n    /**\n     * Peek a token from the tokenizer-stream.\n     * @param token - Token to peek from the tokenizer-stream.\n     * @param position - Offset where to begin reading within the file. If position is null, data will be read from the current file position.\n     * @returns Promise with token data\n     */\n    async peekToken(token, position = this.position) {\n        const uint8Array = new Uint8Array(token.len);\n        const len = await this.peekBuffer(uint8Array, { position });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(uint8Array, 0);\n    }\n    /**\n     * Read a numeric token from the stream\n     * @param token - Numeric token\n     * @returns Promise with number\n     */\n    async readNumber(token) {\n        const len = await this.readBuffer(this.numBuffer, { length: token.len });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(this.numBuffer, 0);\n    }\n    /**\n     * Read a numeric token from the stream\n     * @param token - Numeric token\n     * @returns Promise with number\n     */\n    async peekNumber(token) {\n        const len = await this.peekBuffer(this.numBuffer, { length: token.len });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(this.numBuffer, 0);\n    }\n    /**\n     * Ignore number of bytes, advances the pointer in under tokenizer-stream.\n     * @param length - Number of bytes to ignore\n     * @return resolves the number of bytes ignored, equals length if this available, otherwise the number of bytes available\n     */\n    async ignore(length) {\n        if (this.fileInfo.size !== undefined) {\n            const bytesLeft = this.fileInfo.size - this.position;\n            if (length > bytesLeft) {\n                this.position += bytesLeft;\n                return bytesLeft;\n            }\n        }\n        this.position += length;\n        return length;\n    }\n    async close() {\n        await this.onClose?.();\n    }\n    normalizeOptions(uint8Array, options) {\n        if (options && options.position !== undefined && options.position < this.position) {\n            throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n        }\n        if (options) {\n            return {\n                mayBeLess: options.mayBeLess === true,\n                offset: options.offset ? options.offset : 0,\n                length: options.length ? options.length : (uint8Array.length - (options.offset ? options.offset : 0)),\n                position: options.position ? options.position : this.position\n            };\n        }\n        return {\n            mayBeLess: false,\n            offset: 0,\n            length: uint8Array.length,\n            position: this.position\n        };\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAIO,MAAM;IACT;;;;KAIC,GACD,YAAY,OAAO,CAAE;QACjB;;SAEC,GACD,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,WAAW;QAChC,IAAI,CAAC,QAAQ,GAAG,SAAS,YAAY,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,SAAS;IAC5B;IACA;;;;;KAKC,GACD,MAAM,UAAU,KAAK,EAAE,WAAW,IAAI,CAAC,QAAQ,EAAE;QAC7C,MAAM,aAAa,IAAI,WAAW,MAAM,GAAG;QAC3C,MAAM,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,YAAY;YAAE;QAAS;QACzD,IAAI,MAAM,MAAM,GAAG,EACf,MAAM,IAAI,2JAAA,CAAA,mBAAgB;QAC9B,OAAO,MAAM,GAAG,CAAC,YAAY;IACjC;IACA;;;;;KAKC,GACD,MAAM,UAAU,KAAK,EAAE,WAAW,IAAI,CAAC,QAAQ,EAAE;QAC7C,MAAM,aAAa,IAAI,WAAW,MAAM,GAAG;QAC3C,MAAM,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,YAAY;YAAE;QAAS;QACzD,IAAI,MAAM,MAAM,GAAG,EACf,MAAM,IAAI,2JAAA,CAAA,mBAAgB;QAC9B,OAAO,MAAM,GAAG,CAAC,YAAY;IACjC;IACA;;;;KAIC,GACD,MAAM,WAAW,KAAK,EAAE;QACpB,MAAM,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE;YAAE,QAAQ,MAAM,GAAG;QAAC;QACtE,IAAI,MAAM,MAAM,GAAG,EACf,MAAM,IAAI,2JAAA,CAAA,mBAAgB;QAC9B,OAAO,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE;IACrC;IACA;;;;KAIC,GACD,MAAM,WAAW,KAAK,EAAE;QACpB,MAAM,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE;YAAE,QAAQ,MAAM,GAAG;QAAC;QACtE,IAAI,MAAM,MAAM,GAAG,EACf,MAAM,IAAI,2JAAA,CAAA,mBAAgB;QAC9B,OAAO,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE;IACrC;IACA;;;;KAIC,GACD,MAAM,OAAO,MAAM,EAAE;QACjB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,WAAW;YAClC,MAAM,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ;YACpD,IAAI,SAAS,WAAW;gBACpB,IAAI,CAAC,QAAQ,IAAI;gBACjB,OAAO;YACX;QACJ;QACA,IAAI,CAAC,QAAQ,IAAI;QACjB,OAAO;IACX;IACA,MAAM,QAAQ;QACV,MAAM,IAAI,CAAC,OAAO;IACtB;IACA,iBAAiB,UAAU,EAAE,OAAO,EAAE;QAClC,IAAI,WAAW,QAAQ,QAAQ,KAAK,aAAa,QAAQ,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE;YAC/E,MAAM,IAAI,MAAM;QACpB;QACA,IAAI,SAAS;YACT,OAAO;gBACH,WAAW,QAAQ,SAAS,KAAK;gBACjC,QAAQ,QAAQ,MAAM,GAAG,QAAQ,MAAM,GAAG;gBAC1C,QAAQ,QAAQ,MAAM,GAAG,QAAQ,MAAM,GAAI,WAAW,MAAM,GAAG,CAAC,QAAQ,MAAM,GAAG,QAAQ,MAAM,GAAG,CAAC;gBACnG,UAAU,QAAQ,QAAQ,GAAG,QAAQ,QAAQ,GAAG,IAAI,CAAC,QAAQ;YACjE;QACJ;QACA,OAAO;YACH,WAAW;YACX,QAAQ;YACR,QAAQ,WAAW,MAAM;YACzB,UAAU,IAAI,CAAC,QAAQ;QAC3B;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/file-type/node_modules/strtok3/lib/ReadStreamTokenizer.js"],"sourcesContent":["import { AbstractTokenizer } from './AbstractTokenizer.js';\nimport { EndOfStreamError } from 'peek-readable';\nconst maxBufferSize = 256000;\nexport class ReadStreamTokenizer extends AbstractTokenizer {\n    /**\n     * Constructor\n     * @param streamReader stream-reader to read from\n     * @param options Tokenizer options\n     */\n    constructor(streamReader, options) {\n        super(options);\n        this.streamReader = streamReader;\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Target Uint8Array to fill with data read from the tokenizer-stream\n     * @param options - Read behaviour options\n     * @returns Promise with number of bytes read\n     */\n    async readBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        const skipBytes = normOptions.position - this.position;\n        if (skipBytes > 0) {\n            await this.ignore(skipBytes);\n            return this.readBuffer(uint8Array, options);\n        }\n        if (skipBytes < 0) {\n            throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n        }\n        if (normOptions.length === 0) {\n            return 0;\n        }\n        const bytesRead = await this.streamReader.read(uint8Array, normOptions.offset, normOptions.length);\n        this.position += bytesRead;\n        if ((!options || !options.mayBeLess) && bytesRead < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param uint8Array - Uint8Array (or Buffer) to write data to\n     * @param options - Read behaviour options\n     * @returns Promise with number of bytes peeked\n     */\n    async peekBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        let bytesRead = 0;\n        if (normOptions.position) {\n            const skipBytes = normOptions.position - this.position;\n            if (skipBytes > 0) {\n                const skipBuffer = new Uint8Array(normOptions.length + skipBytes);\n                bytesRead = await this.peekBuffer(skipBuffer, { mayBeLess: normOptions.mayBeLess });\n                uint8Array.set(skipBuffer.subarray(skipBytes), normOptions.offset);\n                return bytesRead - skipBytes;\n            }\n            if (skipBytes < 0) {\n                throw new Error('Cannot peek from a negative offset in a stream');\n            }\n        }\n        if (normOptions.length > 0) {\n            try {\n                bytesRead = await this.streamReader.peek(uint8Array, normOptions.offset, normOptions.length);\n            }\n            catch (err) {\n                if (options?.mayBeLess && err instanceof EndOfStreamError) {\n                    return 0;\n                }\n                throw err;\n            }\n            if ((!normOptions.mayBeLess) && bytesRead < normOptions.length) {\n                throw new EndOfStreamError();\n            }\n        }\n        return bytesRead;\n    }\n    async ignore(length) {\n        // debug(`ignore ${this.position}...${this.position + length - 1}`);\n        const bufSize = Math.min(maxBufferSize, length);\n        const buf = new Uint8Array(bufSize);\n        let totBytesRead = 0;\n        while (totBytesRead < length) {\n            const remaining = length - totBytesRead;\n            const bytesRead = await this.readBuffer(buf, { length: Math.min(bufSize, remaining) });\n            if (bytesRead < 0) {\n                return bytesRead;\n            }\n            totBytesRead += bytesRead;\n        }\n        return totBytesRead;\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AACA,MAAM,gBAAgB;AACf,MAAM,4BAA4B,mLAAA,CAAA,oBAAiB;IACtD;;;;KAIC,GACD,YAAY,YAAY,EAAE,OAAO,CAAE;QAC/B,KAAK,CAAC;QACN,IAAI,CAAC,YAAY,GAAG;IACxB;IACA;;;;;KAKC,GACD,MAAM,WAAW,UAAU,EAAE,OAAO,EAAE;QAClC,MAAM,cAAc,IAAI,CAAC,gBAAgB,CAAC,YAAY;QACtD,MAAM,YAAY,YAAY,QAAQ,GAAG,IAAI,CAAC,QAAQ;QACtD,IAAI,YAAY,GAAG;YACf,MAAM,IAAI,CAAC,MAAM,CAAC;YAClB,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY;QACvC;QACA,IAAI,YAAY,GAAG;YACf,MAAM,IAAI,MAAM;QACpB;QACA,IAAI,YAAY,MAAM,KAAK,GAAG;YAC1B,OAAO;QACX;QACA,MAAM,YAAY,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,YAAY,MAAM,EAAE,YAAY,MAAM;QACjG,IAAI,CAAC,QAAQ,IAAI;QACjB,IAAI,CAAC,CAAC,WAAW,CAAC,QAAQ,SAAS,KAAK,YAAY,YAAY,MAAM,EAAE;YACpE,MAAM,IAAI,2JAAA,CAAA,mBAAgB;QAC9B;QACA,OAAO;IACX;IACA;;;;;KAKC,GACD,MAAM,WAAW,UAAU,EAAE,OAAO,EAAE;QAClC,MAAM,cAAc,IAAI,CAAC,gBAAgB,CAAC,YAAY;QACtD,IAAI,YAAY;QAChB,IAAI,YAAY,QAAQ,EAAE;YACtB,MAAM,YAAY,YAAY,QAAQ,GAAG,IAAI,CAAC,QAAQ;YACtD,IAAI,YAAY,GAAG;gBACf,MAAM,aAAa,IAAI,WAAW,YAAY,MAAM,GAAG;gBACvD,YAAY,MAAM,IAAI,CAAC,UAAU,CAAC,YAAY;oBAAE,WAAW,YAAY,SAAS;gBAAC;gBACjF,WAAW,GAAG,CAAC,WAAW,QAAQ,CAAC,YAAY,YAAY,MAAM;gBACjE,OAAO,YAAY;YACvB;YACA,IAAI,YAAY,GAAG;gBACf,MAAM,IAAI,MAAM;YACpB;QACJ;QACA,IAAI,YAAY,MAAM,GAAG,GAAG;YACxB,IAAI;gBACA,YAAY,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,YAAY,MAAM,EAAE,YAAY,MAAM;YAC/F,EACA,OAAO,KAAK;gBACR,IAAI,SAAS,aAAa,eAAe,2JAAA,CAAA,mBAAgB,EAAE;oBACvD,OAAO;gBACX;gBACA,MAAM;YACV;YACA,IAAI,AAAC,CAAC,YAAY,SAAS,IAAK,YAAY,YAAY,MAAM,EAAE;gBAC5D,MAAM,IAAI,2JAAA,CAAA,mBAAgB;YAC9B;QACJ;QACA,OAAO;IACX;IACA,MAAM,OAAO,MAAM,EAAE;QACjB,oEAAoE;QACpE,MAAM,UAAU,KAAK,GAAG,CAAC,eAAe;QACxC,MAAM,MAAM,IAAI,WAAW;QAC3B,IAAI,eAAe;QACnB,MAAO,eAAe,OAAQ;YAC1B,MAAM,YAAY,SAAS;YAC3B,MAAM,YAAY,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK;gBAAE,QAAQ,KAAK,GAAG,CAAC,SAAS;YAAW;YACpF,IAAI,YAAY,GAAG;gBACf,OAAO;YACX;YACA,gBAAgB;QACpB;QACA,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/file-type/node_modules/strtok3/lib/BufferTokenizer.js"],"sourcesContent":["import { EndOfStreamError } from 'peek-readable';\nimport { AbstractTokenizer } from './AbstractTokenizer.js';\nexport class BufferTokenizer extends AbstractTokenizer {\n    /**\n     * Construct BufferTokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options Tokenizer options\n     */\n    constructor(uint8Array, options) {\n        super(options);\n        this.uint8Array = uint8Array;\n        this.fileInfo.size = this.fileInfo.size ? this.fileInfo.size : uint8Array.length;\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async readBuffer(uint8Array, options) {\n        if (options?.position) {\n            if (options.position < this.position) {\n                throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n            }\n            this.position = options.position;\n        }\n        const bytesRead = await this.peekBuffer(uint8Array, options);\n        this.position += bytesRead;\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param uint8Array\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async peekBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        const bytes2read = Math.min(this.uint8Array.length - normOptions.position, normOptions.length);\n        if ((!normOptions.mayBeLess) && bytes2read < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        uint8Array.set(this.uint8Array.subarray(normOptions.position, normOptions.position + bytes2read), normOptions.offset);\n        return bytes2read;\n    }\n    close() {\n        return super.close();\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEO,MAAM,wBAAwB,mLAAA,CAAA,oBAAiB;IAClD;;;;KAIC,GACD,YAAY,UAAU,EAAE,OAAO,CAAE;QAC7B,KAAK,CAAC;QACN,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,WAAW,MAAM;IACpF;IACA;;;;;KAKC,GACD,MAAM,WAAW,UAAU,EAAE,OAAO,EAAE;QAClC,IAAI,SAAS,UAAU;YACnB,IAAI,QAAQ,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE;gBAClC,MAAM,IAAI,MAAM;YACpB;YACA,IAAI,CAAC,QAAQ,GAAG,QAAQ,QAAQ;QACpC;QACA,MAAM,YAAY,MAAM,IAAI,CAAC,UAAU,CAAC,YAAY;QACpD,IAAI,CAAC,QAAQ,IAAI;QACjB,OAAO;IACX;IACA;;;;;KAKC,GACD,MAAM,WAAW,UAAU,EAAE,OAAO,EAAE;QAClC,MAAM,cAAc,IAAI,CAAC,gBAAgB,CAAC,YAAY;QACtD,MAAM,aAAa,KAAK,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,YAAY,QAAQ,EAAE,YAAY,MAAM;QAC7F,IAAI,AAAC,CAAC,YAAY,SAAS,IAAK,aAAa,YAAY,MAAM,EAAE;YAC7D,MAAM,IAAI,2JAAA,CAAA,mBAAgB;QAC9B;QACA,WAAW,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,QAAQ,EAAE,YAAY,QAAQ,GAAG,aAAa,YAAY,MAAM;QACpH,OAAO;IACX;IACA,QAAQ;QACJ,OAAO,KAAK,CAAC;IACjB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/file-type/node_modules/strtok3/lib/core.js"],"sourcesContent":["import { StreamReader, WebStreamReader } from 'peek-readable';\nimport { ReadStreamTokenizer } from './ReadStreamTokenizer.js';\nimport { BufferTokenizer } from './BufferTokenizer.js';\nexport { EndOfStreamError } from 'peek-readable';\nexport { AbstractTokenizer } from './AbstractTokenizer.js';\n/**\n * Construct ReadStreamTokenizer from given Stream.\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param stream - Read from Node.js Stream.Readable\n * @param options - Tokenizer options\n * @returns ReadStreamTokenizer\n */\nexport function fromStream(stream, options) {\n    return new ReadStreamTokenizer(new StreamReader(stream), options);\n}\n/**\n * Construct ReadStreamTokenizer from given ReadableStream (WebStream API).\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param webStream - Read from Node.js Stream.Readable (must be a byte stream)\n * @param options - Tokenizer options\n * @returns ReadStreamTokenizer\n */\nexport function fromWebStream(webStream, options) {\n    return new ReadStreamTokenizer(new WebStreamReader(webStream), options);\n}\n/**\n * Construct ReadStreamTokenizer from given Buffer.\n * @param uint8Array - Uint8Array to tokenize\n * @param options - Tokenizer options\n * @returns BufferTokenizer\n */\nexport function fromBuffer(uint8Array, options) {\n    return new BufferTokenizer(uint8Array, options);\n}\n"],"names":[],"mappings":";;;;;AACA;AADA;AAAA;AAEA;;;;;;AAUO,SAAS,WAAW,MAAM,EAAE,OAAO;IACtC,OAAO,IAAI,qLAAA,CAAA,sBAAmB,CAAC,IAAI,uKAAA,CAAA,eAAY,CAAC,SAAS;AAC7D;AAQO,SAAS,cAAc,SAAS,EAAE,OAAO;IAC5C,OAAO,IAAI,qLAAA,CAAA,sBAAmB,CAAC,IAAI,0KAAA,CAAA,kBAAe,CAAC,YAAY;AACnE;AAOO,SAAS,WAAW,UAAU,EAAE,OAAO;IAC1C,OAAO,IAAI,iLAAA,CAAA,kBAAe,CAAC,YAAY;AAC3C","ignoreList":[0]}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/file-type/node_modules/strtok3/lib/FileTokenizer.js"],"sourcesContent":["import { AbstractTokenizer } from './AbstractTokenizer.js';\nimport { EndOfStreamError } from 'peek-readable';\nimport { open as fsOpen } from 'node:fs/promises';\nexport class FileTokenizer extends AbstractTokenizer {\n    constructor(fileHandle, options) {\n        super(options);\n        this.fileHandle = fileHandle;\n    }\n    /**\n     * Read buffer from file\n     * @param uint8Array - Uint8Array to write result to\n     * @param options - Read behaviour options\n     * @returns Promise number of bytes read\n     */\n    async readBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        this.position = normOptions.position;\n        if (normOptions.length === 0)\n            return 0;\n        const res = await this.fileHandle.read(uint8Array, normOptions.offset, normOptions.length, normOptions.position);\n        this.position += res.bytesRead;\n        if (res.bytesRead < normOptions.length && (!options || !options.mayBeLess)) {\n            throw new EndOfStreamError();\n        }\n        return res.bytesRead;\n    }\n    /**\n     * Peek buffer from file\n     * @param uint8Array - Uint8Array (or Buffer) to write data to\n     * @param options - Read behaviour options\n     * @returns Promise number of bytes read\n     */\n    async peekBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        const res = await this.fileHandle.read(uint8Array, normOptions.offset, normOptions.length, normOptions.position);\n        if ((!normOptions.mayBeLess) && res.bytesRead < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        return res.bytesRead;\n    }\n    async close() {\n        await this.fileHandle.close();\n        return super.close();\n    }\n}\nexport async function fromFile(sourceFilePath) {\n    const fileHandle = await fsOpen(sourceFilePath, 'r');\n    const stat = await fileHandle.stat();\n    return new FileTokenizer(fileHandle, { fileInfo: { path: sourceFilePath, size: stat.size } });\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AADA;;;;AAEO,MAAM,sBAAsB,mLAAA,CAAA,oBAAiB;IAChD,YAAY,UAAU,EAAE,OAAO,CAAE;QAC7B,KAAK,CAAC;QACN,IAAI,CAAC,UAAU,GAAG;IACtB;IACA;;;;;KAKC,GACD,MAAM,WAAW,UAAU,EAAE,OAAO,EAAE;QAClC,MAAM,cAAc,IAAI,CAAC,gBAAgB,CAAC,YAAY;QACtD,IAAI,CAAC,QAAQ,GAAG,YAAY,QAAQ;QACpC,IAAI,YAAY,MAAM,KAAK,GACvB,OAAO;QACX,MAAM,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,YAAY,MAAM,EAAE,YAAY,MAAM,EAAE,YAAY,QAAQ;QAC/G,IAAI,CAAC,QAAQ,IAAI,IAAI,SAAS;QAC9B,IAAI,IAAI,SAAS,GAAG,YAAY,MAAM,IAAI,CAAC,CAAC,WAAW,CAAC,QAAQ,SAAS,GAAG;YACxE,MAAM,IAAI,2JAAA,CAAA,mBAAgB;QAC9B;QACA,OAAO,IAAI,SAAS;IACxB;IACA;;;;;KAKC,GACD,MAAM,WAAW,UAAU,EAAE,OAAO,EAAE;QAClC,MAAM,cAAc,IAAI,CAAC,gBAAgB,CAAC,YAAY;QACtD,MAAM,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,YAAY,MAAM,EAAE,YAAY,MAAM,EAAE,YAAY,QAAQ;QAC/G,IAAI,AAAC,CAAC,YAAY,SAAS,IAAK,IAAI,SAAS,GAAG,YAAY,MAAM,EAAE;YAChE,MAAM,IAAI,2JAAA,CAAA,mBAAgB;QAC9B;QACA,OAAO,IAAI,SAAS;IACxB;IACA,MAAM,QAAQ;QACV,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK;QAC3B,OAAO,KAAK,CAAC;IACjB;AACJ;AACO,eAAe,SAAS,cAAc;IACzC,MAAM,aAAa,MAAM,CAAA,GAAA,qIAAA,CAAA,OAAM,AAAD,EAAE,gBAAgB;IAChD,MAAM,OAAO,MAAM,WAAW,IAAI;IAClC,OAAO,IAAI,cAAc,YAAY;QAAE,UAAU;YAAE,MAAM;YAAgB,MAAM,KAAK,IAAI;QAAC;IAAE;AAC/F","ignoreList":[0]}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/file-type/node_modules/strtok3/lib/index.js"],"sourcesContent":["import { stat as fsStat } from 'node:fs/promises';\nimport { fromStream as coreFromStream } from './core.js';\nexport { fromFile } from './FileTokenizer.js';\nexport * from './core.js';\n/**\n * Construct ReadStreamTokenizer from given Stream.\n * Will set fileSize, if provided given Stream has set the .path property.\n * @param stream - Node.js Stream.Readable\n * @param options - Pass additional file information to the tokenizer\n * @returns Tokenizer\n */\nexport async function fromStream(stream, options) {\n    const augmentedOptions = options ?? {};\n    augmentedOptions.fileInfo = augmentedOptions.fileInfo ?? {};\n    if (stream.path) {\n        const stat = await fsStat(stream.path);\n        augmentedOptions.fileInfo.path = stream.path;\n        augmentedOptions.fileInfo.size = stat.size;\n    }\n    return coreFromStream(stream, augmentedOptions);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;AAUO,eAAe,WAAW,MAAM,EAAE,OAAO;IAC5C,MAAM,mBAAmB,WAAW,CAAC;IACrC,iBAAiB,QAAQ,GAAG,iBAAiB,QAAQ,IAAI,CAAC;IAC1D,IAAI,OAAO,IAAI,EAAE;QACb,MAAM,OAAO,MAAM,CAAA,GAAA,qIAAA,CAAA,OAAM,AAAD,EAAE,OAAO,IAAI;QACrC,iBAAiB,QAAQ,CAAC,IAAI,GAAG,OAAO,IAAI;QAC5C,iBAAiB,QAAQ,CAAC,IAAI,GAAG,KAAK,IAAI;IAC9C;IACA,OAAO,CAAA,GAAA,sLAAA,CAAA,aAAc,AAAD,EAAE,QAAQ;AAClC","ignoreList":[0]}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/file-type/util.js"],"sourcesContent":["import {StringType} from 'token-types';\n\nexport function stringToBytes(string) {\n\treturn [...string].map(character => character.charCodeAt(0)); // eslint-disable-line unicorn/prefer-code-point\n}\n\n/**\nChecks whether the TAR checksum is valid.\n\n@param {Uint8Array} arrayBuffer - The TAR header `[offset ... offset + 512]`.\n@param {number} offset - TAR header offset.\n@returns {boolean} `true` if the TAR checksum is valid, otherwise `false`.\n*/\nexport function tarHeaderChecksumMatches(arrayBuffer, offset = 0) {\n\tconst readSum = Number.parseInt(new StringType(6).get(arrayBuffer, 148).replace(/\\0.*$/, '').trim(), 8); // Read sum in header\n\tif (Number.isNaN(readSum)) {\n\t\treturn false;\n\t}\n\n\tlet sum = 8 * 0x20; // Initialize signed bit sum\n\n\tfor (let index = offset; index < offset + 148; index++) {\n\t\tsum += arrayBuffer[index];\n\t}\n\n\tfor (let index = offset + 156; index < offset + 512; index++) {\n\t\tsum += arrayBuffer[index];\n\t}\n\n\treturn readSum === sum;\n}\n\n/**\nID3 UINT32 sync-safe tokenizer token.\n28 bits (representing up to 256MB) integer, the msb is 0 to avoid \"false syncsignals\".\n*/\nexport const uint32SyncSafeToken = {\n\tget: (buffer, offset) => (buffer[offset + 3] & 0x7F) | ((buffer[offset + 2]) << 7) | ((buffer[offset + 1]) << 14) | ((buffer[offset]) << 21),\n\tlen: 4,\n};\n"],"names":[],"mappings":";;;;;AAAA;;AAEO,SAAS,cAAc,MAAM;IACnC,OAAO;WAAI;KAAO,CAAC,GAAG,CAAC,CAAA,YAAa,UAAU,UAAU,CAAC,KAAK,gDAAgD;AAC/G;AASO,SAAS,yBAAyB,WAAW,EAAE,SAAS,CAAC;IAC/D,MAAM,UAAU,OAAO,QAAQ,CAAC,IAAI,8IAAA,CAAA,aAAU,CAAC,GAAG,GAAG,CAAC,aAAa,KAAK,OAAO,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,qBAAqB;IAC9H,IAAI,OAAO,KAAK,CAAC,UAAU;QAC1B,OAAO;IACR;IAEA,IAAI,MAAM,IAAI,MAAM,4BAA4B;IAEhD,IAAK,IAAI,QAAQ,QAAQ,QAAQ,SAAS,KAAK,QAAS;QACvD,OAAO,WAAW,CAAC,MAAM;IAC1B;IAEA,IAAK,IAAI,QAAQ,SAAS,KAAK,QAAQ,SAAS,KAAK,QAAS;QAC7D,OAAO,WAAW,CAAC,MAAM;IAC1B;IAEA,OAAO,YAAY;AACpB;AAMO,MAAM,sBAAsB;IAClC,KAAK,CAAC,QAAQ,SAAW,AAAC,MAAM,CAAC,SAAS,EAAE,GAAG,OAAS,AAAC,MAAM,CAAC,SAAS,EAAE,IAAK,IAAM,AAAC,MAAM,CAAC,SAAS,EAAE,IAAK,KAAO,AAAC,MAAM,CAAC,OAAO,IAAK;IACzI,KAAK;AACN","ignoreList":[0]}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/file-type/supported.js"],"sourcesContent":["export const extensions = [\n\t'jpg',\n\t'png',\n\t'apng',\n\t'gif',\n\t'webp',\n\t'flif',\n\t'xcf',\n\t'cr2',\n\t'cr3',\n\t'orf',\n\t'arw',\n\t'dng',\n\t'nef',\n\t'rw2',\n\t'raf',\n\t'tif',\n\t'bmp',\n\t'icns',\n\t'jxr',\n\t'psd',\n\t'indd',\n\t'zip',\n\t'tar',\n\t'rar',\n\t'gz',\n\t'bz2',\n\t'7z',\n\t'dmg',\n\t'mp4',\n\t'mid',\n\t'mkv',\n\t'webm',\n\t'mov',\n\t'avi',\n\t'mpg',\n\t'mp2',\n\t'mp3',\n\t'm4a',\n\t'oga',\n\t'ogg',\n\t'ogv',\n\t'opus',\n\t'flac',\n\t'wav',\n\t'spx',\n\t'amr',\n\t'pdf',\n\t'epub',\n\t'elf',\n\t'macho',\n\t'exe',\n\t'swf',\n\t'rtf',\n\t'wasm',\n\t'woff',\n\t'woff2',\n\t'eot',\n\t'ttf',\n\t'otf',\n\t'ico',\n\t'flv',\n\t'ps',\n\t'xz',\n\t'sqlite',\n\t'nes',\n\t'crx',\n\t'xpi',\n\t'cab',\n\t'deb',\n\t'ar',\n\t'rpm',\n\t'Z',\n\t'lz',\n\t'cfb',\n\t'mxf',\n\t'mts',\n\t'blend',\n\t'bpg',\n\t'docx',\n\t'pptx',\n\t'xlsx',\n\t'3gp',\n\t'3g2',\n\t'j2c',\n\t'jp2',\n\t'jpm',\n\t'jpx',\n\t'mj2',\n\t'aif',\n\t'qcp',\n\t'odt',\n\t'ods',\n\t'odp',\n\t'xml',\n\t'mobi',\n\t'heic',\n\t'cur',\n\t'ktx',\n\t'ape',\n\t'wv',\n\t'dcm',\n\t'ics',\n\t'glb',\n\t'pcap',\n\t'dsf',\n\t'lnk',\n\t'alias',\n\t'voc',\n\t'ac3',\n\t'm4v',\n\t'm4p',\n\t'm4b',\n\t'f4v',\n\t'f4p',\n\t'f4b',\n\t'f4a',\n\t'mie',\n\t'asf',\n\t'ogm',\n\t'ogx',\n\t'mpc',\n\t'arrow',\n\t'shp',\n\t'aac',\n\t'mp1',\n\t'it',\n\t's3m',\n\t'xm',\n\t'ai',\n\t'skp',\n\t'avif',\n\t'eps',\n\t'lzh',\n\t'pgp',\n\t'asar',\n\t'stl',\n\t'chm',\n\t'3mf',\n\t'zst',\n\t'jxl',\n\t'vcf',\n\t'jls',\n\t'pst',\n\t'dwg',\n\t'parquet',\n\t'class',\n\t'arj',\n\t'cpio',\n\t'ace',\n\t'avro',\n\t'icc',\n\t'fbx',\n\t'vsdx',\n];\n\nexport const mimeTypes = [\n\t'image/jpeg',\n\t'image/png',\n\t'image/gif',\n\t'image/webp',\n\t'image/flif',\n\t'image/x-xcf',\n\t'image/x-canon-cr2',\n\t'image/x-canon-cr3',\n\t'image/tiff',\n\t'image/bmp',\n\t'image/vnd.ms-photo',\n\t'image/vnd.adobe.photoshop',\n\t'application/x-indesign',\n\t'application/epub+zip',\n\t'application/x-xpinstall',\n\t'application/vnd.oasis.opendocument.text',\n\t'application/vnd.oasis.opendocument.spreadsheet',\n\t'application/vnd.oasis.opendocument.presentation',\n\t'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t'application/zip',\n\t'application/x-tar',\n\t'application/x-rar-compressed',\n\t'application/gzip',\n\t'application/x-bzip2',\n\t'application/x-7z-compressed',\n\t'application/x-apple-diskimage',\n\t'application/x-apache-arrow',\n\t'video/mp4',\n\t'audio/midi',\n\t'video/x-matroska',\n\t'video/webm',\n\t'video/quicktime',\n\t'video/vnd.avi',\n\t'audio/wav',\n\t'audio/qcelp',\n\t'audio/x-ms-asf',\n\t'video/x-ms-asf',\n\t'application/vnd.ms-asf',\n\t'video/mpeg',\n\t'video/3gpp',\n\t'audio/mpeg',\n\t'audio/mp4', // RFC 4337\n\t'audio/opus',\n\t'video/ogg',\n\t'audio/ogg',\n\t'application/ogg',\n\t'audio/x-flac',\n\t'audio/ape',\n\t'audio/wavpack',\n\t'audio/amr',\n\t'application/pdf',\n\t'application/x-elf',\n\t'application/x-mach-binary',\n\t'application/x-msdownload',\n\t'application/x-shockwave-flash',\n\t'application/rtf',\n\t'application/wasm',\n\t'font/woff',\n\t'font/woff2',\n\t'application/vnd.ms-fontobject',\n\t'font/ttf',\n\t'font/otf',\n\t'image/x-icon',\n\t'video/x-flv',\n\t'application/postscript',\n\t'application/eps',\n\t'application/x-xz',\n\t'application/x-sqlite3',\n\t'application/x-nintendo-nes-rom',\n\t'application/x-google-chrome-extension',\n\t'application/vnd.ms-cab-compressed',\n\t'application/x-deb',\n\t'application/x-unix-archive',\n\t'application/x-rpm',\n\t'application/x-compress',\n\t'application/x-lzip',\n\t'application/x-cfb',\n\t'application/x-mie',\n\t'application/mxf',\n\t'video/mp2t',\n\t'application/x-blender',\n\t'image/bpg',\n\t'image/j2c',\n\t'image/jp2',\n\t'image/jpx',\n\t'image/jpm',\n\t'image/mj2',\n\t'audio/aiff',\n\t'application/xml',\n\t'application/x-mobipocket-ebook',\n\t'image/heif',\n\t'image/heif-sequence',\n\t'image/heic',\n\t'image/heic-sequence',\n\t'image/icns',\n\t'image/ktx',\n\t'application/dicom',\n\t'audio/x-musepack',\n\t'text/calendar',\n\t'text/vcard',\n\t'model/gltf-binary',\n\t'application/vnd.tcpdump.pcap',\n\t'audio/x-dsf', // Non-standard\n\t'application/x.ms.shortcut', // Invented by us\n\t'application/x.apple.alias', // Invented by us\n\t'audio/x-voc',\n\t'audio/vnd.dolby.dd-raw',\n\t'audio/x-m4a',\n\t'image/apng',\n\t'image/x-olympus-orf',\n\t'image/x-sony-arw',\n\t'image/x-adobe-dng',\n\t'image/x-nikon-nef',\n\t'image/x-panasonic-rw2',\n\t'image/x-fujifilm-raf',\n\t'video/x-m4v',\n\t'video/3gpp2',\n\t'application/x-esri-shape',\n\t'audio/aac',\n\t'audio/x-it',\n\t'audio/x-s3m',\n\t'audio/x-xm',\n\t'video/MP1S',\n\t'video/MP2P',\n\t'application/vnd.sketchup.skp',\n\t'image/avif',\n\t'application/x-lzh-compressed',\n\t'application/pgp-encrypted',\n\t'application/x-asar',\n\t'model/stl',\n\t'application/vnd.ms-htmlhelp',\n\t'model/3mf',\n\t'image/jxl',\n\t'application/zstd',\n\t'image/jls',\n\t'application/vnd.ms-outlook',\n\t'image/vnd.dwg',\n\t'application/x-parquet',\n\t'application/java-vm',\n\t'application/x-arj',\n\t'application/x-cpio',\n\t'application/x-ace-compressed',\n\t'application/avro',\n\t'application/vnd.iccprofile',\n\t'application/x.autodesk.fbx', // Invented by us\n\t'application/vnd.visio',\n];\n"],"names":[],"mappings":";;;;AAAO,MAAM,aAAa;IACzxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA","ignoreList":[0]}},
    {"offset": {"line": 832, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 838, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/file-type/core.js"],"sourcesContent":["/**\nPrimary entry point, Node.js specific entry point is index.js\n*/\n\nimport * as Token from 'token-types';\nimport * as strtok3 from 'strtok3/core';\nimport {includes, indexOf, getUintBE} from 'uint8array-extras';\nimport {\n\tstringToBytes,\n\ttarHeaderChecksumMatches,\n\tuint32SyncSafeToken,\n} from './util.js';\nimport {extensions, mimeTypes} from './supported.js';\n\nexport const reasonableDetectionSizeInBytes = 4100; // A fair amount of file-types are detectable within this range.\n\nexport async function fileTypeFromStream(stream) {\n\treturn new FileTypeParser().fromStream(stream);\n}\n\nexport async function fileTypeFromBuffer(input) {\n\treturn new FileTypeParser().fromBuffer(input);\n}\n\nexport async function fileTypeFromBlob(blob) {\n\treturn new FileTypeParser().fromBlob(blob);\n}\n\nfunction _check(buffer, headers, options) {\n\toptions = {\n\t\toffset: 0,\n\t\t...options,\n\t};\n\n\tfor (const [index, header] of headers.entries()) {\n\t\t// If a bitmask is set\n\t\tif (options.mask) {\n\t\t\t// If header doesn't equal `buf` with bits masked off\n\t\t\tif (header !== (options.mask[index] & buffer[index + options.offset])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (header !== buffer[index + options.offset]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport async function fileTypeFromTokenizer(tokenizer) {\n\treturn new FileTypeParser().fromTokenizer(tokenizer);\n}\n\nexport class FileTypeParser {\n\tconstructor(options) {\n\t\tthis.detectors = options?.customDetectors;\n\n\t\tthis.fromTokenizer = this.fromTokenizer.bind(this);\n\t\tthis.fromBuffer = this.fromBuffer.bind(this);\n\t\tthis.parse = this.parse.bind(this);\n\t}\n\n\tasync fromTokenizer(tokenizer) {\n\t\tconst initialPosition = tokenizer.position;\n\n\t\tfor (const detector of this.detectors || []) {\n\t\t\tconst fileType = await detector(tokenizer);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\n\t\t\tif (initialPosition !== tokenizer.position) {\n\t\t\t\treturn undefined; // Cannot proceed scanning of the tokenizer is at an arbitrary position\n\t\t\t}\n\t\t}\n\n\t\treturn this.parse(tokenizer);\n\t}\n\n\tasync fromBuffer(input) {\n\t\tif (!(input instanceof Uint8Array || input instanceof ArrayBuffer)) {\n\t\t\tthrow new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`ArrayBuffer\\`, got \\`${typeof input}\\``);\n\t\t}\n\n\t\tconst buffer = input instanceof Uint8Array ? input : new Uint8Array(input);\n\n\t\tif (!(buffer?.length > 1)) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.fromTokenizer(strtok3.fromBuffer(buffer));\n\t}\n\n\tasync fromBlob(blob) {\n\t\treturn this.fromStream(blob.stream());\n\t}\n\n\tasync fromStream(stream) {\n\t\tconst tokenizer = await strtok3.fromWebStream(stream);\n\t\ttry {\n\t\t\treturn await this.fromTokenizer(tokenizer);\n\t\t} finally {\n\t\t\tawait tokenizer.close();\n\t\t}\n\t}\n\n\tcheck(header, options) {\n\t\treturn _check(this.buffer, header, options);\n\t}\n\n\tcheckString(header, options) {\n\t\treturn this.check(stringToBytes(header), options);\n\t}\n\n\tasync parse(tokenizer) {\n\t\tthis.buffer = new Uint8Array(reasonableDetectionSizeInBytes);\n\n\t\t// Keep reading until EOF if the file size is unknown.\n\t\tif (tokenizer.fileInfo.size === undefined) {\n\t\t\ttokenizer.fileInfo.size = Number.MAX_SAFE_INTEGER;\n\t\t}\n\n\t\tthis.tokenizer = tokenizer;\n\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: 12, mayBeLess: true});\n\n\t\t// -- 2-byte signatures --\n\n\t\tif (this.check([0x42, 0x4D])) {\n\t\t\treturn {\n\t\t\t\text: 'bmp',\n\t\t\t\tmime: 'image/bmp',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x0B, 0x77])) {\n\t\t\treturn {\n\t\t\t\text: 'ac3',\n\t\t\t\tmime: 'audio/vnd.dolby.dd-raw',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x78, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'dmg',\n\t\t\t\tmime: 'application/x-apple-diskimage',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4D, 0x5A])) {\n\t\t\treturn {\n\t\t\t\text: 'exe',\n\t\t\t\tmime: 'application/x-msdownload',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x25, 0x21])) {\n\t\t\tawait tokenizer.peekBuffer(this.buffer, {length: 24, mayBeLess: true});\n\n\t\t\tif (\n\t\t\t\tthis.checkString('PS-Adobe-', {offset: 2})\n\t\t\t\t&& this.checkString(' EPSF-', {offset: 14})\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'eps',\n\t\t\t\t\tmime: 'application/eps',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'ps',\n\t\t\t\tmime: 'application/postscript',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x1F, 0xA0])\n\t\t\t|| this.check([0x1F, 0x9D])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'Z',\n\t\t\t\tmime: 'application/x-compress',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xC7, 0x71])) {\n\t\t\treturn {\n\t\t\t\text: 'cpio',\n\t\t\t\tmime: 'application/x-cpio',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x60, 0xEA])) {\n\t\t\treturn {\n\t\t\t\text: 'arj',\n\t\t\t\tmime: 'application/x-arj',\n\t\t\t};\n\t\t}\n\n\t\t// -- 3-byte signatures --\n\n\t\tif (this.check([0xEF, 0xBB, 0xBF])) { // UTF-8-BOM\n\t\t\t// Strip off UTF-8-BOM\n\t\t\tthis.tokenizer.ignore(3);\n\t\t\treturn this.parse(tokenizer);\n\t\t}\n\n\t\tif (this.check([0x47, 0x49, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'gif',\n\t\t\t\tmime: 'image/gif',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x49, 0x49, 0xBC])) {\n\t\t\treturn {\n\t\t\t\text: 'jxr',\n\t\t\t\tmime: 'image/vnd.ms-photo',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x1F, 0x8B, 0x8])) {\n\t\t\treturn {\n\t\t\t\text: 'gz',\n\t\t\t\tmime: 'application/gzip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x5A, 0x68])) {\n\t\t\treturn {\n\t\t\t\text: 'bz2',\n\t\t\t\tmime: 'application/x-bzip2',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('ID3')) {\n\t\t\tawait tokenizer.ignore(6); // Skip ID3 header until the header size\n\t\t\tconst id3HeaderLength = await tokenizer.readToken(uint32SyncSafeToken);\n\t\t\tif (tokenizer.position + id3HeaderLength > tokenizer.fileInfo.size) {\n\t\t\t\t// Guess file type based on ID3 header for backward compatibility\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp3',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait tokenizer.ignore(id3HeaderLength);\n\t\t\treturn this.fromTokenizer(tokenizer); // Skip ID3 header, recursion\n\t\t}\n\n\t\t// Musepack, SV7\n\t\tif (this.checkString('MP+')) {\n\t\t\treturn {\n\t\t\t\text: 'mpc',\n\t\t\t\tmime: 'audio/x-musepack',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\t(this.buffer[0] === 0x43 || this.buffer[0] === 0x46)\n\t\t\t&& this.check([0x57, 0x53], {offset: 1})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'swf',\n\t\t\t\tmime: 'application/x-shockwave-flash',\n\t\t\t};\n\t\t}\n\n\t\t// -- 4-byte signatures --\n\n\t\t// Requires a sample size of 4 bytes\n\t\tif (this.check([0xFF, 0xD8, 0xFF])) {\n\t\t\tif (this.check([0xF7], {offset: 3})) { // JPG7/SOF55, indicating a ISO/IEC 14495 / JPEG-LS file\n\t\t\t\treturn {\n\t\t\t\t\text: 'jls',\n\t\t\t\t\tmime: 'image/jls',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'jpg',\n\t\t\t\tmime: 'image/jpeg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4F, 0x62, 0x6A, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'avro',\n\t\t\t\tmime: 'application/avro',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('FLIF')) {\n\t\t\treturn {\n\t\t\t\text: 'flif',\n\t\t\t\tmime: 'image/flif',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('8BPS')) {\n\t\t\treturn {\n\t\t\t\text: 'psd',\n\t\t\t\tmime: 'image/vnd.adobe.photoshop',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('WEBP', {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'webp',\n\t\t\t\tmime: 'image/webp',\n\t\t\t};\n\t\t}\n\n\t\t// Musepack, SV8\n\t\tif (this.checkString('MPCK')) {\n\t\t\treturn {\n\t\t\t\text: 'mpc',\n\t\t\t\tmime: 'audio/x-musepack',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('FORM')) {\n\t\t\treturn {\n\t\t\t\text: 'aif',\n\t\t\t\tmime: 'audio/aiff',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('icns', {offset: 0})) {\n\t\t\treturn {\n\t\t\t\text: 'icns',\n\t\t\t\tmime: 'image/icns',\n\t\t\t};\n\t\t}\n\n\t\t// Zip-based file formats\n\t\t// Need to be before the `zip` check\n\t\tif (this.check([0x50, 0x4B, 0x3, 0x4])) { // Local file header signature\n\t\t\ttry {\n\t\t\t\twhile (tokenizer.position + 30 < tokenizer.fileInfo.size) {\n\t\t\t\t\tawait tokenizer.readBuffer(this.buffer, {length: 30});\n\n\t\t\t\t\tconst view = new DataView(this.buffer.buffer);\n\n\t\t\t\t\t// https://en.wikipedia.org/wiki/Zip_(file_format)#File_headers\n\t\t\t\t\tconst zipHeader = {\n\t\t\t\t\t\tcompressedSize: view.getUint32(18, true),\n\t\t\t\t\t\tuncompressedSize: view.getUint32(22, true),\n\t\t\t\t\t\tfilenameLength: view.getUint16(26, true),\n\t\t\t\t\t\textraFieldLength: view.getUint16(28, true),\n\t\t\t\t\t};\n\n\t\t\t\t\tzipHeader.filename = await tokenizer.readToken(new Token.StringType(zipHeader.filenameLength, 'utf-8'));\n\t\t\t\t\tawait tokenizer.ignore(zipHeader.extraFieldLength);\n\n\t\t\t\t\t// Assumes signed `.xpi` from addons.mozilla.org\n\t\t\t\t\tif (zipHeader.filename === 'META-INF/mozilla.rsa') {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'xpi',\n\t\t\t\t\t\t\tmime: 'application/x-xpinstall',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (zipHeader.filename.endsWith('.rels') || zipHeader.filename.endsWith('.xml')) {\n\t\t\t\t\t\tconst type = zipHeader.filename.split('/')[0];\n\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\tcase '_rels':\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'word':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'docx',\n\t\t\t\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'ppt':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'pptx',\n\t\t\t\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'xl':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'xlsx',\n\t\t\t\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'visio':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'vsdx',\n\t\t\t\t\t\t\t\t\tmime: 'application/vnd.visio',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (zipHeader.filename.startsWith('xl/')) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'xlsx',\n\t\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (zipHeader.filename.startsWith('3D/') && zipHeader.filename.endsWith('.model')) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: '3mf',\n\t\t\t\t\t\t\tmime: 'model/3mf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// The docx, xlsx and pptx file types extend the Office Open XML file format:\n\t\t\t\t\t// https://en.wikipedia.org/wiki/Office_Open_XML_file_formats\n\t\t\t\t\t// We look for:\n\t\t\t\t\t// - one entry named '[Content_Types].xml' or '_rels/.rels',\n\t\t\t\t\t// - one entry indicating specific type of file.\n\t\t\t\t\t// MS Office, OpenOffice and LibreOffice may put the parts in different order, so the check should not rely on it.\n\t\t\t\t\tif (zipHeader.filename === 'mimetype' && zipHeader.compressedSize === zipHeader.uncompressedSize) {\n\t\t\t\t\t\tlet mimeType = await tokenizer.readToken(new Token.StringType(zipHeader.compressedSize, 'utf-8'));\n\t\t\t\t\t\tmimeType = mimeType.trim();\n\n\t\t\t\t\t\tswitch (mimeType) {\n\t\t\t\t\t\t\tcase 'application/epub+zip':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'epub',\n\t\t\t\t\t\t\t\t\tmime: 'application/epub+zip',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'application/vnd.oasis.opendocument.text':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'odt',\n\t\t\t\t\t\t\t\t\tmime: 'application/vnd.oasis.opendocument.text',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'application/vnd.oasis.opendocument.spreadsheet':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'ods',\n\t\t\t\t\t\t\t\t\tmime: 'application/vnd.oasis.opendocument.spreadsheet',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'application/vnd.oasis.opendocument.presentation':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'odp',\n\t\t\t\t\t\t\t\t\tmime: 'application/vnd.oasis.opendocument.presentation',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Try to find next header manually when current one is corrupted\n\t\t\t\t\tif (zipHeader.compressedSize === 0) {\n\t\t\t\t\t\tlet nextHeaderIndex = -1;\n\n\t\t\t\t\t\twhile (nextHeaderIndex < 0 && (tokenizer.position < tokenizer.fileInfo.size)) {\n\t\t\t\t\t\t\tawait tokenizer.peekBuffer(this.buffer, {mayBeLess: true});\n\n\t\t\t\t\t\t\tnextHeaderIndex = indexOf(this.buffer, new Uint8Array([0x50, 0x4B, 0x03, 0x04]));\n\n\t\t\t\t\t\t\t// Move position to the next header if found, skip the whole buffer otherwise\n\t\t\t\t\t\t\tawait tokenizer.ignore(nextHeaderIndex >= 0 ? nextHeaderIndex : this.buffer.length);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait tokenizer.ignore(zipHeader.compressedSize);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (!(error instanceof strtok3.EndOfStreamError)) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'zip',\n\t\t\t\tmime: 'application/zip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('OggS')) {\n\t\t\t// This is an OGG container\n\t\t\tawait tokenizer.ignore(28);\n\t\t\tconst type = new Uint8Array(8);\n\t\t\tawait tokenizer.readBuffer(type);\n\n\t\t\t// Needs to be before `ogg` check\n\t\t\tif (_check(type, [0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'opus',\n\t\t\t\t\tmime: 'audio/opus',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If ' theora' in header.\n\t\t\tif (_check(type, [0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogv',\n\t\t\t\t\tmime: 'video/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If '\\x01video' in header.\n\t\t\tif (_check(type, [0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogm',\n\t\t\t\t\tmime: 'video/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If ' FLAC' in header  https://xiph.org/flac/faq.html\n\t\t\tif (_check(type, [0x7F, 0x46, 0x4C, 0x41, 0x43])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'oga',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n\t\t\tif (_check(type, [0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'spx',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If '\\x01vorbis' in header\n\t\t\tif (_check(type, [0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogg',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n\t\t\treturn {\n\t\t\t\text: 'ogx',\n\t\t\t\tmime: 'application/ogg',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x50, 0x4B])\n\t\t\t&& (this.buffer[2] === 0x3 || this.buffer[2] === 0x5 || this.buffer[2] === 0x7)\n\t\t\t&& (this.buffer[3] === 0x4 || this.buffer[3] === 0x6 || this.buffer[3] === 0x8)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'zip',\n\t\t\t\tmime: 'application/zip',\n\t\t\t};\n\t\t}\n\n\t\t//\n\n\t\t// File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n\t\t// It's not required to be first, but it's recommended to be. Almost all ISO base media files start with `ftyp` box.\n\t\t// `ftyp` box must contain a brand major identifier, which must consist of ISO 8859-1 printable characters.\n\t\t// Here we check for 8859-1 printable characters (for simplicity, it's a mask which also catches one non-printable character).\n\t\tif (\n\t\t\tthis.checkString('ftyp', {offset: 4})\n\t\t\t&& (this.buffer[8] & 0x60) !== 0x00 // Brand major, first character ASCII?\n\t\t) {\n\t\t\t// They all can have MIME `video/mp4` except `application/mp4` special-case which is hard to detect.\n\t\t\t// For some cases, we're specific, everything else falls to `video/mp4` with `mp4` extension.\n\t\t\tconst brandMajor = new Token.StringType(4, 'latin1').get(this.buffer, 8).replace('\\0', ' ').trim();\n\t\t\tswitch (brandMajor) {\n\t\t\t\tcase 'avif':\n\t\t\t\tcase 'avis':\n\t\t\t\t\treturn {ext: 'avif', mime: 'image/avif'};\n\t\t\t\tcase 'mif1':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heif'};\n\t\t\t\tcase 'msf1':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heif-sequence'};\n\t\t\t\tcase 'heic':\n\t\t\t\tcase 'heix':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heic'};\n\t\t\t\tcase 'hevc':\n\t\t\t\tcase 'hevx':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heic-sequence'};\n\t\t\t\tcase 'qt':\n\t\t\t\t\treturn {ext: 'mov', mime: 'video/quicktime'};\n\t\t\t\tcase 'M4V':\n\t\t\t\tcase 'M4VH':\n\t\t\t\tcase 'M4VP':\n\t\t\t\t\treturn {ext: 'm4v', mime: 'video/x-m4v'};\n\t\t\t\tcase 'M4P':\n\t\t\t\t\treturn {ext: 'm4p', mime: 'video/mp4'};\n\t\t\t\tcase 'M4B':\n\t\t\t\t\treturn {ext: 'm4b', mime: 'audio/mp4'};\n\t\t\t\tcase 'M4A':\n\t\t\t\t\treturn {ext: 'm4a', mime: 'audio/x-m4a'};\n\t\t\t\tcase 'F4V':\n\t\t\t\t\treturn {ext: 'f4v', mime: 'video/mp4'};\n\t\t\t\tcase 'F4P':\n\t\t\t\t\treturn {ext: 'f4p', mime: 'video/mp4'};\n\t\t\t\tcase 'F4A':\n\t\t\t\t\treturn {ext: 'f4a', mime: 'audio/mp4'};\n\t\t\t\tcase 'F4B':\n\t\t\t\t\treturn {ext: 'f4b', mime: 'audio/mp4'};\n\t\t\t\tcase 'crx':\n\t\t\t\t\treturn {ext: 'cr3', mime: 'image/x-canon-cr3'};\n\t\t\t\tdefault:\n\t\t\t\t\tif (brandMajor.startsWith('3g')) {\n\t\t\t\t\t\tif (brandMajor.startsWith('3g2')) {\n\t\t\t\t\t\t\treturn {ext: '3g2', mime: 'video/3gpp2'};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {ext: '3gp', mime: 'video/3gpp'};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {ext: 'mp4', mime: 'video/mp4'};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('MThd')) {\n\t\t\treturn {\n\t\t\t\text: 'mid',\n\t\t\t\tmime: 'audio/midi',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('wOFF')\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x01, 0x00, 0x00], {offset: 4})\n\t\t\t\t|| this.checkString('OTTO', {offset: 4})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'woff',\n\t\t\t\tmime: 'font/woff',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('wOF2')\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x01, 0x00, 0x00], {offset: 4})\n\t\t\t\t|| this.checkString('OTTO', {offset: 4})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'woff2',\n\t\t\t\tmime: 'font/woff2',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xD4, 0xC3, 0xB2, 0xA1]) || this.check([0xA1, 0xB2, 0xC3, 0xD4])) {\n\t\t\treturn {\n\t\t\t\text: 'pcap',\n\t\t\t\tmime: 'application/vnd.tcpdump.pcap',\n\t\t\t};\n\t\t}\n\n\t\t// Sony DSD Stream File (DSF)\n\t\tif (this.checkString('DSD ')) {\n\t\t\treturn {\n\t\t\t\text: 'dsf',\n\t\t\t\tmime: 'audio/x-dsf', // Non-standard\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('LZIP')) {\n\t\t\treturn {\n\t\t\t\text: 'lz',\n\t\t\t\tmime: 'application/x-lzip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('fLaC')) {\n\t\t\treturn {\n\t\t\t\text: 'flac',\n\t\t\t\tmime: 'audio/x-flac',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x50, 0x47, 0xFB])) {\n\t\t\treturn {\n\t\t\t\text: 'bpg',\n\t\t\t\tmime: 'image/bpg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('wvpk')) {\n\t\t\treturn {\n\t\t\t\text: 'wv',\n\t\t\t\tmime: 'audio/wavpack',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('%PDF')) {\n\t\t\ttry {\n\t\t\t\tawait tokenizer.ignore(1350);\n\t\t\t\tconst maxBufferSize = 10 * 1024 * 1024;\n\t\t\t\tconst buffer = new Uint8Array(Math.min(maxBufferSize, tokenizer.fileInfo.size));\n\t\t\t\tawait tokenizer.readBuffer(buffer, {mayBeLess: true});\n\n\t\t\t\t// Check if this is an Adobe Illustrator file\n\t\t\t\tif (includes(buffer, new TextEncoder().encode('AIPrivateData'))) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'ai',\n\t\t\t\t\t\tmime: 'application/postscript',\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// Swallow end of stream error if file is too small for the Adobe AI check\n\t\t\t\tif (!(error instanceof strtok3.EndOfStreamError)) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Assume this is just a normal PDF\n\t\t\treturn {\n\t\t\t\text: 'pdf',\n\t\t\t\tmime: 'application/pdf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x61, 0x73, 0x6D])) {\n\t\t\treturn {\n\t\t\t\text: 'wasm',\n\t\t\t\tmime: 'application/wasm',\n\t\t\t};\n\t\t}\n\n\t\t// TIFF, little-endian type\n\t\tif (this.check([0x49, 0x49])) {\n\t\t\tconst fileType = await this.readTiffHeader(false);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\n\t\t// TIFF, big-endian type\n\t\tif (this.check([0x4D, 0x4D])) {\n\t\t\tconst fileType = await this.readTiffHeader(true);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('MAC ')) {\n\t\t\treturn {\n\t\t\t\text: 'ape',\n\t\t\t\tmime: 'audio/ape',\n\t\t\t};\n\t\t}\n\n\t\t// https://github.com/file/file/blob/master/magic/Magdir/matroska\n\t\tif (this.check([0x1A, 0x45, 0xDF, 0xA3])) { // Root element: EBML\n\t\t\tasync function readField() {\n\t\t\t\tconst msb = await tokenizer.peekNumber(Token.UINT8);\n\t\t\t\tlet mask = 0x80;\n\t\t\t\tlet ic = 0; // 0 = A, 1 = B, 2 = C, 3 = D\n\n\t\t\t\twhile ((msb & mask) === 0 && mask !== 0) {\n\t\t\t\t\t++ic;\n\t\t\t\t\tmask >>= 1;\n\t\t\t\t}\n\n\t\t\t\tconst id = new Uint8Array(ic + 1);\n\t\t\t\tawait tokenizer.readBuffer(id);\n\t\t\t\treturn id;\n\t\t\t}\n\n\t\t\tasync function readElement() {\n\t\t\t\tconst idField = await readField();\n\t\t\t\tconst lengthField = await readField();\n\n\t\t\t\tlengthField[0] ^= 0x80 >> (lengthField.length - 1);\n\t\t\t\tconst nrLength = Math.min(6, lengthField.length); // JavaScript can max read 6 bytes integer\n\n\t\t\t\tconst idView = new DataView(idField.buffer);\n\t\t\t\tconst lengthView = new DataView(lengthField.buffer, lengthField.length - nrLength, nrLength);\n\n\t\t\t\treturn {\n\t\t\t\t\tid: getUintBE(idView),\n\t\t\t\t\tlen: getUintBE(lengthView),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tasync function readChildren(children) {\n\t\t\t\twhile (children > 0) {\n\t\t\t\t\tconst element = await readElement();\n\t\t\t\t\tif (element.id === 0x42_82) {\n\t\t\t\t\t\tconst rawValue = await tokenizer.readToken(new Token.StringType(element.len));\n\t\t\t\t\t\treturn rawValue.replaceAll(/\\00.*$/g, ''); // Return DocType\n\t\t\t\t\t}\n\n\t\t\t\t\tawait tokenizer.ignore(element.len); // ignore payload\n\t\t\t\t\t--children;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst re = await readElement();\n\t\t\tconst docType = await readChildren(re.len);\n\n\t\t\tswitch (docType) {\n\t\t\t\tcase 'webm':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'webm',\n\t\t\t\t\t\tmime: 'video/webm',\n\t\t\t\t\t};\n\n\t\t\t\tcase 'matroska':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'mkv',\n\t\t\t\t\t\tmime: 'video/x-matroska',\n\t\t\t\t\t};\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// RIFF file format which might be AVI, WAV, QCP, etc\n\t\tif (this.check([0x52, 0x49, 0x46, 0x46])) {\n\t\t\tif (this.check([0x41, 0x56, 0x49], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'avi',\n\t\t\t\t\tmime: 'video/vnd.avi',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0x57, 0x41, 0x56, 0x45], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'wav',\n\t\t\t\t\tmime: 'audio/wav',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// QLCM, QCP file\n\t\t\tif (this.check([0x51, 0x4C, 0x43, 0x4D], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'qcp',\n\t\t\t\t\tmime: 'audio/qcelp',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('SQLi')) {\n\t\t\treturn {\n\t\t\t\text: 'sqlite',\n\t\t\t\tmime: 'application/x-sqlite3',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4E, 0x45, 0x53, 0x1A])) {\n\t\t\treturn {\n\t\t\t\text: 'nes',\n\t\t\t\tmime: 'application/x-nintendo-nes-rom',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Cr24')) {\n\t\t\treturn {\n\t\t\t\text: 'crx',\n\t\t\t\tmime: 'application/x-google-chrome-extension',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('MSCF')\n\t\t\t|| this.checkString('ISc(')\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'cab',\n\t\t\t\tmime: 'application/vnd.ms-cab-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xED, 0xAB, 0xEE, 0xDB])) {\n\t\t\treturn {\n\t\t\t\text: 'rpm',\n\t\t\t\tmime: 'application/x-rpm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xC5, 0xD0, 0xD3, 0xC6])) {\n\t\t\treturn {\n\t\t\t\text: 'eps',\n\t\t\t\tmime: 'application/eps',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x28, 0xB5, 0x2F, 0xFD])) {\n\t\t\treturn {\n\t\t\t\text: 'zst',\n\t\t\t\tmime: 'application/zstd',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x7F, 0x45, 0x4C, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'elf',\n\t\t\t\tmime: 'application/x-elf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x21, 0x42, 0x44, 0x4E])) {\n\t\t\treturn {\n\t\t\t\text: 'pst',\n\t\t\t\tmime: 'application/vnd.ms-outlook',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('PAR1')) {\n\t\t\treturn {\n\t\t\t\text: 'parquet',\n\t\t\t\tmime: 'application/x-parquet',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xCF, 0xFA, 0xED, 0xFE])) {\n\t\t\treturn {\n\t\t\t\text: 'macho',\n\t\t\t\tmime: 'application/x-mach-binary',\n\t\t\t};\n\t\t}\n\n\t\t// -- 5-byte signatures --\n\n\t\tif (this.check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'otf',\n\t\t\t\tmime: 'font/otf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('#!AMR')) {\n\t\t\treturn {\n\t\t\t\text: 'amr',\n\t\t\t\tmime: 'audio/amr',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('{\\\\rtf')) {\n\t\t\treturn {\n\t\t\t\text: 'rtf',\n\t\t\t\tmime: 'application/rtf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x46, 0x4C, 0x56, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'flv',\n\t\t\t\tmime: 'video/x-flv',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('IMPM')) {\n\t\t\treturn {\n\t\t\t\text: 'it',\n\t\t\t\tmime: 'audio/x-it',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('-lh0-', {offset: 2})\n\t\t\t|| this.checkString('-lh1-', {offset: 2})\n\t\t\t|| this.checkString('-lh2-', {offset: 2})\n\t\t\t|| this.checkString('-lh3-', {offset: 2})\n\t\t\t|| this.checkString('-lh4-', {offset: 2})\n\t\t\t|| this.checkString('-lh5-', {offset: 2})\n\t\t\t|| this.checkString('-lh6-', {offset: 2})\n\t\t\t|| this.checkString('-lh7-', {offset: 2})\n\t\t\t|| this.checkString('-lzs-', {offset: 2})\n\t\t\t|| this.checkString('-lz4-', {offset: 2})\n\t\t\t|| this.checkString('-lz5-', {offset: 2})\n\t\t\t|| this.checkString('-lhd-', {offset: 2})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'lzh',\n\t\t\t\tmime: 'application/x-lzh-compressed',\n\t\t\t};\n\t\t}\n\n\t\t// MPEG program stream (PS or MPEG-PS)\n\t\tif (this.check([0x00, 0x00, 0x01, 0xBA])) {\n\t\t\t//  MPEG-PS, MPEG-1 Part 1\n\t\t\tif (this.check([0x21], {offset: 4, mask: [0xF1]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mpg', // May also be .ps, .mpeg\n\t\t\t\t\tmime: 'video/MP1S',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// MPEG-PS, MPEG-2 Part 1\n\t\t\tif (this.check([0x44], {offset: 4, mask: [0xC4]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mpg', // May also be .mpg, .m2p, .vob or .sub\n\t\t\t\t\tmime: 'video/MP2P',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('ITSF')) {\n\t\t\treturn {\n\t\t\t\text: 'chm',\n\t\t\t\tmime: 'application/vnd.ms-htmlhelp',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xCA, 0xFE, 0xBA, 0xBE])) {\n\t\t\treturn {\n\t\t\t\text: 'class',\n\t\t\t\tmime: 'application/java-vm',\n\t\t\t};\n\t\t}\n\n\t\t// -- 6-byte signatures --\n\n\t\tif (this.check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'xz',\n\t\t\t\tmime: 'application/x-xz',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('<?xml ')) {\n\t\t\treturn {\n\t\t\t\text: 'xml',\n\t\t\t\tmime: 'application/xml',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n\t\t\treturn {\n\t\t\t\text: '7z',\n\t\t\t\tmime: 'application/x-7z-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7])\n\t\t\t&& (this.buffer[6] === 0x0 || this.buffer[6] === 0x1)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'rar',\n\t\t\t\tmime: 'application/x-rar-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('solid ')) {\n\t\t\treturn {\n\t\t\t\text: 'stl',\n\t\t\t\tmime: 'model/stl',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('AC')) {\n\t\t\tconst version = new Token.StringType(4, 'latin1').get(this.buffer, 2);\n\t\t\tif (version.match('^d*') && version >= 1000 && version <= 1050) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'dwg',\n\t\t\t\t\tmime: 'image/vnd.dwg',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('070707')) {\n\t\t\treturn {\n\t\t\t\text: 'cpio',\n\t\t\t\tmime: 'application/x-cpio',\n\t\t\t};\n\t\t}\n\n\t\t// -- 7-byte signatures --\n\n\t\tif (this.checkString('BLENDER')) {\n\t\t\treturn {\n\t\t\t\text: 'blend',\n\t\t\t\tmime: 'application/x-blender',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('!<arch>')) {\n\t\t\tawait tokenizer.ignore(8);\n\t\t\tconst string = await tokenizer.readToken(new Token.StringType(13, 'ascii'));\n\t\t\tif (string === 'debian-binary') {\n\t\t\t\treturn {\n\t\t\t\t\text: 'deb',\n\t\t\t\t\tmime: 'application/x-deb',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'ar',\n\t\t\t\tmime: 'application/x-unix-archive',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('**ACE', {offset: 7})) {\n\t\t\tawait tokenizer.peekBuffer(this.buffer, {length: 14, mayBeLess: true});\n\t\t\tif (this.checkString('**', {offset: 12})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ace',\n\t\t\t\t\tmime: 'application/x-ace-compressed',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// -- 8-byte signatures --\n\n\t\tif (this.check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\t\t// APNG format (https://wiki.mozilla.org/APNG_Specification)\n\t\t\t// 1. Find the first IDAT (image data) chunk (49 44 41 54)\n\t\t\t// 2. Check if there is an \"acTL\" chunk before the IDAT one (61 63 54 4C)\n\n\t\t\t// Offset calculated as follows:\n\t\t\t// - 8 bytes: PNG signature\n\t\t\t// - 4 (length) + 4 (chunk type) + 13 (chunk data) + 4 (CRC): IHDR chunk\n\n\t\t\tawait tokenizer.ignore(8); // ignore PNG signature\n\n\t\t\tasync function readChunkHeader() {\n\t\t\t\treturn {\n\t\t\t\t\tlength: await tokenizer.readToken(Token.INT32_BE),\n\t\t\t\t\ttype: await tokenizer.readToken(new Token.StringType(4, 'latin1')),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tconst chunk = await readChunkHeader();\n\t\t\t\tif (chunk.length < 0) {\n\t\t\t\t\treturn; // Invalid chunk length\n\t\t\t\t}\n\n\t\t\t\tswitch (chunk.type) {\n\t\t\t\t\tcase 'IDAT':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'png',\n\t\t\t\t\t\t\tmime: 'image/png',\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'acTL':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'apng',\n\t\t\t\t\t\t\tmime: 'image/apng',\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tawait tokenizer.ignore(chunk.length + 4); // Ignore chunk-data + CRC\n\t\t\t\t}\n\t\t\t} while (tokenizer.position + 8 < tokenizer.fileInfo.size);\n\n\t\t\treturn {\n\t\t\t\text: 'png',\n\t\t\t\tmime: 'image/png',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x41, 0x52, 0x52, 0x4F, 0x57, 0x31, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'arrow',\n\t\t\t\tmime: 'application/x-apache-arrow',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'glb',\n\t\t\t\tmime: 'model/gltf-binary',\n\t\t\t};\n\t\t}\n\n\t\t// `mov` format variants\n\t\tif (\n\t\t\tthis.check([0x66, 0x72, 0x65, 0x65], {offset: 4}) // `free`\n\t\t\t|| this.check([0x6D, 0x64, 0x61, 0x74], {offset: 4}) // `mdat` MJPEG\n\t\t\t|| this.check([0x6D, 0x6F, 0x6F, 0x76], {offset: 4}) // `moov`\n\t\t\t|| this.check([0x77, 0x69, 0x64, 0x65], {offset: 4}) // `wide`\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mov',\n\t\t\t\tmime: 'video/quicktime',\n\t\t\t};\n\t\t}\n\n\t\t// -- 9-byte signatures --\n\n\t\tif (this.check([0x49, 0x49, 0x52, 0x4F, 0x08, 0x00, 0x00, 0x00, 0x18])) {\n\t\t\treturn {\n\t\t\t\text: 'orf',\n\t\t\t\tmime: 'image/x-olympus-orf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('gimp xcf ')) {\n\t\t\treturn {\n\t\t\t\text: 'xcf',\n\t\t\t\tmime: 'image/x-xcf',\n\t\t\t};\n\t\t}\n\n\t\t// -- 12-byte signatures --\n\n\t\tif (this.check([0x49, 0x49, 0x55, 0x00, 0x18, 0x00, 0x00, 0x00, 0x88, 0xE7, 0x74, 0xD8])) {\n\t\t\treturn {\n\t\t\t\text: 'rw2',\n\t\t\t\tmime: 'image/x-panasonic-rw2',\n\t\t\t};\n\t\t}\n\n\t\t// ASF_Header_Object first 80 bytes\n\t\tif (this.check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n\t\t\tasync function readHeader() {\n\t\t\t\tconst guid = new Uint8Array(16);\n\t\t\t\tawait tokenizer.readBuffer(guid);\n\t\t\t\treturn {\n\t\t\t\t\tid: guid,\n\t\t\t\t\tsize: Number(await tokenizer.readToken(Token.UINT64_LE)),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait tokenizer.ignore(30);\n\t\t\t// Search for header should be in first 1KB of file.\n\t\t\twhile (tokenizer.position + 24 < tokenizer.fileInfo.size) {\n\t\t\t\tconst header = await readHeader();\n\t\t\t\tlet payload = header.size - 24;\n\t\t\t\tif (_check(header.id, [0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65])) {\n\t\t\t\t\t// Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n\t\t\t\t\tconst typeId = new Uint8Array(16);\n\t\t\t\t\tpayload -= await tokenizer.readBuffer(typeId);\n\n\t\t\t\t\tif (_check(typeId, [0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t\t// Found audio:\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\t\tmime: 'audio/x-ms-asf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_check(typeId, [0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t\t// Found video:\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\t\tmime: 'video/x-ms-asf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tawait tokenizer.ignore(payload);\n\t\t\t}\n\n\t\t\t// Default to ASF generic extension\n\t\t\treturn {\n\t\t\t\text: 'asf',\n\t\t\t\tmime: 'application/vnd.ms-asf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\t\treturn {\n\t\t\t\text: 'ktx',\n\t\t\t\tmime: 'image/ktx',\n\t\t\t};\n\t\t}\n\n\t\tif ((this.check([0x7E, 0x10, 0x04]) || this.check([0x7E, 0x18, 0x04])) && this.check([0x30, 0x4D, 0x49, 0x45], {offset: 4})) {\n\t\t\treturn {\n\t\t\t\text: 'mie',\n\t\t\t\tmime: 'application/x-mie',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x27, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], {offset: 2})) {\n\t\t\treturn {\n\t\t\t\text: 'shp',\n\t\t\t\tmime: 'application/x-esri-shape',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFF, 0x4F, 0xFF, 0x51])) {\n\t\t\treturn {\n\t\t\t\text: 'j2c',\n\t\t\t\tmime: 'image/j2c',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n\t\t\t// JPEG-2000 family\n\n\t\t\tawait tokenizer.ignore(20);\n\t\t\tconst type = await tokenizer.readToken(new Token.StringType(4, 'ascii'));\n\t\t\tswitch (type) {\n\t\t\t\tcase 'jp2 ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jp2',\n\t\t\t\t\t\tmime: 'image/jp2',\n\t\t\t\t\t};\n\t\t\t\tcase 'jpx ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jpx',\n\t\t\t\t\t\tmime: 'image/jpx',\n\t\t\t\t\t};\n\t\t\t\tcase 'jpm ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jpm',\n\t\t\t\t\t\tmime: 'image/jpm',\n\t\t\t\t\t};\n\t\t\t\tcase 'mjp2':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'mj2',\n\t\t\t\t\t\tmime: 'image/mj2',\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0xFF, 0x0A])\n\t\t\t|| this.check([0x00, 0x00, 0x00, 0x0C, 0x4A, 0x58, 0x4C, 0x20, 0x0D, 0x0A, 0x87, 0x0A])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'jxl',\n\t\t\t\tmime: 'image/jxl',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFE, 0xFF])) { // UTF-16-BOM-LE\n\t\t\tif (this.check([0, 60, 0, 63, 0, 120, 0, 109, 0, 108], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'xml',\n\t\t\t\t\tmime: 'application/xml',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn undefined; // Some unknown text based format\n\t\t}\n\n\t\t// -- Unsafe signatures --\n\n\t\tif (\n\t\t\tthis.check([0x0, 0x0, 0x1, 0xBA])\n\t\t\t|| this.check([0x0, 0x0, 0x1, 0xB3])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mpg',\n\t\t\t\tmime: 'video/mpeg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'ttf',\n\t\t\t\tmime: 'font/ttf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x01, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'ico',\n\t\t\t\tmime: 'image/x-icon',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x02, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'cur',\n\t\t\t\tmime: 'image/x-icon',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n\t\t\t// Detected Microsoft Compound File Binary File (MS-CFB) Format.\n\t\t\treturn {\n\t\t\t\text: 'cfb',\n\t\t\t\tmime: 'application/x-cfb',\n\t\t\t};\n\t\t}\n\n\t\t// Increase sample size from 12 to 256.\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(256, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\tif (this.check([0x61, 0x63, 0x73, 0x70], {offset: 36})) {\n\t\t\treturn {\n\t\t\t\text: 'icc',\n\t\t\t\tmime: 'application/vnd.iccprofile',\n\t\t\t};\n\t\t}\n\n\t\t// -- 15-byte signatures --\n\n\t\tif (this.checkString('BEGIN:')) {\n\t\t\tif (this.checkString('VCARD', {offset: 6})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'vcf',\n\t\t\t\t\tmime: 'text/vcard',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.checkString('VCALENDAR', {offset: 6})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ics',\n\t\t\t\t\tmime: 'text/calendar',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// `raf` is here just to keep all the raw image detectors together.\n\t\tif (this.checkString('FUJIFILMCCD-RAW')) {\n\t\t\treturn {\n\t\t\t\text: 'raf',\n\t\t\t\tmime: 'image/x-fujifilm-raf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Extended Module:')) {\n\t\t\treturn {\n\t\t\t\text: 'xm',\n\t\t\t\tmime: 'audio/x-xm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Creative Voice File')) {\n\t\t\treturn {\n\t\t\t\text: 'voc',\n\t\t\t\tmime: 'audio/x-voc',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x04, 0x00, 0x00, 0x00]) && this.buffer.length >= 16) { // Rough & quick check Pickle/ASAR\n\t\t\tconst jsonSize = new DataView(this.buffer.buffer).getUint32(12, true);\n\n\t\t\tif (jsonSize > 12 && this.buffer.length >= jsonSize + 16) {\n\t\t\t\ttry {\n\t\t\t\t\tconst header = new TextDecoder().decode(this.buffer.slice(16, jsonSize + 16));\n\t\t\t\t\tconst json = JSON.parse(header);\n\t\t\t\t\t// Check if Pickle is ASAR\n\t\t\t\t\tif (json.files) { // Final check, assuring Pickle/ASAR format\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asar',\n\t\t\t\t\t\t\tmime: 'application/x-asar',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} catch {}\n\t\t\t}\n\t\t}\n\n\t\tif (this.check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n\t\t\treturn {\n\t\t\t\text: 'mxf',\n\t\t\t\tmime: 'application/mxf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('SCRM', {offset: 44})) {\n\t\t\treturn {\n\t\t\t\text: 's3m',\n\t\t\t\tmime: 'audio/x-s3m',\n\t\t\t};\n\t\t}\n\n\t\t// Raw MPEG-2 transport stream (188-byte packets)\n\t\tif (this.check([0x47]) && this.check([0x47], {offset: 188})) {\n\t\t\treturn {\n\t\t\t\text: 'mts',\n\t\t\t\tmime: 'video/mp2t',\n\t\t\t};\n\t\t}\n\n\t\t// Blu-ray Disc Audio-Video (BDAV) MPEG-2 transport stream has 4-byte TP_extra_header before each 188-byte packet\n\t\tif (this.check([0x47], {offset: 4}) && this.check([0x47], {offset: 196})) {\n\t\t\treturn {\n\t\t\t\text: 'mts',\n\t\t\t\tmime: 'video/mp2t',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {offset: 60})) {\n\t\t\treturn {\n\t\t\t\text: 'mobi',\n\t\t\t\tmime: 'application/x-mobipocket-ebook',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x44, 0x49, 0x43, 0x4D], {offset: 128})) {\n\t\t\treturn {\n\t\t\t\text: 'dcm',\n\t\t\t\tmime: 'application/dicom',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4C, 0x00, 0x00, 0x00, 0x01, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'lnk',\n\t\t\t\tmime: 'application/x.ms.shortcut', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x62, 0x6F, 0x6F, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x61, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'alias',\n\t\t\t\tmime: 'application/x.apple.alias', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Kaydara FBX Binary  \\u0000')) {\n\t\t\treturn {\n\t\t\t\text: 'fbx',\n\t\t\t\tmime: 'application/x.autodesk.fbx', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x4C, 0x50], {offset: 34})\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x00, 0x01], {offset: 8})\n\t\t\t\t|| this.check([0x01, 0x00, 0x02], {offset: 8})\n\t\t\t\t|| this.check([0x02, 0x00, 0x02], {offset: 8})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'eot',\n\t\t\t\tmime: 'application/vnd.ms-fontobject',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x06, 0x06, 0xED, 0xF5, 0xD8, 0x1D, 0x46, 0xE5, 0xBD, 0x31, 0xEF, 0xE7, 0xFE, 0x74, 0xB7, 0x1D])) {\n\t\t\treturn {\n\t\t\t\text: 'indd',\n\t\t\t\tmime: 'application/x-indesign',\n\t\t\t};\n\t\t}\n\n\t\t// Increase sample size from 256 to 512\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(512, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\t// Requires a buffer size of 512 bytes\n\t\tif (tarHeaderChecksumMatches(this.buffer)) {\n\t\t\treturn {\n\t\t\t\text: 'tar',\n\t\t\t\tmime: 'application/x-tar',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFF, 0xFE])) { // UTF-16-BOM-BE\n\t\t\tif (this.check([60, 0, 63, 0, 120, 0, 109, 0, 108, 0], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'xml',\n\t\t\t\t\tmime: 'application/xml',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0xFF, 0x0E, 0x53, 0x00, 0x6B, 0x00, 0x65, 0x00, 0x74, 0x00, 0x63, 0x00, 0x68, 0x00, 0x55, 0x00, 0x70, 0x00, 0x20, 0x00, 0x4D, 0x00, 0x6F, 0x00, 0x64, 0x00, 0x65, 0x00, 0x6C, 0x00], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'skp',\n\t\t\t\t\tmime: 'application/vnd.sketchup.skp',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn undefined; // Some text based format\n\t\t}\n\n\t\tif (this.checkString('-----BEGIN PGP MESSAGE-----')) {\n\t\t\treturn {\n\t\t\t\text: 'pgp',\n\t\t\t\tmime: 'application/pgp-encrypted',\n\t\t\t};\n\t\t}\n\n\t\t// Check MPEG 1 or 2 Layer 3 header, or 'layer 0' for ADTS (MPEG sync-word 0xFFE)\n\t\tif (this.buffer.length >= 2 && this.check([0xFF, 0xE0], {offset: 0, mask: [0xFF, 0xE0]})) {\n\t\t\tif (this.check([0x10], {offset: 1, mask: [0x16]})) {\n\t\t\t\t// Check for (ADTS) MPEG-2\n\t\t\t\tif (this.check([0x08], {offset: 1, mask: [0x08]})) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'aac',\n\t\t\t\t\t\tmime: 'audio/aac',\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Must be (ADTS) MPEG-4\n\t\t\t\treturn {\n\t\t\t\t\text: 'aac',\n\t\t\t\t\tmime: 'audio/aac',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// MPEG 1 or 2 Layer 3 header\n\t\t\t// Check for MPEG layer 3\n\t\t\tif (this.check([0x02], {offset: 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp3',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Check for MPEG layer 2\n\t\t\tif (this.check([0x04], {offset: 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp2',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Check for MPEG layer 1\n\t\t\tif (this.check([0x06], {offset: 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp1',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tasync readTiffTag(bigEndian) {\n\t\tconst tagId = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n\t\tthis.tokenizer.ignore(10);\n\t\tswitch (tagId) {\n\t\t\tcase 50_341:\n\t\t\t\treturn {\n\t\t\t\t\text: 'arw',\n\t\t\t\t\tmime: 'image/x-sony-arw',\n\t\t\t\t};\n\t\t\tcase 50_706:\n\t\t\t\treturn {\n\t\t\t\t\text: 'dng',\n\t\t\t\t\tmime: 'image/x-adobe-dng',\n\t\t\t\t};\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tasync readTiffIFD(bigEndian) {\n\t\tconst numberOfTags = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n\t\tfor (let n = 0; n < numberOfTags; ++n) {\n\t\t\tconst fileType = await this.readTiffTag(bigEndian);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync readTiffHeader(bigEndian) {\n\t\tconst version = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 2);\n\t\tconst ifdOffset = (bigEndian ? Token.UINT32_BE : Token.UINT32_LE).get(this.buffer, 4);\n\n\t\tif (version === 42) {\n\t\t\t// TIFF file header\n\t\t\tif (ifdOffset >= 6) {\n\t\t\t\tif (this.checkString('CR', {offset: 8})) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'cr2',\n\t\t\t\t\t\tmime: 'image/x-canon-cr2',\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (ifdOffset >= 8 && (this.check([0x1C, 0x00, 0xFE, 0x00], {offset: 8}) || this.check([0x1F, 0x00, 0x0B, 0x00], {offset: 8}))) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'nef',\n\t\t\t\t\t\tmime: 'image/x-nikon-nef',\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.tokenizer.ignore(ifdOffset);\n\t\t\tconst fileType = await this.readTiffIFD(bigEndian);\n\t\t\treturn fileType ?? {\n\t\t\t\text: 'tif',\n\t\t\t\tmime: 'image/tiff',\n\t\t\t};\n\t\t}\n\n\t\tif (version === 43) {\t// Big TIFF file header\n\t\t\treturn {\n\t\t\t\text: 'tif',\n\t\t\t\tmime: 'image/tiff',\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport const supportedExtensions = new Set(extensions);\nexport const supportedMimeTypes = new Set(mimeTypes);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3154, "column": 0}, "map": {"version":3,"sources":["file:///home/pro/ByteForce/ali_zayed/node_modules/file-type/index.js"],"sourcesContent":["/**\nNode.js specific entry point.\n*/\n\nimport {ReadableStream as WebReadableStream} from 'node:stream/web';\nimport * as strtok3 from 'strtok3';\nimport {FileTypeParser, reasonableDetectionSizeInBytes} from './core.js';\n\nexport class NodeFileTypeParser extends FileTypeParser {\n\tasync fromStream(stream) {\n\t\tconst tokenizer = await (stream instanceof WebReadableStream ? strtok3.fromWebStream(stream) : strtok3.fromStream(stream));\n\t\ttry {\n\t\t\treturn super.fromTokenizer(tokenizer);\n\t\t} finally {\n\t\t\tawait tokenizer.close();\n\t\t}\n\t}\n\n\tasync fromFile(path) {\n\t\tconst tokenizer = await strtok3.fromFile(path);\n\t\ttry {\n\t\t\treturn await super.fromTokenizer(tokenizer);\n\t\t} finally {\n\t\t\tawait tokenizer.close();\n\t\t}\n\t}\n\n\tasync toDetectionStream(readableStream, options = {}) {\n\t\tconst {default: stream} = await import('node:stream');\n\t\tconst {sampleSize = reasonableDetectionSizeInBytes} = options;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treadableStream.on('error', reject);\n\n\t\t\treadableStream.once('readable', () => {\n\t\t\t\t(async () => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Set up output stream\n\t\t\t\t\t\tconst pass = new stream.PassThrough();\n\t\t\t\t\t\tconst outputStream = stream.pipeline ? stream.pipeline(readableStream, pass, () => {}) : readableStream.pipe(pass);\n\n\t\t\t\t\t\t// Read the input stream and detect the filetype\n\t\t\t\t\t\tconst chunk = readableStream.read(sampleSize) ?? readableStream.read() ?? new Uint8Array(0);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tpass.fileType = await this.fromBuffer(chunk);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tif (error instanceof strtok3.EndOfStreamError) {\n\t\t\t\t\t\t\t\tpass.fileType = undefined;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve(outputStream);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport async function fileTypeFromFile(path, fileTypeOptions) {\n\treturn (new NodeFileTypeParser(fileTypeOptions)).fromFile(path, fileTypeOptions);\n}\n\nexport async function fileTypeFromStream(stream, fileTypeOptions) {\n\treturn (new NodeFileTypeParser(fileTypeOptions)).fromStream(stream);\n}\n\nexport async function fileTypeStream(readableStream, options = {}) {\n\treturn new NodeFileTypeParser().toDetectionStream(readableStream, options);\n}\n\nexport {fileTypeFromTokenizer, fileTypeFromBuffer, fileTypeFromBlob, FileTypeParser, supportedMimeTypes, supportedExtensions} from './core.js';\n"],"names":[],"mappings":"AAAA;;AAEA;;;;;;AAEA;AACA;AACA;;;;AAEO,MAAM,2BAA2B,oIAAA,CAAA,iBAAc;IACrD,MAAM,WAAW,MAAM,EAAE;QACxB,MAAM,YAAY,MAAM,CAAC,kBAAkB,mIAAA,CAAA,iBAAiB,GAAG,wKAAQ,aAAa,CAAC,UAAU,wKAAQ,UAAU,CAAC,OAAO;QACzH,IAAI;YACH,OAAO,KAAK,CAAC,cAAc;QAC5B,SAAU;YACT,MAAM,UAAU,KAAK;QACtB;IACD;IAEA,MAAM,SAAS,IAAI,EAAE;QACpB,MAAM,YAAY,MAAM,wKAAQ,QAAQ,CAAC;QACzC,IAAI;YACH,OAAO,MAAM,KAAK,CAAC,cAAc;QAClC,SAAU;YACT,MAAM,UAAU,KAAK;QACtB;IACD;IAEA,MAAM,kBAAkB,cAAc,EAAE,UAAU,CAAC,CAAC,EAAE;QACrD,MAAM,EAAC,SAAS,MAAM,EAAC,GAAG;QAC1B,MAAM,EAAC,aAAa,oIAAA,CAAA,iCAA8B,EAAC,GAAG;QAEtD,OAAO,IAAI,QAAQ,CAAC,SAAS;YAC5B,eAAe,EAAE,CAAC,SAAS;YAE3B,eAAe,IAAI,CAAC,YAAY;gBAC/B,CAAC;oBACA,IAAI;wBACH,uBAAuB;wBACvB,MAAM,OAAO,IAAI,OAAO,WAAW;wBACnC,MAAM,eAAe,OAAO,QAAQ,GAAG,OAAO,QAAQ,CAAC,gBAAgB,MAAM,KAAO,KAAK,eAAe,IAAI,CAAC;wBAE7G,gDAAgD;wBAChD,MAAM,QAAQ,eAAe,IAAI,CAAC,eAAe,eAAe,IAAI,MAAM,IAAI,WAAW;wBACzF,IAAI;4BACH,KAAK,QAAQ,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC;wBACvC,EAAE,OAAO,OAAO;4BACf,IAAI,iBAAiB,wKAAQ,gBAAgB,EAAE;gCAC9C,KAAK,QAAQ,GAAG;4BACjB,OAAO;gCACN,OAAO;4BACR;wBACD;wBAEA,QAAQ;oBACT,EAAE,OAAO,OAAO;wBACf,OAAO;oBACR;gBACD,CAAC;YACF;QACD;IACD;AACD;AAEO,eAAe,iBAAiB,IAAI,EAAE,eAAe;IAC3D,OAAO,AAAC,IAAI,mBAAmB,iBAAkB,QAAQ,CAAC,MAAM;AACjE;AAEO,eAAe,mBAAmB,MAAM,EAAE,eAAe;IAC/D,OAAO,AAAC,IAAI,mBAAmB,iBAAkB,UAAU,CAAC;AAC7D;AAEO,eAAe,eAAe,cAAc,EAAE,UAAU,CAAC,CAAC;IAChE,OAAO,IAAI,qBAAqB,iBAAiB,CAAC,gBAAgB;AACnE","ignoreList":[0]}},
    {"offset": {"line": 3226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}